---update 3
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v68 = 0;
				local v69;
				while true do
					if (v68 == 0) then
						v69 = v2(v0(v30, 16));
						if v19 then
							local v96 = 0;
							local v97;
							while true do
								if (v96 == 1) then
									return v97;
								end
								if (v96 == 0) then
									v97 = v5(v69, v19);
									v19 = nil;
									v96 = 1;
								end
							end
						else
							return v69;
						end
						break;
					end
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v70 = (v31 / ((5 - (12 - 9)) ^ (v32 - (2 - 1)))) % (2 ^ (((v33 - (1 + 0)) - (v32 - (878 - (282 + (712 - (32 + 85)))))) + ((1606 + 32) - (338 + 1185 + 114))));
				return v70 - (v70 % (1 - 0));
			else
				local v71 = (4 - 2) ^ (v32 - (620 - (555 + 64)));
				return (((v31 % (v71 + v71)) >= v71) and (932 - (857 + 74))) or (568 - (367 + 201));
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35, v36 = v1(v16, v18, v18 + (959 - (892 + 65)));
			v18 = v18 + (4 - 2);
			return (v36 * (472 - 216)) + v35;
		end
		local function v23()
			local v37, v38, v39, v40 = v1(v16, v18, v18 + (183 - (67 + 113)));
			v18 = v18 + 3 + 1;
			return (v40 * (30800116 - (55733837 - 41710937))) + (v39 * (160901 - (96317 - (802 + 150)))) + (v38 * (606 - (87 + (707 - 444)))) + v37;
		end
		local function v24()
			local v41 = v23();
			local v42 = v23();
			local v43 = 1 - 0;
			local v44 = (v20(v42, 1 + 0, 1017 - (915 + 82)) * ((3 - 1) ^ (90 - 58))) + v41;
			local v45 = v20(v42, 13 + 8, 31);
			local v46 = ((v20(v42, 41 - 9) == (1188 - ((1507 - (145 + 293)) + 118))) and -(2 - 1)) or 1;
			if (v45 == (0 - 0)) then
				if (v44 == (0 + 0)) then
					return v46 * (0 - 0);
				else
					v45 = 1 + 0;
					v43 = 791 - ((798 - (44 + 386)) + 423);
				end
			elseif (v45 == (6433 - (5872 - (998 + 488)))) then
				return ((v44 == ((6 + 12) - (10 + 7 + 1))) and (v46 * ((3 - 2) / (442 - (416 + 26))))) or (v46 * NaN);
			end
			return v8(v46, v45 - (3266 - 2243)) * (v43 + (v44 / ((1 + (773 - (201 + 571))) ^ 52)));
		end
		local function v25(v47)
			local v48;
			if not v47 then
				v47 = v23();
				if (v47 == (0 + 0)) then
					return "";
				end
			end
			v48 = v3(v16, v18, (v18 + v47) - (1139 - (116 + 1022)));
			v18 = v18 + v47;
			local v49 = {};
			for v66 = 4 - 3, #v48 do
				v49[v66] = v2(v1(v3(v48, v66, v66)));
			end
			return v6(v49);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v50 = 0;
			local v51;
			local v52;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			while true do
				if (2 ~= v50) then
				else
					v55 = nil;
					v56 = nil;
					v50 = 3;
				end
				if ((1 - 0) == v50) then
					v53 = nil;
					v54 = nil;
					v50 = 3 - 1;
				end
				if (v50 == (3 - 0)) then
					v57 = nil;
					v58 = nil;
					v50 = 4;
				end
				if (v50 ~= 4) then
				else
					while true do
						if (v51 == (2 + 1)) then
							v58 = nil;
							while true do
								local v98 = 0;
								local v99;
								while true do
									if (v98 ~= 0) then
									else
										v99 = 0 - 0;
										while true do
											if (v99 == (1252 - (721 + 530))) then
												if (v52 ~= 0) then
												else
													local v107 = 1271 - (945 + 326);
													local v108;
													while true do
														if (v107 == (0 - 0)) then
															v108 = 0;
															while true do
																if (v108 == (1 + 0)) then
																	local v360 = 0;
																	while true do
																		if (1 ~= v360) then
																		else
																			v108 = 702 - (271 + 429);
																			break;
																		end
																		if (v360 == (0 + 0)) then
																			v55 = {};
																			v56 = {v53,v54,nil,v55};
																			v360 = 1;
																		end
																	end
																end
																if (v108 ~= 0) then
																else
																	local v361 = 1086 - (461 + 625);
																	local v362;
																	while true do
																		if (v361 == 0) then
																			v362 = 0;
																			while true do
																				if (v362 == (1288 - (993 + 295))) then
																					v53 = {};
																					v54 = {};
																					v362 = 1 + 0;
																				end
																				if (v362 ~= 1) then
																				else
																					v108 = 1172 - (418 + 753);
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v108 ~= 2) then
																else
																	v52 = 1;
																	break;
																end
															end
															break;
														end
													end
												end
												break;
											end
											if (v99 ~= (0 + 0)) then
											else
												local v105 = 0 + 0;
												local v106;
												while true do
													if (v105 ~= (0 + 0)) then
													else
														v106 = 0;
														while true do
															if ((0 + 0) == v106) then
																local v168 = 529 - (406 + 123);
																while true do
																	if (v168 == (1769 - (1749 + 20))) then
																		if (v52 ~= (1 + 0)) then
																		else
																			local v426 = 1322 - (1249 + 73);
																			local v427;
																			while true do
																				if (0 == v426) then
																					v427 = 0 + 0;
																					while true do
																						if (v427 == (1145 - (466 + 679))) then
																							local v441 = 0;
																							while true do
																								if ((0 - 0) == v441) then
																									local v447 = 0 - 0;
																									while true do
																										if ((1900 - (106 + 1794)) ~= v447) then
																										else
																											v57 = v23();
																											v58 = {};
																											v447 = 1;
																										end
																										if (1 == v447) then
																											v441 = 1;
																											break;
																										end
																									end
																								end
																								if (v441 ~= (1 + 0)) then
																								else
																									v427 = 1;
																									break;
																								end
																							end
																						end
																						if (v427 == (1 + 1)) then
																							v52 = 5 - 3;
																							break;
																						end
																						if (v427 ~= (2 - 1)) then
																						else
																							local v442 = 114 - (4 + 110);
																							while true do
																								if (v442 ~= 0) then
																								else
																									for v449 = 1, v57 do
																										local v450 = 0;
																										local v451;
																										local v452;
																										local v453;
																										local v454;
																										while true do
																											if (v450 == 2) then
																												while true do
																													if (v451 == 1) then
																														v454 = nil;
																														while true do
																															if (v452 ~= 0) then
																															else
																																local v464 = 0;
																																while true do
																																	if ((584 - (57 + 527)) ~= v464) then
																																	else
																																		v453 = v21();
																																		v454 = nil;
																																		v464 = 1428 - (41 + 1386);
																																	end
																																	if (v464 ~= 1) then
																																	else
																																		v452 = 1;
																																		break;
																																	end
																																end
																															end
																															if (1 ~= v452) then
																															else
																																if (v453 == (104 - (17 + 86))) then
																																	v454 = v21() ~= (0 + 0);
																																elseif (v453 == 2) then
																																	v454 = v24();
																																elseif (v453 ~= (6 - 3)) then
																																else
																																	v454 = v25();
																																end
																																v58[v449] = v454;
																																break;
																															end
																														end
																														break;
																													end
																													if (0 == v451) then
																														local v456 = 0 - 0;
																														while true do
																															if (v456 == 1) then
																																v451 = 1;
																																break;
																															end
																															if (v456 ~= 0) then
																															else
																																v452 = 0;
																																v453 = nil;
																																v456 = 1;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v450 == (167 - (122 + 44))) then
																												v453 = nil;
																												v454 = nil;
																												v450 = 2;
																											end
																											if (v450 ~= 0) then
																											else
																												v451 = 0;
																												v452 = nil;
																												v450 = 1;
																											end
																										end
																									end
																									v56[5 - 2] = v21();
																									v442 = 3 - 2;
																								end
																								if (v442 ~= (1 + 0)) then
																								else
																									v427 = 1 + 1;
																									break;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		if ((3 - 1) ~= v52) then
																		else
																			local v428 = 0;
																			local v429;
																			local v430;
																			while true do
																				if ((66 - (30 + 35)) ~= v428) then
																				else
																					while true do
																						if (v429 ~= (0 + 0)) then
																						else
																							v430 = 1257 - (1043 + 214);
																							while true do
																								local v443 = 0 - 0;
																								while true do
																									if (v443 ~= (1212 - (323 + 889))) then
																									else
																										if ((0 - 0) == v430) then
																											local v455 = 580 - (361 + 219);
																											while true do
																												if (v455 == 1) then
																													v430 = 321 - (53 + 267);
																													break;
																												end
																												if (v455 ~= 0) then
																												else
																													for v457 = 1 + 0, v23() do
																														local v458 = 0;
																														local v459;
																														local v460;
																														local v461;
																														while true do
																															if (1 ~= v458) then
																															else
																																v461 = nil;
																																while true do
																																	if (v459 == 0) then
																																		v460 = 0;
																																		v461 = nil;
																																		v459 = 414 - (15 + 398);
																																	end
																																	if (v459 ~= 1) then
																																	else
																																		while true do
																																			if (v460 == 0) then
																																				v461 = v21();
																																				if (v20(v461, 983 - (18 + 964), 3 - 2) ~= (0 + 0)) then
																																				else
																																					local v466 = 0;
																																					local v467;
																																					local v468;
																																					local v469;
																																					local v470;
																																					while true do
																																						if (v466 == 0) then
																																							v467 = 0;
																																							v468 = nil;
																																							v466 = 1 + 0;
																																						end
																																						if (v466 == (852 - (20 + 830))) then
																																							while true do
																																								if (v467 ~= 1) then
																																								else
																																									local v472 = 0;
																																									while true do
																																										if (v472 ~= (0 + 0)) then
																																										else
																																											v470 = {v22(),v22(),nil,nil};
																																											if (v468 == 0) then
																																												local v477 = 0;
																																												local v478;
																																												local v479;
																																												while true do
																																													if (v477 ~= 0) then
																																													else
																																														v478 = 0;
																																														v479 = nil;
																																														v477 = 1 + 0;
																																													end
																																													if (v477 ~= 1) then
																																													else
																																														while true do
																																															if ((738 - (542 + 196)) ~= v478) then
																																															else
																																																v479 = 0 - 0;
																																																while true do
																																																	if (v479 == 0) then
																																																		v470[1 + 2] = v22();
																																																		v470[3 + 1] = v22();
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											elseif (v468 == 1) then
																																												v470[3] = v23();
																																											elseif (v468 == (1 + 1)) then
																																												v470[3] = v23() - (2 ^ (41 - 25));
																																											elseif (v468 == 3) then
																																												local v486 = 0 - 0;
																																												local v487;
																																												while true do
																																													if (v486 ~= 0) then
																																													else
																																														v487 = 1551 - (1126 + 425);
																																														while true do
																																															if (v487 ~= (405 - (118 + 287))) then
																																															else
																																																v470[3] = v23() - ((7 - 5) ^ 16);
																																																v470[4] = v22();
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											v472 = 1;
																																										end
																																										if (v472 ~= (1122 - (118 + 1003))) then
																																										else
																																											v467 = 2;
																																											break;
																																										end
																																									end
																																								end
																																								if (v467 == 0) then
																																									v468 = v20(v461, 5 - 3, 3);
																																									v469 = v20(v461, 381 - (142 + 235), 6);
																																									v467 = 4 - 3;
																																								end
																																								if (v467 ~= 3) then
																																								else
																																									if (v20(v469, 1 + 2, 980 - (553 + 424)) == 1) then
																																										v470[7 - 3] = v58[v470[4 + 0]];
																																									end
																																									v53[v457] = v470;
																																									break;
																																								end
																																								if (2 ~= v467) then
																																								else
																																									local v474 = 0;
																																									while true do
																																										if ((1 + 0) == v474) then
																																											v467 = 3;
																																											break;
																																										end
																																										if (v474 ~= 0) then
																																										else
																																											if (v20(v469, 1, 1 + 0) == (1 + 0)) then
																																												v470[2] = v58[v470[2 + 0]];
																																											end
																																											if (v20(v469, 4 - 2, 5 - 3) ~= (2 - 1)) then
																																											else
																																												v470[3] = v58[v470[1 + 2]];
																																											end
																																											v474 = 4 - 3;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if ((754 - (239 + 514)) ~= v466) then
																																						else
																																							local v471 = 0 + 0;
																																							while true do
																																								if (v471 ~= 1) then
																																								else
																																									v466 = 1331 - (797 + 532);
																																									break;
																																								end
																																								if (v471 == (0 + 0)) then
																																									v469 = nil;
																																									v470 = nil;
																																									v471 = 1;
																																								end
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v458 == 0) then
																																v459 = 0;
																																v460 = nil;
																																v458 = 1 + 0;
																															end
																														end
																													end
																													for v462 = 1, v23() do
																														v54[v462 - (2 - 1)] = v28();
																													end
																													v455 = 1;
																												end
																											end
																										end
																										if (v430 ~= 1) then
																										else
																											return v56;
																										end
																										break;
																									end
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (v428 == (1202 - (373 + 829))) then
																					v429 = 0;
																					v430 = nil;
																					v428 = 1;
																				end
																			end
																		end
																		v168 = 732 - (476 + 255);
																	end
																	if (v168 ~= (1131 - (369 + 761))) then
																	else
																		v106 = 1 + 0;
																		break;
																	end
																end
															end
															if (v106 ~= (1 - 0)) then
															else
																v99 = 1;
																break;
															end
														end
														break;
													end
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v51 ~= (0 - 0)) then
						else
							local v92 = 238 - (64 + 174);
							local v93;
							while true do
								if (v92 ~= 0) then
								else
									v93 = 0;
									while true do
										if (1 ~= v93) then
										else
											v51 = 1;
											break;
										end
										if (v93 ~= (0 + 0)) then
										else
											local v104 = 0 - 0;
											while true do
												if (v104 == (336 - (144 + 192))) then
													v52 = 216 - (42 + 174);
													v53 = nil;
													v104 = 1 + 0;
												end
												if ((1 + 0) == v104) then
													v93 = 1 + 0;
													break;
												end
											end
										end
									end
									break;
								end
							end
						end
						if (v51 == (1505 - (363 + 1141))) then
							local v94 = 1580 - (1183 + 397);
							while true do
								if (v94 ~= (0 - 0)) then
								else
									v54 = nil;
									v55 = nil;
									v94 = 1;
								end
								if (v94 ~= 1) then
								else
									v51 = 2 + 0;
									break;
								end
							end
						end
						if (v51 ~= 2) then
						else
							local v95 = 0;
							while true do
								if (v95 == (1 + 0)) then
									v51 = 1978 - (1913 + 62);
									break;
								end
								if (v95 ~= 0) then
								else
									v56 = nil;
									v57 = nil;
									v95 = 1 + 0;
								end
							end
						end
					end
					break;
				end
				if (v50 ~= 0) then
				else
					v51 = 0 - 0;
					v52 = nil;
					v50 = 1;
				end
			end
		end
		local function v29(v59, v60, v61)
			local v62 = 0;
			local v63;
			local v64;
			local v65;
			while true do
				if (v62 == 0) then
					v63 = v59[1];
					v64 = v59[2];
					v62 = 1;
				end
				if (v62 == 1) then
					v65 = v59[3];
					return function(...)
						local v75 = v63;
						local v76 = v64;
						local v77 = v65;
						local v78 = v27;
						local v79 = 1;
						local v80 = -1;
						local v81 = {};
						local v82 = {...};
						local v83 = v12("#", ...) - 1;
						local v84 = {};
						local v85 = {};
						for v89 = 0, v83 do
							if (v89 >= v77) then
								v81[v89 - v77] = v82[v89 + 1];
							else
								v85[v89] = v82[v89 + 1];
							end
						end
						local v86 = (v83 - v77) + 1;
						local v87;
						local v88;
						while true do
							v87 = v75[v79];
							v88 = v87[1];
							if (v88 <= 51) then
								if (v88 <= 25) then
									if (v88 <= 12) then
										if (v88 <= 5) then
											if (v88 <= 2) then
												if (v88 <= 0) then
													local v109 = 0;
													local v110;
													local v111;
													local v112;
													local v113;
													while true do
														if (2 == v109) then
															for v363 = v110, v80 do
																v113 = v113 + 1;
																v85[v363] = v111[v113];
															end
															break;
														end
														if (v109 == 1) then
															v80 = (v112 + v110) - 1;
															v113 = 0;
															v109 = 2;
														end
														if (v109 == 0) then
															v110 = v87[2];
															v111, v112 = v78(v85[v110](v13(v85, v110 + 1, v80)));
															v109 = 1;
														end
													end
												elseif (v88 == 1) then
													local v169 = v87[2];
													do
														return v85[v169](v13(v85, v169 + 1, v87[3]));
													end
												else
													local v170 = v87[3];
													local v171 = v85[v170];
													for v313 = v170 + 1, v87[4] do
														v171 = v171 .. v85[v313];
													end
													v85[v87[2]] = v171;
												end
											elseif (v88 <= 3) then
												if (v85[v87[2]] <= v85[v87[4]]) then
													v79 = v79 + 1;
												else
													v79 = v87[3];
												end
											elseif (v88 > 4) then
												v85[v87[2]] = v85[v87[3]][v87[4]];
											else
												local v176 = 0;
												local v177;
												while true do
													if (v176 == 0) then
														v177 = v87[2];
														v85[v177](v85[v177 + 1]);
														break;
													end
												end
											end
										elseif (v88 <= 8) then
											if (v88 <= 6) then
												if (v85[v87[2]] ~= v85[v87[4]]) then
													v79 = v79 + 1;
												else
													v79 = v87[3];
												end
											elseif (v88 > 7) then
												if v85[v87[2]] then
													v79 = v79 + 1;
												else
													v79 = v87[3];
												end
											else
												local v179 = 0;
												local v180;
												local v181;
												while true do
													if (1 == v179) then
														for v413 = 1, #v84 do
															local v414 = 0;
															local v415;
															while true do
																if (v414 == 0) then
																	v415 = v84[v413];
																	for v436 = 0, #v415 do
																		local v437 = v415[v436];
																		local v438 = v437[1];
																		local v439 = v437[2];
																		if ((v438 == v85) and (v439 >= v180)) then
																			local v440 = 0;
																			while true do
																				if (v440 == 0) then
																					v181[v439] = v438[v439];
																					v437[1] = v181;
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
															end
														end
														break;
													end
													if (v179 == 0) then
														v180 = v87[2];
														v181 = {};
														v179 = 1;
													end
												end
											end
										elseif (v88 <= 10) then
											if (v88 == 9) then
												local v182 = 0;
												local v183;
												local v184;
												local v185;
												while true do
													if (v182 == 1) then
														v185 = 0;
														for v416 = v183, v87[4] do
															v185 = v185 + 1;
															v85[v416] = v184[v185];
														end
														break;
													end
													if (v182 == 0) then
														v183 = v87[2];
														v184 = {v85[v183](v13(v85, v183 + 1, v80))};
														v182 = 1;
													end
												end
											elseif (v87[2] <= v85[v87[4]]) then
												v79 = v79 + 1;
											else
												v79 = v87[3];
											end
										elseif (v88 > 11) then
											v85[v87[2]][v85[v87[3]]] = v85[v87[4]];
										else
											local v188 = v87[2];
											v85[v188](v13(v85, v188 + 1, v87[3]));
										end
									elseif (v88 <= 18) then
										if (v88 <= 15) then
											if (v88 <= 13) then
												v85[v87[2]] = v85[v87[3]] - v85[v87[4]];
											elseif (v88 == 14) then
												v79 = v87[3];
											else
												local v190 = 0;
												local v191;
												while true do
													if (v190 == 0) then
														v191 = v87[2];
														v85[v191] = v85[v191](v13(v85, v191 + 1, v80));
														break;
													end
												end
											end
										elseif (v88 <= 16) then
											v60[v87[3]] = v85[v87[2]];
										elseif (v88 == 17) then
											local v192 = 0;
											local v193;
											local v194;
											while true do
												if (v192 == 0) then
													v193 = v87[2];
													v194 = v85[v87[3]];
													v192 = 1;
												end
												if (v192 == 1) then
													v85[v193 + 1] = v194;
													v85[v193] = v194[v87[4]];
													break;
												end
											end
										else
											v85[v87[2]] = v85[v87[3]];
										end
									elseif (v88 <= 21) then
										if (v88 <= 19) then
											local v117 = v87[2];
											do
												return v13(v85, v117, v117 + v87[3]);
											end
										elseif (v88 > 20) then
											v85[v87[2]] = v85[v87[3]][v85[v87[4]]];
										else
											v60[v87[3]] = v85[v87[2]];
										end
									elseif (v88 <= 23) then
										if (v88 > 22) then
											v79 = v87[3];
										else
											local v202 = v87[2];
											local v203, v204 = v78(v85[v202](v13(v85, v202 + 1, v87[3])));
											v80 = (v204 + v202) - 1;
											local v205 = 0;
											for v314 = v202, v80 do
												local v315 = 0;
												while true do
													if (v315 == 0) then
														v205 = v205 + 1;
														v85[v314] = v203[v205];
														break;
													end
												end
											end
										end
									elseif (v88 > 24) then
										local v206 = v87[2];
										v85[v206] = v85[v206](v85[v206 + 1]);
									else
										v85[v87[2]][v87[3]] = v85[v87[4]];
									end
								elseif (v88 <= 38) then
									if (v88 <= 31) then
										if (v88 <= 28) then
											if (v88 <= 26) then
												if (v85[v87[2]] < v85[v87[4]]) then
													v79 = v79 + 1;
												else
													v79 = v87[3];
												end
											elseif (v88 == 27) then
												do
													return;
												end
											else
												local v211 = v87[2];
												do
													return v13(v85, v211, v80);
												end
											end
										elseif (v88 <= 29) then
											local v118 = 0;
											local v119;
											while true do
												if (v118 == 0) then
													v119 = v87[2];
													v85[v119] = v85[v119](v85[v119 + 1]);
													break;
												end
											end
										elseif (v88 == 30) then
											local v212 = v87[2];
											local v213, v214 = v78(v85[v212](v85[v212 + 1]));
											v80 = (v214 + v212) - 1;
											local v215 = 0;
											for v318 = v212, v80 do
												v215 = v215 + 1;
												v85[v318] = v213[v215];
											end
										else
											v85[v87[2]] = v87[3] ~= 0;
										end
									elseif (v88 <= 34) then
										if (v88 <= 32) then
											if (v87[2] == v85[v87[4]]) then
												v79 = v79 + 1;
											else
												v79 = v87[3];
											end
										elseif (v88 == 33) then
											local v218 = v87[2];
											v85[v218](v13(v85, v218 + 1, v80));
										elseif not v85[v87[2]] then
											v79 = v79 + 1;
										else
											v79 = v87[3];
										end
									elseif (v88 <= 36) then
										if (v88 == 35) then
											local v219 = 0;
											local v220;
											local v221;
											local v222;
											while true do
												if (v219 == 0) then
													v220 = v87[2];
													v221 = v85[v220];
													v219 = 1;
												end
												if (1 == v219) then
													v222 = v87[3];
													for v421 = 1, v222 do
														v221[v421] = v85[v220 + v421];
													end
													break;
												end
											end
										else
											v85[v87[2]] = v87[3];
										end
									elseif (v88 == 37) then
										if (v85[v87[2]] == v85[v87[4]]) then
											v79 = v79 + 1;
										else
											v79 = v87[3];
										end
									elseif not v85[v87[2]] then
										v79 = v79 + 1;
									else
										v79 = v87[3];
									end
								elseif (v88 <= 44) then
									if (v88 <= 41) then
										if (v88 <= 39) then
											if (v85[v87[2]] == v87[4]) then
												v79 = v79 + 1;
											else
												v79 = v87[3];
											end
										elseif (v88 > 40) then
											if (v85[v87[2]] == v87[4]) then
												v79 = v79 + 1;
											else
												v79 = v87[3];
											end
										else
											local v226 = 0;
											local v227;
											while true do
												if (v226 == 0) then
													v227 = v85[v87[4]];
													if v227 then
														v79 = v79 + 1;
													else
														v85[v87[2]] = v227;
														v79 = v87[3];
													end
													break;
												end
											end
										end
									elseif (v88 <= 42) then
										v85[v87[2]]();
									elseif (v88 == 43) then
										v85[v87[2]] = v29(v76[v87[3]], nil, v61);
									else
										local v229 = v87[2];
										v85[v229] = v85[v229]();
									end
								elseif (v88 <= 47) then
									if (v88 <= 45) then
										v85[v87[2]] = {};
									elseif (v88 == 46) then
										local v231 = v87[2];
										do
											return v85[v231](v13(v85, v231 + 1, v87[3]));
										end
									else
										v85[v87[2]] = v85[v87[3]][v85[v87[4]]];
									end
								elseif (v88 <= 49) then
									if (v88 > 48) then
										local v234 = v87[2];
										local v235 = v85[v234];
										local v236 = v87[3];
										for v321 = 1, v236 do
											v235[v321] = v85[v234 + v321];
										end
									elseif (v85[v87[2]] <= v85[v87[4]]) then
										v79 = v79 + 1;
									else
										v79 = v87[3];
									end
								elseif (v88 == 50) then
									v85[v87[2]] = v85[v87[3]][v87[4]];
								else
									v85[v87[2]][v87[3]] = v87[4];
								end
							elseif (v88 <= 77) then
								if (v88 <= 64) then
									if (v88 <= 57) then
										if (v88 <= 54) then
											if (v88 <= 52) then
												local v121 = v87[2];
												local v122 = {v85[v121](v13(v85, v121 + 1, v80))};
												local v123 = 0;
												for v146 = v121, v87[4] do
													v123 = v123 + 1;
													v85[v146] = v122[v123];
												end
											elseif (v88 > 53) then
												v85[v87[2]] = v87[3] ~= 0;
											else
												local v242 = 0;
												local v243;
												while true do
													if (v242 == 0) then
														v243 = v87[2];
														do
															return v13(v85, v243, v80);
														end
														break;
													end
												end
											end
										elseif (v88 <= 55) then
											local v124 = v76[v87[3]];
											local v125;
											local v126 = {};
											v125 = v10({}, {__index=function(v149, v150)
												local v151 = 0;
												local v152;
												while true do
													if (v151 == 0) then
														v152 = v126[v150];
														return v152[1][v152[2]];
													end
												end
											end,__newindex=function(v153, v154, v155)
												local v156 = v126[v154];
												v156[1][v156[2]] = v155;
											end});
											for v158 = 1, v87[4] do
												v79 = v79 + 1;
												local v159 = v75[v79];
												if (v159[1] == 18) then
													v126[v158 - 1] = {v85,v159[3]};
												else
													v126[v158 - 1] = {v60,v159[3]};
												end
												v84[#v84 + 1] = v126;
											end
											v85[v87[2]] = v29(v124, v125, v61);
										elseif (v88 > 56) then
											if (v85[v87[2]] ~= v85[v87[4]]) then
												v79 = v79 + 1;
											else
												v79 = v87[3];
											end
										else
											v85[v87[2]] = v61[v87[3]];
										end
									elseif (v88 <= 60) then
										if (v88 <= 58) then
											do
												return;
											end
										elseif (v88 == 59) then
											v85[v87[2]] = {};
										else
											local v247 = 0;
											local v248;
											while true do
												if (0 == v247) then
													v248 = v87[2];
													v85[v248] = v85[v248]();
													break;
												end
											end
										end
									elseif (v88 <= 62) then
										if (v88 > 61) then
											for v326 = v87[2], v87[3] do
												v85[v326] = nil;
											end
										else
											v85[v87[2]][v85[v87[3]]] = v85[v87[4]];
										end
									elseif (v88 > 63) then
										v85[v87[2]] = v85[v87[3]] - v85[v87[4]];
									else
										v85[v87[2]][v87[3]] = v87[4];
									end
								elseif (v88 <= 70) then
									if (v88 <= 67) then
										if (v88 <= 65) then
											local v128 = 0;
											local v129;
											while true do
												if (v128 == 0) then
													v129 = v85[v87[4]];
													if v129 then
														v79 = v79 + 1;
													else
														v85[v87[2]] = v129;
														v79 = v87[3];
													end
													break;
												end
											end
										elseif (v88 > 66) then
											if (v85[v87[2]] < v85[v87[4]]) then
												v79 = v79 + 1;
											else
												v79 = v87[3];
											end
										else
											v85[v87[2]] = v85[v87[3]];
										end
									elseif (v88 <= 68) then
										v85[v87[2]] = v61[v87[3]];
									elseif (v88 > 69) then
										if v85[v87[2]] then
											v79 = v79 + 1;
										else
											v79 = v87[3];
										end
									else
										local v256 = 0;
										local v257;
										while true do
											if (v256 == 0) then
												v257 = v87[2];
												v85[v257] = v85[v257](v13(v85, v257 + 1, v87[3]));
												break;
											end
										end
									end
								elseif (v88 <= 73) then
									if (v88 <= 71) then
										for v161 = v87[2], v87[3] do
											v85[v161] = nil;
										end
									elseif (v88 == 72) then
										local v258 = 0;
										local v259;
										while true do
											if (v258 == 0) then
												v259 = v87[2];
												v85[v259] = v85[v259](v13(v85, v259 + 1, v87[3]));
												break;
											end
										end
									else
										local v260 = v76[v87[3]];
										local v261;
										local v262 = {};
										v261 = v10({}, {__index=function(v329, v330)
											local v331 = v262[v330];
											return v331[1][v331[2]];
										end,__newindex=function(v332, v333, v334)
											local v335 = v262[v333];
											v335[1][v335[2]] = v334;
										end});
										for v337 = 1, v87[4] do
											v79 = v79 + 1;
											local v338 = v75[v79];
											if (v338[1] == 18) then
												v262[v337 - 1] = {v85,v338[3]};
											else
												v262[v337 - 1] = {v60,v338[3]};
											end
											v84[#v84 + 1] = v262;
										end
										v85[v87[2]] = v29(v260, v261, v61);
									end
								elseif (v88 <= 75) then
									if (v88 > 74) then
										local v264 = v87[2];
										v85[v264](v13(v85, v264 + 1, v80));
									else
										v85[v87[2]] = v60[v87[3]];
									end
								elseif (v88 == 76) then
									v85[v87[2]] = v85[v87[3]] + v87[4];
								else
									local v268 = v87[2];
									local v269 = {v85[v268](v85[v268 + 1])};
									local v270 = 0;
									for v340 = v268, v87[4] do
										v270 = v270 + 1;
										v85[v340] = v269[v270];
									end
								end
							elseif (v88 <= 90) then
								if (v88 <= 83) then
									if (v88 <= 80) then
										if (v88 <= 78) then
											local v132 = v87[2];
											local v133, v134 = v78(v85[v132](v13(v85, v132 + 1, v87[3])));
											v80 = (v134 + v132) - 1;
											local v135 = 0;
											for v163 = v132, v80 do
												local v164 = 0;
												while true do
													if (0 == v164) then
														v135 = v135 + 1;
														v85[v163] = v133[v135];
														break;
													end
												end
											end
										elseif (v88 == 79) then
											local v271 = v87[2];
											local v272 = v85[v87[3]];
											v85[v271 + 1] = v272;
											v85[v271] = v272[v87[4]];
										else
											local v276 = v87[2];
											local v277, v278 = v78(v85[v276](v13(v85, v276 + 1, v80)));
											v80 = (v278 + v276) - 1;
											local v279 = 0;
											for v343 = v276, v80 do
												v279 = v279 + 1;
												v85[v343] = v277[v279];
											end
										end
									elseif (v88 <= 81) then
										local v136 = 0;
										local v137;
										while true do
											if (v136 == 0) then
												v137 = v87[2];
												v85[v137] = v85[v137](v13(v85, v137 + 1, v80));
												break;
											end
										end
									elseif (v88 == 82) then
										local v280 = v87[2];
										local v281 = v87[4];
										local v282 = v280 + 2;
										local v283 = {v85[v280](v85[v280 + 1], v85[v282])};
										for v348 = 1, v281 do
											v85[v282 + v348] = v283[v348];
										end
										local v284 = v283[1];
										if v284 then
											v85[v282] = v284;
											v79 = v87[3];
										else
											v79 = v79 + 1;
										end
									elseif (v85[v87[2]] == v85[v87[4]]) then
										v79 = v79 + 1;
									else
										v79 = v87[3];
									end
								elseif (v88 <= 86) then
									if (v88 <= 84) then
										v85[v87[2]] = v87[3];
									elseif (v88 == 85) then
										do
											return v85[v87[2]];
										end
									else
										v85[v87[2]] = v85[v87[3]] + v87[4];
									end
								elseif (v88 <= 88) then
									if (v88 == 87) then
										v85[v87[2]][v87[3]] = v85[v87[4]];
									else
										v85[v87[2]] = v29(v76[v87[3]], nil, v61);
									end
								elseif (v88 > 89) then
									if (v87[2] <= v85[v87[4]]) then
										v79 = v79 + 1;
									else
										v79 = v87[3];
									end
								else
									local v289 = v87[2];
									local v290 = {v85[v289](v85[v289 + 1])};
									local v291 = 0;
									for v351 = v289, v87[4] do
										local v352 = 0;
										while true do
											if (v352 == 0) then
												v291 = v291 + 1;
												v85[v351] = v290[v291];
												break;
											end
										end
									end
								end
							elseif (v88 <= 96) then
								if (v88 <= 93) then
									if (v88 <= 91) then
										v85[v87[2]] = v85[v87[3]] / v85[v87[4]];
									elseif (v88 == 92) then
										v85[v87[2]] = v85[v87[3]] / v85[v87[4]];
									else
										do
											return v85[v87[2]];
										end
									end
								elseif (v88 <= 94) then
									local v141 = v87[2];
									local v142 = {};
									for v165 = 1, #v84 do
										local v166 = v84[v165];
										for v293 = 0, #v166 do
											local v294 = v166[v293];
											local v295 = v294[1];
											local v296 = v294[2];
											if ((v295 == v85) and (v296 >= v141)) then
												v142[v296] = v295[v296];
												v294[1] = v142;
											end
										end
									end
								elseif (v88 == 95) then
									local v297 = v87[2];
									local v298 = v85[v297];
									for v353 = v297 + 1, v87[3] do
										v7(v298, v85[v353]);
									end
								else
									local v299 = v87[2];
									local v300, v301 = v78(v85[v299](v85[v299 + 1]));
									v80 = (v301 + v299) - 1;
									local v302 = 0;
									for v354 = v299, v80 do
										v302 = v302 + 1;
										v85[v354] = v300[v302];
									end
								end
							elseif (v88 <= 99) then
								if (v88 <= 97) then
									local v143 = v87[3];
									local v144 = v85[v143];
									for v167 = v143 + 1, v87[4] do
										v144 = v144 .. v85[v167];
									end
									v85[v87[2]] = v144;
								elseif (v88 > 98) then
									local v303 = v87[2];
									local v304 = v87[4];
									local v305 = v303 + 2;
									local v306 = {v85[v303](v85[v303 + 1], v85[v305])};
									for v357 = 1, v304 do
										v85[v305 + v357] = v306[v357];
									end
									local v307 = v306[1];
									if v307 then
										local v386 = 0;
										while true do
											if (v386 == 0) then
												v85[v305] = v307;
												v79 = v87[3];
												break;
											end
										end
									else
										v79 = v79 + 1;
									end
								else
									local v308 = v87[2];
									v85[v308](v13(v85, v308 + 1, v87[3]));
								end
							elseif (v88 <= 101) then
								if (v88 == 100) then
									local v309 = v87[2];
									v85[v309](v85[v309 + 1]);
								else
									v85[v87[2]] = v60[v87[3]];
								end
							elseif (v88 == 102) then
								v85[v87[2]]();
							elseif (v87[2] == v85[v87[4]]) then
								v79 = v79 + 1;
							else
								v79 = v87[3];
							end
							v79 = v79 + 1;
						end
					end;
				end
			end
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
