---update 4.1
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v83 = v2(v0(v30, 16));
				if v19 then
					local v91 = v5(v83, v19);
					v19 = nil;
					return v91;
				else
					return v83;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v84 = 0 - 0;
				local v85;
				while true do
					if (v84 == (0 - 0)) then
						v85 = (v31 / (((1068 - (68 + 997)) - 1) ^ (v32 - (2 - 1)))) % ((621 - (555 + 64)) ^ (((v33 - ((2202 - (226 + 1044)) - (857 + 74))) - (v32 - (569 - ((1597 - 1230) + 201)))) + (928 - (214 + 713))));
						return v85 - (v85 % 1);
					end
				end
			else
				local v86 = 0 + 0;
				local v87;
				while true do
					if (v86 == (0 + 0)) then
						v87 = ((996 - (32 + 85)) - (282 + 595)) ^ (v32 - (1638 - (1523 + 114)));
						return (((v31 % (v87 + v87)) >= v87) and (1 + 0)) or (0 - 0);
					end
				end
			end
		end
		local function v21()
			local v34 = 0;
			local v35;
			while true do
				if (v34 == (1 + 0)) then
					return v35;
				end
				if (v34 == 0) then
					v35 = v1(v16, v18, v18);
					v18 = v18 + 1 + (0 - 0);
					v34 = (1770 - 812) - (892 + 65);
				end
			end
		end
		local function v22()
			local v36, v37 = v1(v16, v18, v18 + (3 - 1));
			v18 = v18 + (352 - (87 + 263));
			return (v37 * 256) + v36;
		end
		local function v23()
			local v38 = 0;
			local v39;
			local v40;
			local v41;
			local v42;
			while true do
				if (v38 == (180 - (67 + 113))) then
					v39, v40, v41, v42 = v1(v16, v18, v18 + 3 + 0);
					v18 = v18 + (10 - 6);
					v38 = 1 - 0;
				end
				if (v38 == (1 + 0)) then
					return (v42 * (41190819 - 24413603)) + (v41 * (48199 + 17337)) + (v40 * ((593 + 424) - (1000 - 239))) + v39;
				end
			end
		end
		local function v24()
			local v43 = v23();
			local v44 = v23();
			local v45 = (1960 - (201 + 571)) - ((2207 - (116 + 1022)) + 118);
			local v46 = (v20(v44, 2 - 1, 43 - 23) * ((1 + (4 - 3)) ^ 32)) + v43;
			local v47 = v20(v44, (22 + 15) - 16, 31 + 0);
			local v48 = ((v20(v44, 823 - (368 + 423)) == (3 - 2)) and -(19 - (10 + 8))) or (3 - 2);
			if (v47 == 0) then
				if (v46 == (442 - (416 + 26))) then
					return v48 * (0 - 0);
				else
					v47 = 1 + 0;
					v45 = 0 - (0 - 0);
				end
			elseif (v47 == 2047) then
				return ((v46 == (438 - (145 + 293))) and (v48 * ((431 - (44 + 386)) / 0))) or (v48 * NaN);
			end
			return v8(v48, v47 - (2509 - (998 + 488))) * (v45 + (v46 / (((3 - 2) + 1) ^ (43 + 9))));
		end
		local function v25(v49)
			local v50 = (4067 - 3208) - (814 + 18 + 27);
			local v51;
			local v52;
			while true do
				if (v50 == (7 - 4)) then
					return v6(v52);
				end
				if (v50 == (1 + 0)) then
					v51 = v3(v16, v18, (v18 + v49) - (1 + 0));
					v18 = v18 + v49;
					v50 = 887 - (261 + (2148 - 1524));
				end
				if (v50 == (3 - 1)) then
					v52 = {};
					for v92 = 1081 - ((2767 - (760 + 987)) + 60), #v51 do
						v52[v92] = v2(v1(v3(v51, v92, v92)));
					end
					v50 = 1426 - (630 + 793);
				end
				if (v50 == (0 - 0)) then
					v51 = nil;
					if not v49 then
						v49 = v23();
						if (v49 == 0) then
							return "";
						end
					end
					v50 = 1;
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v53 = 0 + 0;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			local v60;
			local v61;
			local v62;
			while true do
				if (v53 ~= 0) then
				else
					v54 = 580 - (361 + 219);
					v55 = nil;
					v53 = 321 - (53 + 267);
				end
				if (v53 ~= (1 + 2)) then
				else
					v60 = nil;
					v61 = nil;
					v53 = 417 - (15 + 398);
				end
				if (v53 == 4) then
					v62 = nil;
					while true do
						if (v54 == 4) then
							while true do
								if (v55 == 3) then
									v62 = nil;
									while true do
										local v103 = 0;
										local v104;
										while true do
											if (v103 ~= 0) then
											else
												v104 = 0;
												while true do
													if (v104 ~= 1) then
													else
														if (v56 ~= (982 - (18 + 964))) then
														else
															local v344 = 0 - 0;
															local v345;
															local v346;
															while true do
																if (v344 == (0 + 0)) then
																	v345 = 0;
																	v346 = nil;
																	v344 = 1 + 0;
																end
																if (v344 ~= 1) then
																else
																	while true do
																		if (0 == v345) then
																			v346 = 0;
																			while true do
																				if (v346 ~= 1) then
																				else
																					local v454 = 850 - (20 + 830);
																					while true do
																						if (v454 ~= 1) then
																						else
																							v346 = 2 + 0;
																							break;
																						end
																						if (v454 == 0) then
																							local v459 = 0;
																							while true do
																								if (v459 ~= 1) then
																								else
																									v454 = 1;
																									break;
																								end
																								if (v459 == 0) then
																									v59 = {};
																									v60 = {v57,v58,nil,v59};
																									v459 = 1 + 0;
																								end
																							end
																						end
																					end
																				end
																				if (v346 == 2) then
																					v56 = 739 - (542 + 196);
																					break;
																				end
																				if (v346 == (0 - 0)) then
																					local v455 = 0;
																					local v456;
																					while true do
																						if (v455 ~= (0 + 0)) then
																						else
																							v456 = 0 + 0;
																							while true do
																								if ((1 + 0) == v456) then
																									v346 = 1;
																									break;
																								end
																								if (v456 == (0 - 0)) then
																									local v462 = 0;
																									while true do
																										if (v462 ~= (2 - 1)) then
																										else
																											v456 = 1;
																											break;
																										end
																										if (v462 == 0) then
																											v57 = {};
																											v58 = {};
																											v462 = 1;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														end
														break;
													end
													if (v104 == 0) then
														local v150 = 0;
														while true do
															if (v150 ~= (1551 - (1126 + 425))) then
															else
																if (2 == v56) then
																	local v428 = 0;
																	local v429;
																	while true do
																		if (v428 ~= (405 - (118 + 287))) then
																		else
																			v429 = 0;
																			while true do
																				local v453 = 0;
																				while true do
																					if (v453 ~= (0 - 0)) then
																					else
																						if ((1121 - (118 + 1003)) ~= v429) then
																						else
																							local v460 = 0 - 0;
																							local v461;
																							while true do
																								if (v460 ~= 0) then
																								else
																									v461 = 377 - (142 + 235);
																									while true do
																										if (1 ~= v461) then
																										else
																											v429 = 4 - 3;
																											break;
																										end
																										if (v461 == (0 + 0)) then
																											local v469 = 0;
																											while true do
																												if (v469 ~= 0) then
																												else
																													for v470 = 978 - (553 + 424), v23() do
																														local v471 = 0;
																														local v472;
																														local v473;
																														local v474;
																														while true do
																															if (v471 == (1 - 0)) then
																																v474 = nil;
																																while true do
																																	if (v472 ~= (1 + 0)) then
																																	else
																																		while true do
																																			if (v473 ~= 0) then
																																			else
																																				v474 = v21();
																																				if (v20(v474, 1 + 0, 1 + 0) == 0) then
																																					local v482 = 0;
																																					local v483;
																																					local v484;
																																					local v485;
																																					local v486;
																																					while true do
																																						if (v482 ~= 1) then
																																						else
																																							v485 = nil;
																																							v486 = nil;
																																							v482 = 2;
																																						end
																																						if ((0 + 0) ~= v482) then
																																						else
																																							v483 = 0 + 0;
																																							v484 = nil;
																																							v482 = 1;
																																						end
																																						if (v482 ~= (4 - 2)) then
																																						else
																																							while true do
																																								if (v483 ~= (0 - 0)) then
																																								else
																																									local v487 = 0 - 0;
																																									while true do
																																										if ((1 + 0) ~= v487) then
																																										else
																																											v483 = 4 - 3;
																																											break;
																																										end
																																										if (v487 ~= 0) then
																																										else
																																											v484 = v20(v474, 755 - (239 + 514), 2 + 1);
																																											v485 = v20(v474, 4, 6);
																																											v487 = 1;
																																										end
																																									end
																																								end
																																								if (2 ~= v483) then
																																								else
																																									local v488 = 1329 - (797 + 532);
																																									local v489;
																																									while true do
																																										if (0 == v488) then
																																											v489 = 0 + 0;
																																											while true do
																																												if (v489 ~= (1 + 0)) then
																																												else
																																													v483 = 6 - 3;
																																													break;
																																												end
																																												if (v489 == (1202 - (373 + 829))) then
																																													local v495 = 731 - (476 + 255);
																																													while true do
																																														if (v495 == 0) then
																																															if (v20(v485, 1131 - (369 + 761), 1) == (1 + 0)) then
																																																v486[2 - 0] = v62[v486[2]];
																																															end
																																															if (v20(v485, 3 - 1, 240 - (64 + 174)) == 1) then
																																																v486[1 + 2] = v62[v486[3 - 0]];
																																															end
																																															v495 = 1;
																																														end
																																														if (v495 == (337 - (144 + 192))) then
																																															v489 = 217 - (42 + 174);
																																															break;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								if (v483 == (3 + 0)) then
																																									if (v20(v485, 3 + 0, 3) == (1 + 0)) then
																																										v486[4] = v62[v486[4]];
																																									end
																																									v57[v470] = v486;
																																									break;
																																								end
																																								if (1 ~= v483) then
																																								else
																																									local v491 = 0;
																																									local v492;
																																									while true do
																																										if (v491 == (1504 - (363 + 1141))) then
																																											v492 = 1580 - (1183 + 397);
																																											while true do
																																												if (v492 ~= (2 - 1)) then
																																												else
																																													v483 = 2 + 0;
																																													break;
																																												end
																																												if (v492 == (0 + 0)) then
																																													local v496 = 1975 - (1913 + 62);
																																													while true do
																																														if (v496 ~= (0 + 0)) then
																																														else
																																															v486 = {v22(),v22(),nil,nil};
																																															if (v484 == (1933 - (565 + 1368))) then
																																																local v501 = 0 - 0;
																																																local v502;
																																																while true do
																																																	if ((1661 - (1477 + 184)) == v501) then
																																																		v502 = 0;
																																																		while true do
																																																			if (v502 == (0 - 0)) then
																																																				v486[3] = v22();
																																																				v486[4] = v22();
																																																				break;
																																																			end
																																																		end
																																																		break;
																																																	end
																																																end
																																															elseif (v484 == 1) then
																																																v486[3] = v23();
																																															elseif (v484 == (2 + 0)) then
																																																v486[859 - (564 + 292)] = v23() - (2 ^ 16);
																																															elseif (v484 ~= 3) then
																																															else
																																																local v507 = 0 - 0;
																																																local v508;
																																																while true do
																																																	if (v507 ~= 0) then
																																																	else
																																																		v508 = 0 - 0;
																																																		while true do
																																																			if (v508 == (304 - (244 + 60))) then
																																																				v486[3 + 0] = v23() - ((478 - (41 + 435)) ^ 16);
																																																				v486[4] = v22();
																																																				break;
																																																			end
																																																		end
																																																		break;
																																																	end
																																																end
																																															end
																																															v496 = 1002 - (938 + 63);
																																														end
																																														if (v496 == 1) then
																																															v492 = 1;
																																															break;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																	if ((0 + 0) == v472) then
																																		local v480 = 0;
																																		while true do
																																			if (v480 ~= 1) then
																																			else
																																				v472 = 1126 - (936 + 189);
																																				break;
																																			end
																																			if (0 == v480) then
																																				v473 = 0;
																																				v474 = nil;
																																				v480 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (0 ~= v471) then
																															else
																																v472 = 0;
																																v473 = nil;
																																v471 = 1 + 0;
																															end
																														end
																													end
																													for v475 = 1614 - (1565 + 48), v23() do
																														v58[v475 - 1] = v28();
																													end
																													v469 = 1 + 0;
																												end
																												if (v469 == 1) then
																													v461 = 1139 - (782 + 356);
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						if (v429 == 1) then
																							return v60;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																if (1 ~= v56) then
																else
																	local v430 = 0;
																	local v431;
																	while true do
																		if (v430 == 0) then
																			v431 = 267 - (176 + 91);
																			while true do
																				if (v431 ~= (2 - 1)) then
																				else
																					local v457 = 0 - 0;
																					local v458;
																					while true do
																						if (v457 == (1092 - (975 + 117))) then
																							v458 = 1875 - (157 + 1718);
																							while true do
																								if (v458 == (1 + 0)) then
																									v431 = 2;
																									break;
																								end
																								if (v458 == 0) then
																									for v464 = 3 - 2, v61 do
																										local v465 = 0 - 0;
																										local v466;
																										local v467;
																										local v468;
																										while true do
																											if ((1019 - (697 + 321)) == v465) then
																												v468 = nil;
																												while true do
																													if (v466 ~= 1) then
																													else
																														if (v467 == 1) then
																															v468 = v21() ~= (0 - 0);
																														elseif (v467 == 2) then
																															v468 = v24();
																														elseif (v467 == (5 - 2)) then
																															v468 = v25();
																														end
																														v62[v464] = v468;
																														break;
																													end
																													if (v466 ~= 0) then
																													else
																														local v478 = 0 - 0;
																														local v479;
																														while true do
																															if (v478 == 0) then
																																v479 = 0;
																																while true do
																																	if ((1 + 0) ~= v479) then
																																	else
																																		v466 = 1 - 0;
																																		break;
																																	end
																																	if ((0 - 0) == v479) then
																																		local v481 = 0;
																																		while true do
																																			if (v481 ~= 0) then
																																			else
																																				v467 = v21();
																																				v468 = nil;
																																				v481 = 1;
																																			end
																																			if ((1228 - (322 + 905)) == v481) then
																																				v479 = 1;
																																				break;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v465 == 0) then
																												v466 = 611 - (602 + 9);
																												v467 = nil;
																												v465 = 1;
																											end
																										end
																									end
																									v60[3] = v21();
																									v458 = 1;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (v431 ~= 2) then
																				else
																					v56 = 1191 - (449 + 740);
																					break;
																				end
																				if (v431 == 0) then
																					v61 = v23();
																					v62 = {};
																					v431 = 873 - (826 + 46);
																				end
																			end
																			break;
																		end
																	end
																end
																v150 = 948 - (245 + 702);
															end
															if (v150 ~= 1) then
															else
																v104 = 3 - 2;
																break;
															end
														end
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (v55 ~= 0) then
								else
									v56 = 0;
									v57 = nil;
									v55 = 1;
								end
								if (v55 ~= (1 + 0)) then
								else
									local v102 = 1898 - (260 + 1638);
									while true do
										if (0 == v102) then
											local v105 = 440 - (382 + 58);
											while true do
												if (1 ~= v105) then
												else
													v102 = 3 - 2;
													break;
												end
												if (v105 ~= 0) then
												else
													v58 = nil;
													v59 = nil;
													v105 = 1;
												end
											end
										end
										if (1 ~= v102) then
										else
											v55 = 2 + 0;
											break;
										end
									end
								end
								if (v55 == (3 - 1)) then
									v60 = nil;
									v61 = nil;
									v55 = 3;
								end
							end
							break;
						end
						if (v54 == (5 - 3)) then
							local v98 = 1205 - (902 + 303);
							while true do
								if (v98 == (0 - 0)) then
									v59 = nil;
									v60 = nil;
									v98 = 2 - 1;
								end
								if (1 ~= v98) then
								else
									v54 = 3;
									break;
								end
							end
						end
						if (v54 ~= (1 + 0)) then
						else
							local v99 = 0;
							while true do
								if (v99 ~= (1690 - (1121 + 569))) then
								else
									v57 = nil;
									v58 = nil;
									v99 = 1;
								end
								if (v99 == (215 - (22 + 192))) then
									v54 = 685 - (483 + 200);
									break;
								end
							end
						end
						if (v54 == (1463 - (1404 + 59))) then
							local v100 = 0 - 0;
							while true do
								if (v100 ~= (0 - 0)) then
								else
									v55 = 765 - (468 + 297);
									v56 = nil;
									v100 = 1;
								end
								if (v100 ~= (563 - (334 + 228))) then
								else
									v54 = 1;
									break;
								end
							end
						end
						if (v54 == 3) then
							local v101 = 0 - 0;
							while true do
								if ((0 - 0) ~= v101) then
								else
									v61 = nil;
									v62 = nil;
									v101 = 1;
								end
								if (v101 == 1) then
									v54 = 6 - 2;
									break;
								end
							end
						end
					end
					break;
				end
				if (v53 ~= 2) then
				else
					v58 = nil;
					v59 = nil;
					v53 = 1 + 2;
				end
				if (v53 ~= (237 - (141 + 95))) then
				else
					v56 = nil;
					v57 = nil;
					v53 = 2 + 0;
				end
			end
		end
		local function v29(v63, v64, v65)
			local v66 = v63[1];
			local v67 = v63[2];
			local v68 = v63[3];
			return function(...)
				local v69 = v66;
				local v70 = v67;
				local v71 = v68;
				local v72 = v27;
				local v73 = 1;
				local v74 = -1;
				local v75 = {};
				local v76 = {...};
				local v77 = v12("#", ...) - 1;
				local v78 = {};
				local v79 = {};
				for v88 = 0, v77 do
					if (v88 >= v71) then
						v75[v88 - v71] = v76[v88 + 1];
					else
						v79[v88] = v76[v88 + 1];
					end
				end
				local v80 = (v77 - v71) + 1;
				local v81;
				local v82;
				while true do
					v81 = v69[v73];
					v82 = v81[1];
					if (v82 <= 54) then
						if (v82 <= 26) then
							if (v82 <= 12) then
								if (v82 <= 5) then
									if (v82 <= 2) then
										if (v82 <= 0) then
											v79[v81[2]] = v79[v81[3]] + v81[4];
										elseif (v82 > 1) then
											v79[v81[2]] = v81[3] ~= 0;
										else
											v79[v81[2]] = v64[v81[3]];
										end
									elseif (v82 <= 3) then
										if (v79[v81[2]] < v79[v81[4]]) then
											v73 = v73 + 1;
										else
											v73 = v81[3];
										end
									elseif (v82 > 4) then
										v79[v81[2]] = v81[3];
									elseif (v79[v81[2]] == v79[v81[4]]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v82 <= 8) then
									if (v82 <= 6) then
										do
											return;
										end
									elseif (v82 == 7) then
										v79[v81[2]]();
									else
										local v157 = 0;
										local v158;
										local v159;
										local v160;
										local v161;
										while true do
											if (1 == v157) then
												v74 = (v160 + v158) - 1;
												v161 = 0;
												v157 = 2;
											end
											if (v157 == 2) then
												for v401 = v158, v74 do
													local v402 = 0;
													while true do
														if (v402 == 0) then
															v161 = v161 + 1;
															v79[v401] = v159[v161];
															break;
														end
													end
												end
												break;
											end
											if (v157 == 0) then
												v158 = v81[2];
												v159, v160 = v72(v79[v158](v79[v158 + 1]));
												v157 = 1;
											end
										end
									end
								elseif (v82 <= 10) then
									if (v82 == 9) then
										v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
									elseif not v79[v81[2]] then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v82 == 11) then
									v79[v81[2]] = v79[v81[3]][v81[4]];
								else
									local v166 = v81[2];
									local v167, v168 = v72(v79[v166](v13(v79, v166 + 1, v74)));
									v74 = (v168 + v166) - 1;
									local v169 = 0;
									for v315 = v166, v74 do
										local v316 = 0;
										while true do
											if (v316 == 0) then
												v169 = v169 + 1;
												v79[v315] = v167[v169];
												break;
											end
										end
									end
								end
							elseif (v82 <= 19) then
								if (v82 <= 15) then
									if (v82 <= 13) then
										local v107 = v79[v81[4]];
										if v107 then
											v73 = v73 + 1;
										else
											v79[v81[2]] = v107;
											v73 = v81[3];
										end
									elseif (v82 > 14) then
										local v172 = v81[2];
										local v173 = {v79[v172](v79[v172 + 1])};
										local v174 = 0;
										for v317 = v172, v81[4] do
											v174 = v174 + 1;
											v79[v317] = v173[v174];
										end
									elseif v79[v81[2]] then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v82 <= 17) then
									if (v82 == 16) then
										v79[v81[2]] = v65[v81[3]];
									else
										v64[v81[3]] = v79[v81[2]];
									end
								elseif (v82 == 18) then
									local v179 = v81[2];
									local v180 = v79[v179];
									for v320 = v179 + 1, v81[3] do
										v7(v180, v79[v320]);
									end
								else
									v79[v81[2]][v81[3]] = v79[v81[4]];
								end
							elseif (v82 <= 22) then
								if (v82 <= 20) then
									if (v81[2] == v79[v81[4]]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v82 > 21) then
									local v184 = 0;
									local v185;
									local v186;
									local v187;
									while true do
										if (v184 == 1) then
											v187 = 0;
											for v405 = v185, v81[4] do
												local v406 = 0;
												while true do
													if (v406 == 0) then
														v187 = v187 + 1;
														v79[v405] = v186[v187];
														break;
													end
												end
											end
											break;
										end
										if (v184 == 0) then
											v185 = v81[2];
											v186 = {v79[v185](v13(v79, v185 + 1, v74))};
											v184 = 1;
										end
									end
								else
									v79[v81[2]] = v81[3] ~= 0;
									v73 = v73 + 1;
								end
							elseif (v82 <= 24) then
								if (v82 > 23) then
									v79[v81[2]] = v29(v70[v81[3]], nil, v65);
								else
									local v190 = 0;
									local v191;
									while true do
										if (v190 == 0) then
											v191 = v81[2];
											v79[v191](v13(v79, v191 + 1, v81[3]));
											break;
										end
									end
								end
							elseif (v82 > 25) then
								v79[v81[2]] = v81[3] ~= 0;
								v73 = v73 + 1;
							else
								v79[v81[2]] = {};
							end
						elseif (v82 <= 40) then
							if (v82 <= 33) then
								if (v82 <= 29) then
									if (v82 <= 27) then
										local v108 = v81[2];
										local v109 = v79[v108];
										local v110 = v81[3];
										for v128 = 1, v110 do
											v109[v128] = v79[v108 + v128];
										end
									elseif (v82 == 28) then
										local v194 = 0;
										local v195;
										while true do
											if (v194 == 0) then
												v195 = v81[2];
												v79[v195](v79[v195 + 1]);
												break;
											end
										end
									else
										local v196 = 0;
										local v197;
										while true do
											if (v196 == 0) then
												v197 = v81[2];
												v79[v197] = v79[v197](v79[v197 + 1]);
												break;
											end
										end
									end
								elseif (v82 <= 31) then
									if (v82 > 30) then
										local v198 = v81[2];
										local v199 = v79[v198];
										local v200 = v81[3];
										for v321 = 1, v200 do
											v199[v321] = v79[v198 + v321];
										end
									else
										v79[v81[2]] = v79[v81[3]] / v79[v81[4]];
									end
								elseif (v82 == 32) then
									if (v81[2] == v79[v81[4]]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								else
									v79[v81[2]] = v79[v81[3]] * v81[4];
								end
							elseif (v82 <= 36) then
								if (v82 <= 34) then
									local v111 = v70[v81[3]];
									local v112;
									local v113 = {};
									v112 = v10({}, {__index=function(v131, v132)
										local v133 = v113[v132];
										return v133[1][v133[2]];
									end,__newindex=function(v134, v135, v136)
										local v137 = 0;
										local v138;
										while true do
											if (v137 == 0) then
												v138 = v113[v135];
												v138[1][v138[2]] = v136;
												break;
											end
										end
									end});
									for v139 = 1, v81[4] do
										v73 = v73 + 1;
										local v140 = v69[v73];
										if (v140[1] == 60) then
											v113[v139 - 1] = {v79,v140[3]};
										else
											v113[v139 - 1] = {v64,v140[3]};
										end
										v78[#v78 + 1] = v113;
									end
									v79[v81[2]] = v29(v111, v112, v65);
								elseif (v82 > 35) then
									local v203 = 0;
									local v204;
									while true do
										if (v203 == 0) then
											v204 = v81[2];
											v79[v204] = v79[v204](v13(v79, v204 + 1, v74));
											break;
										end
									end
								else
									v79[v81[2]] = v64[v81[3]];
								end
							elseif (v82 <= 38) then
								if (v82 > 37) then
									local v207 = 0;
									local v208;
									while true do
										if (v207 == 0) then
											v208 = v81[2];
											do
												return v13(v79, v208, v74);
											end
											break;
										end
									end
								else
									local v209 = v81[2];
									local v210, v211 = v72(v79[v209](v13(v79, v209 + 1, v81[3])));
									v74 = (v211 + v209) - 1;
									local v212 = 0;
									for v326 = v209, v74 do
										v212 = v212 + 1;
										v79[v326] = v210[v212];
									end
								end
							elseif (v82 == 39) then
								if not v79[v81[2]] then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							else
								v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
							end
						elseif (v82 <= 47) then
							if (v82 <= 43) then
								if (v82 <= 41) then
									local v115 = v81[2];
									v79[v115](v13(v79, v115 + 1, v74));
								elseif (v82 == 42) then
									v79[v81[2]] = v79[v81[3]] - v79[v81[4]];
								else
									local v216 = v81[2];
									do
										return v79[v216](v13(v79, v216 + 1, v81[3]));
									end
								end
							elseif (v82 <= 45) then
								if (v82 > 44) then
									v73 = v81[3];
								else
									v79[v81[2]][v81[3]] = v81[4];
								end
							elseif (v82 > 46) then
								local v220 = v81[2];
								v79[v220](v13(v79, v220 + 1, v74));
							else
								local v221 = 0;
								local v222;
								while true do
									if (v221 == 0) then
										v222 = v81[2];
										v79[v222] = v79[v222](v13(v79, v222 + 1, v81[3]));
										break;
									end
								end
							end
						elseif (v82 <= 50) then
							if (v82 <= 48) then
								local v116 = v81[2];
								local v117, v118 = v72(v79[v116](v13(v79, v116 + 1, v74)));
								v74 = (v118 + v116) - 1;
								local v119 = 0;
								for v142 = v116, v74 do
									v119 = v119 + 1;
									v79[v142] = v117[v119];
								end
							elseif (v82 > 49) then
								if (v79[v81[2]] ~= v81[4]) then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							else
								local v223 = v81[2];
								local v224, v225 = v72(v79[v223](v13(v79, v223 + 1, v81[3])));
								v74 = (v225 + v223) - 1;
								local v226 = 0;
								for v329 = v223, v74 do
									v226 = v226 + 1;
									v79[v329] = v224[v226];
								end
							end
						elseif (v82 <= 52) then
							if (v82 == 51) then
								v79[v81[2]] = v79[v81[3]] + v81[4];
							else
								local v228 = v81[2];
								do
									return v13(v79, v228, v74);
								end
							end
						elseif (v82 == 53) then
							if (v81[2] <= v79[v81[4]]) then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						else
							v79[v81[2]][v81[3]] = v79[v81[4]];
						end
					elseif (v82 <= 81) then
						if (v82 <= 67) then
							if (v82 <= 60) then
								if (v82 <= 57) then
									if (v82 <= 55) then
										for v145 = v81[2], v81[3] do
											v79[v145] = nil;
										end
									elseif (v82 > 56) then
										v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
									elseif (v79[v81[2]] == v81[4]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v82 <= 58) then
									if (v79[v81[2]] <= v79[v81[4]]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v82 == 59) then
									local v234 = 0;
									local v235;
									while true do
										if (0 == v234) then
											v235 = v81[2];
											do
												return v13(v79, v235, v235 + v81[3]);
											end
											break;
										end
									end
								else
									v79[v81[2]] = v79[v81[3]];
								end
							elseif (v82 <= 63) then
								if (v82 <= 61) then
									v79[v81[2]] = v79[v81[3]][v81[4]];
								elseif (v82 == 62) then
									v73 = v81[3];
								else
									v79[v81[2]] = v65[v81[3]];
								end
							elseif (v82 <= 65) then
								if (v82 > 64) then
									v64[v81[3]] = v79[v81[2]];
								else
									local v243 = 0;
									local v244;
									local v245;
									local v246;
									while true do
										if (1 == v243) then
											v246 = 0;
											for v407 = v244, v81[4] do
												v246 = v246 + 1;
												v79[v407] = v245[v246];
											end
											break;
										end
										if (v243 == 0) then
											v244 = v81[2];
											v245 = {v79[v244](v79[v244 + 1])};
											v243 = 1;
										end
									end
								end
							elseif (v82 > 66) then
								v79[v81[2]] = v79[v81[3]] * v81[4];
							else
								local v248 = v81[2];
								local v249 = {v79[v248](v13(v79, v248 + 1, v74))};
								local v250 = 0;
								for v332 = v248, v81[4] do
									local v333 = 0;
									while true do
										if (0 == v333) then
											v250 = v250 + 1;
											v79[v332] = v249[v250];
											break;
										end
									end
								end
							end
						elseif (v82 <= 74) then
							if (v82 <= 70) then
								if (v82 <= 68) then
									local v122 = v81[2];
									v79[v122] = v79[v122](v13(v79, v122 + 1, v81[3]));
								elseif (v82 == 69) then
									local v251 = v81[2];
									local v252 = v81[4];
									local v253 = v251 + 2;
									local v254 = {v79[v251](v79[v251 + 1], v79[v253])};
									for v334 = 1, v252 do
										v79[v253 + v334] = v254[v334];
									end
									local v255 = v254[1];
									if v255 then
										v79[v253] = v255;
										v73 = v81[3];
									else
										v73 = v73 + 1;
									end
								else
									v79[v81[2]] = {};
								end
							elseif (v82 <= 72) then
								if (v82 == 71) then
									local v257 = 0;
									local v258;
									while true do
										if (v257 == 0) then
											v258 = v81[2];
											do
												return v79[v258](v13(v79, v258 + 1, v81[3]));
											end
											break;
										end
									end
								else
									local v259 = v81[2];
									local v260 = v79[v81[3]];
									v79[v259 + 1] = v260;
									v79[v259] = v260[v81[4]];
								end
							elseif (v82 == 73) then
								do
									return v79[v81[2]];
								end
							else
								local v264 = 0;
								local v265;
								while true do
									if (v264 == 0) then
										v265 = v81[2];
										v79[v265] = v79[v265](v13(v79, v265 + 1, v74));
										break;
									end
								end
							end
						elseif (v82 <= 77) then
							if (v82 <= 75) then
								local v124 = v79[v81[4]];
								if v124 then
									v73 = v73 + 1;
								else
									local v266 = 0;
									while true do
										if (v266 == 0) then
											v79[v81[2]] = v124;
											v73 = v81[3];
											break;
										end
									end
								end
							elseif (v82 == 76) then
								local v267 = v81[2];
								local v268 = v81[4];
								local v269 = v267 + 2;
								local v270 = {v79[v267](v79[v267 + 1], v79[v269])};
								for v337 = 1, v268 do
									v79[v269 + v337] = v270[v337];
								end
								local v271 = v270[1];
								if v271 then
									v79[v269] = v271;
									v73 = v81[3];
								else
									v73 = v73 + 1;
								end
							else
								local v272 = 0;
								local v273;
								while true do
									if (v272 == 0) then
										v273 = v81[2];
										v79[v273](v79[v273 + 1]);
										break;
									end
								end
							end
						elseif (v82 <= 79) then
							if (v82 > 78) then
								v79[v81[2]] = v79[v81[3]] / v79[v81[4]];
							else
								v79[v81[2]]();
							end
						elseif (v82 > 80) then
							v79[v81[2]] = v29(v70[v81[3]], nil, v65);
						else
							local v276 = 0;
							local v277;
							while true do
								if (v276 == 0) then
									v277 = v81[2];
									v79[v277] = v79[v277]();
									break;
								end
							end
						end
					elseif (v82 <= 95) then
						if (v82 <= 88) then
							if (v82 <= 84) then
								if (v82 <= 82) then
									local v125 = v81[3];
									local v126 = v79[v125];
									for v147 = v125 + 1, v81[4] do
										v126 = v126 .. v79[v147];
									end
									v79[v81[2]] = v126;
								elseif (v82 == 83) then
									local v278 = v81[2];
									v79[v278](v13(v79, v278 + 1, v81[3]));
								else
									local v279 = 0;
									local v280;
									local v281;
									while true do
										if (v279 == 0) then
											v280 = v81[3];
											v281 = v79[v280];
											v279 = 1;
										end
										if (v279 == 1) then
											for v412 = v280 + 1, v81[4] do
												v281 = v281 .. v79[v412];
											end
											v79[v81[2]] = v281;
											break;
										end
									end
								end
							elseif (v82 <= 86) then
								if (v82 > 85) then
									if (v81[2] <= v79[v81[4]]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								elseif (v79[v81[2]] ~= v79[v81[4]]) then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							elseif (v82 == 87) then
								local v282 = v81[2];
								local v283 = {};
								for v340 = 1, #v78 do
									local v341 = v78[v340];
									for v363 = 0, #v341 do
										local v364 = 0;
										local v365;
										local v366;
										local v367;
										while true do
											if (v364 == 1) then
												v367 = v365[2];
												if ((v366 == v79) and (v367 >= v282)) then
													v283[v367] = v366[v367];
													v365[1] = v283;
												end
												break;
											end
											if (v364 == 0) then
												v365 = v341[v363];
												v366 = v365[1];
												v364 = 1;
											end
										end
									end
								end
							else
								local v284 = v81[2];
								v79[v284] = v79[v284]();
							end
						elseif (v82 <= 91) then
							if (v82 <= 89) then
								for v148 = v81[2], v81[3] do
									v79[v148] = nil;
								end
							elseif (v82 == 90) then
								v79[v81[2]] = v79[v81[3]];
							else
								v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
							end
						elseif (v82 <= 93) then
							if (v82 == 92) then
								v79[v81[2]] = v81[3];
							elseif (v79[v81[2]] <= v79[v81[4]]) then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						elseif (v82 > 94) then
							local v292 = v81[2];
							local v293, v294 = v72(v79[v292](v79[v292 + 1]));
							v74 = (v294 + v292) - 1;
							local v295 = 0;
							for v342 = v292, v74 do
								local v343 = 0;
								while true do
									if (v343 == 0) then
										v295 = v295 + 1;
										v79[v342] = v293[v295];
										break;
									end
								end
							end
						else
							do
								return v79[v81[2]];
							end
						end
					elseif (v82 <= 102) then
						if (v82 <= 98) then
							if (v82 <= 96) then
								do
									return;
								end
							elseif (v82 > 97) then
								v79[v81[2]][v81[3]] = v81[4];
							else
								local v298 = 0;
								local v299;
								local v300;
								local v301;
								while true do
									if (v298 == 1) then
										v301 = {};
										v300 = v10({}, {__index=function(v415, v416)
											local v417 = v301[v416];
											return v417[1][v417[2]];
										end,__newindex=function(v418, v419, v420)
											local v421 = 0;
											local v422;
											while true do
												if (v421 == 0) then
													v422 = v301[v419];
													v422[1][v422[2]] = v420;
													break;
												end
											end
										end});
										v298 = 2;
									end
									if (v298 == 2) then
										for v423 = 1, v81[4] do
											v73 = v73 + 1;
											local v424 = v69[v73];
											if (v424[1] == 60) then
												v301[v423 - 1] = {v79,v424[3]};
											else
												v301[v423 - 1] = {v64,v424[3]};
											end
											v78[#v78 + 1] = v301;
										end
										v79[v81[2]] = v29(v299, v300, v65);
										break;
									end
									if (v298 == 0) then
										v299 = v70[v81[3]];
										v300 = nil;
										v298 = 1;
									end
								end
							end
						elseif (v82 <= 100) then
							if (v82 > 99) then
								v79[v81[2]] = v79[v81[3]] - v79[v81[4]];
							else
								local v303 = v81[2];
								local v304 = v79[v81[3]];
								v79[v303 + 1] = v304;
								v79[v303] = v304[v81[4]];
							end
						elseif (v82 > 101) then
							if v79[v81[2]] then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						elseif (v79[v81[2]] ~= v79[v81[4]]) then
							v73 = v73 + 1;
						else
							v73 = v81[3];
						end
					elseif (v82 <= 105) then
						if (v82 <= 103) then
							if (v79[v81[2]] ~= v81[4]) then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						elseif (v82 > 104) then
							local v309 = 0;
							local v310;
							local v311;
							while true do
								if (v309 == 0) then
									v310 = v81[2];
									v311 = {};
									v309 = 1;
								end
								if (v309 == 1) then
									for v426 = 1, #v78 do
										local v427 = v78[v426];
										for v435 = 0, #v427 do
											local v436 = v427[v435];
											local v437 = v436[1];
											local v438 = v436[2];
											if ((v437 == v79) and (v438 >= v310)) then
												v311[v438] = v437[v438];
												v436[1] = v311;
											end
										end
									end
									break;
								end
							end
						elseif (v79[v81[2]] < v79[v81[4]]) then
							v73 = v73 + 1;
						else
							v73 = v81[3];
						end
					elseif (v82 <= 107) then
						if (v82 > 106) then
							local v312 = v81[2];
							v79[v312] = v79[v312](v79[v312 + 1]);
						elseif (v79[v81[2]] == v79[v81[4]]) then
							v73 = v73 + 1;
						else
							v73 = v81[3];
						end
					elseif (v82 > 108) then
						if (v79[v81[2]] == v81[4]) then
							v73 = v73 + 1;
						else
							v73 = v81[3];
						end
					else
						v79[v81[2]] = v81[3] ~= 0;
					end
					v73 = v73 + 1;
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
