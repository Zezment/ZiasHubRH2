---update
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v68 = v2(v0(v30, 16));
				if v19 then
					local v75 = 0;
					local v76;
					while true do
						if (v75 == 1) then
							return v76;
						end
						if (v75 == 0) then
							v76 = v5(v68, v19);
							v19 = nil;
							v75 = 1;
						end
					end
				else
					return v68;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v69 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % (((1640 - (1523 + 114)) - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + (932 - (857 + 74))));
				return v69 - (v69 % (569 - (367 + 201)));
			else
				local v70 = (929 - (214 + 713)) ^ (v32 - (1 + 0 + 0));
				return (((v31 % (v70 + v70)) >= v70) and (1 + (0 - 0))) or (877 - (282 + 595));
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35, v36 = v1(v16, v18, v18 + (1067 - (68 + 997)));
			v18 = v18 + (1272 - (226 + 1044));
			return (v36 * (1114 - 858)) + v35;
		end
		local function v23()
			local v37 = 117 - (32 + 63 + 22);
			local v38;
			local v39;
			local v40;
			local v41;
			while true do
				if (v37 == (0 + 0)) then
					v38, v39, v40, v41 = v1(v16, v18, v18 + (2 - 1) + 2);
					v18 = v18 + (961 - (892 + 65));
					v37 = 2 - 1;
				end
				if (v37 == (1 - 0)) then
					return (v41 * (30800116 - 14022900)) + (v40 * (65886 - (87 + 263))) + (v39 * (436 - (67 + 113))) + v38;
				end
			end
		end
		local function v24()
			local v42 = 0;
			local v43;
			local v44;
			local v45;
			local v46;
			local v47;
			local v48;
			while true do
				if (v42 == ((3 - 1) + 0)) then
					v47 = v20(v44, (521 - (145 + 293)) - 62, 983 - (802 + 150));
					v48 = ((v20(v44, 85 - 53) == (1 - (430 - (44 + 386)))) and -(1 + 0)) or (998 - (915 + 82));
					v42 = 8 - 5;
				end
				if (v42 == (0 + 0)) then
					v43 = v23();
					v44 = v23();
					v42 = (1487 - (998 + 488)) - (0 + 0);
				end
				if (v42 == 3) then
					if (v47 == (1187 - (1069 + 118))) then
						if (v46 == (0 - (0 + 0))) then
							return v48 * (772 - (201 + 571));
						else
							v47 = 1 - 0;
							v45 = 0;
						end
					elseif (v47 == 2047) then
						return ((v46 == (0 + 0)) and (v48 * ((1 - 0) / (0 + 0)))) or (v48 * NaN);
					end
					return v8(v48, v47 - (1814 - (368 + 423))) * (v45 + (v46 / (2 ^ (163 - 111))));
				end
				if ((19 - (10 + 8)) == v42) then
					v45 = 3 - 2;
					v46 = (v20(v44, 443 - (416 + 26), 20) * ((6 - (1142 - (116 + 1022))) ^ 32)) + v43;
					v42 = 1 + 1;
				end
			end
		end
		local function v25(v49)
			local v50;
			if not v49 then
				v49 = v23();
				if (v49 == (0 - 0)) then
					return "";
				end
			end
			v50 = v3(v16, v18, (v18 + v49) - (1 + 0));
			v18 = v18 + v49;
			local v51 = {};
			for v66 = 1, #v50 do
				v51[v66] = v2(v1(v3(v50, v66, v66)));
			end
			return v6(v51);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v52 = 0;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			while true do
				if (v52 ~= 1) then
				else
					v57 = v23();
					v58 = {};
					for v77 = 1, v57 do
						local v78 = 0;
						local v79;
						local v80;
						local v81;
						while true do
							if (v78 ~= 0) then
							else
								local v104 = 0 + 0;
								while true do
									if (0 ~= v104) then
									else
										v79 = 0 - 0;
										v80 = nil;
										v104 = 1 - 0;
									end
									if (v104 == (2 - 1)) then
										v78 = 1;
										break;
									end
								end
							end
							if (v78 == (1 + 0)) then
								v81 = nil;
								while true do
									if (1 == v79) then
										if (v80 == 1) then
											v81 = v21() ~= (0 + 0);
										elseif (v80 == (398 - (115 + 281))) then
											v81 = v24();
										elseif (v80 == (6 - 3)) then
											v81 = v25();
										end
										v58[v77] = v81;
										break;
									end
									if (v79 ~= (0 + 0)) then
									else
										local v112 = 0 - 0;
										local v113;
										while true do
											if (v112 ~= 0) then
											else
												v113 = 0;
												while true do
													if (v113 == 1) then
														v79 = 1;
														break;
													end
													if ((0 - 0) ~= v113) then
													else
														v80 = v21();
														v81 = nil;
														v113 = 1;
													end
												end
												break;
											end
										end
									end
								end
								break;
							end
						end
					end
					v56[3] = v21();
					v52 = 2;
				end
				if ((869 - (550 + 317)) ~= v52) then
				else
					for v82 = 1 - 0, v23() do
						local v83 = 0;
						local v84;
						local v85;
						while true do
							if ((1 - 0) ~= v83) then
							else
								while true do
									if (v84 ~= 0) then
									else
										v85 = v21();
										if (v20(v85, 1, 2 - 1) == (285 - (134 + 151))) then
											local v114 = 0;
											local v115;
											local v116;
											local v117;
											local v118;
											local v119;
											while true do
												if (v114 == 1) then
													local v120 = 0;
													while true do
														if (1 == v120) then
															v114 = 2;
															break;
														end
														if (0 ~= v120) then
														else
															v117 = nil;
															v118 = nil;
															v120 = 1;
														end
													end
												end
												if (v114 == 0) then
													local v121 = 1665 - (970 + 695);
													while true do
														if (v121 ~= 0) then
														else
															v115 = 0;
															v116 = nil;
															v121 = 1 - 0;
														end
														if (v121 ~= 1) then
														else
															v114 = 1991 - (582 + 1408);
															break;
														end
													end
												end
												if (v114 == (6 - 4)) then
													v119 = nil;
													while true do
														if (v115 ~= (0 - 0)) then
														else
															local v122 = 0;
															local v123;
															while true do
																if (v122 ~= 0) then
																else
																	v123 = 0 - 0;
																	while true do
																		if (v123 == (1824 - (1195 + 629))) then
																			local v381 = 0 - 0;
																			while true do
																				if (v381 ~= (242 - (187 + 54))) then
																				else
																					v123 = 1;
																					break;
																				end
																				if (v381 ~= (780 - (162 + 618))) then
																				else
																					v116 = 0 + 0;
																					v117 = nil;
																					v381 = 1;
																				end
																			end
																		end
																		if (v123 == (1 + 0)) then
																			v115 = 1;
																			break;
																		end
																	end
																	break;
																end
															end
														end
														if (v115 ~= 1) then
														else
															local v124 = 0;
															while true do
																if (v124 ~= (1 - 0)) then
																else
																	v115 = 2;
																	break;
																end
																if (v124 == (0 - 0)) then
																	v118 = nil;
																	v119 = nil;
																	v124 = 1 + 0;
																end
															end
														end
														if ((1638 - (1373 + 263)) == v115) then
															while true do
																if (v116 ~= 2) then
																else
																	local v161 = 0;
																	local v162;
																	while true do
																		if ((1000 - (451 + 549)) == v161) then
																			v162 = 0;
																			while true do
																				if (v162 ~= (0 + 0)) then
																				else
																					local v438 = 0 - 0;
																					local v439;
																					while true do
																						if (v438 ~= 0) then
																						else
																							v439 = 0 - 0;
																							while true do
																								if (v439 == 1) then
																									v162 = 1;
																									break;
																								end
																								if (v439 == 0) then
																									if (v20(v118, 1, 1385 - (746 + 638)) == 1) then
																										v119[1 + 1] = v58[v119[2 - 0]];
																									end
																									if (v20(v118, 343 - (218 + 123), 2) ~= 1) then
																									else
																										v119[3] = v58[v119[1584 - (1535 + 46)]];
																									end
																									v439 = 1 + 0;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if ((1 + 0) == v162) then
																					v116 = 3;
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v116 ~= 1) then
																else
																	local v163 = 0;
																	while true do
																		if (v163 ~= 0) then
																		else
																			local v382 = 0;
																			while true do
																				if (v382 == (560 - (306 + 254))) then
																					v119 = {v22(),v22(),nil,nil};
																					if (v117 == 0) then
																						local v452 = 0;
																						local v453;
																						local v454;
																						while true do
																							if (v452 == (1467 - (899 + 568))) then
																								v453 = 0 + 0;
																								v454 = nil;
																								v452 = 2 - 1;
																							end
																							if (v452 ~= (604 - (268 + 335))) then
																							else
																								while true do
																									if (v453 == 0) then
																										v454 = 290 - (60 + 230);
																										while true do
																											if (v454 == (572 - (426 + 146))) then
																												v119[3] = v22();
																												v119[4] = v22();
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					elseif (v117 == (1 + 0)) then
																						v119[1459 - (282 + 1174)] = v23();
																					elseif (v117 == (813 - (569 + 242))) then
																						v119[3] = v23() - (2 ^ (46 - 30));
																					elseif (v117 ~= (1 + 2)) then
																					else
																						local v474 = 0;
																						local v475;
																						local v476;
																						local v477;
																						while true do
																							if (v474 ~= (1025 - (706 + 318))) then
																							else
																								v477 = nil;
																								while true do
																									if (v475 ~= (1252 - (721 + 530))) then
																									else
																										while true do
																											if (0 == v476) then
																												v477 = 1271 - (945 + 326);
																												while true do
																													if (v477 == 0) then
																														v119[7 - 4] = v23() - (2 ^ 16);
																														v119[4 + 0] = v22();
																														break;
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (v475 == (700 - (271 + 429))) then
																										local v483 = 0 + 0;
																										while true do
																											if (v483 == (1501 - (1408 + 92))) then
																												v475 = 1;
																												break;
																											end
																											if (v483 == (1086 - (461 + 625))) then
																												v476 = 0;
																												v477 = nil;
																												v483 = 1;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v474 ~= (1288 - (993 + 295))) then
																							else
																								v475 = 0;
																								v476 = nil;
																								v474 = 1;
																							end
																						end
																					end
																					v382 = 1;
																				end
																				if (v382 == (1 + 0)) then
																					v163 = 1172 - (418 + 753);
																					break;
																				end
																			end
																		end
																		if (v163 ~= 1) then
																		else
																			v116 = 2;
																			break;
																		end
																	end
																end
																if (v116 ~= (2 + 1)) then
																else
																	if (v20(v118, 1 + 2, 1 + 2) == 1) then
																		v119[4] = v58[v119[4]];
																	end
																	v53[v82] = v119;
																	break;
																end
																if (v116 ~= 0) then
																else
																	local v165 = 0 + 0;
																	local v166;
																	while true do
																		if (v165 ~= 0) then
																		else
																			v166 = 529 - (406 + 123);
																			while true do
																				if (v166 == (1770 - (1749 + 20))) then
																					v116 = 1 + 0;
																					break;
																				end
																				if (v166 ~= (1322 - (1249 + 73))) then
																				else
																					local v440 = 0 + 0;
																					while true do
																						if (v440 ~= (1146 - (466 + 679))) then
																						else
																							v166 = 2 - 1;
																							break;
																						end
																						if (v440 ~= 0) then
																						else
																							v117 = v20(v85, 5 - 3, 3);
																							v118 = v20(v85, 4, 6);
																							v440 = 1;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
													break;
												end
											end
										end
										break;
									end
								end
								break;
							end
							if (v83 == (1900 - (106 + 1794))) then
								v84 = 0;
								v85 = nil;
								v83 = 1;
							end
						end
					end
					for v86 = 1 + 0, v23() do
						v54[v86 - (1 + 0)] = v28();
					end
					return v56;
				end
				if ((0 - 0) == v52) then
					v53 = {};
					v54 = {};
					v55 = {};
					v56 = {v53,v54,nil,v55};
					v52 = 115 - (4 + 110);
				end
			end
		end
		local function v29(v59, v60, v61)
			local v62 = 0;
			local v63;
			local v64;
			local v65;
			while true do
				if (1 == v62) then
					v65 = v59[3];
					return function(...)
						local v88 = v63;
						local v89 = v64;
						local v90 = v65;
						local v91 = v27;
						local v92 = 1;
						local v93 = -1;
						local v94 = {};
						local v95 = {...};
						local v96 = v12("#", ...) - 1;
						local v97 = {};
						local v98 = {};
						for v102 = 0, v96 do
							if (v102 >= v90) then
								v94[v102 - v90] = v95[v102 + 1];
							else
								v98[v102] = v95[v102 + 1];
							end
						end
						local v99 = (v96 - v90) + 1;
						local v100;
						local v101;
						while true do
							local v103 = 0;
							while true do
								if (v103 == 0) then
									v100 = v88[v92];
									v101 = v100[1];
									v103 = 1;
								end
								if (v103 == 1) then
									if (v101 <= 51) then
										if (v101 <= 25) then
											if (v101 <= 12) then
												if (v101 <= 5) then
													if (v101 <= 2) then
														if (v101 <= 0) then
															v98[v100[2]] = v61[v100[3]];
														elseif (v101 == 1) then
															v98[v100[2]][v100[3]] = v98[v100[4]];
														else
															local v176 = 0;
															local v177;
															while true do
																if (v176 == 0) then
																	v177 = v98[v100[4]];
																	if v177 then
																		v92 = v92 + 1;
																	else
																		local v441 = 0;
																		while true do
																			if (v441 == 0) then
																				v98[v100[2]] = v177;
																				v92 = v100[3];
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														end
													elseif (v101 <= 3) then
														v98[v100[2]] = v100[3] ~= 0;
													elseif (v101 == 4) then
														local v178 = v100[2];
														local v179 = {v98[v178](v13(v98, v178 + 1, v93))};
														local v180 = 0;
														for v322 = v178, v100[4] do
															v180 = v180 + 1;
															v98[v322] = v179[v180];
														end
													else
														v98[v100[2]][v100[3]] = v98[v100[4]];
													end
												elseif (v101 <= 8) then
													if (v101 <= 6) then
														if (v98[v100[2]] == v98[v100[4]]) then
															v92 = v92 + 1;
														else
															v92 = v100[3];
														end
													elseif (v101 == 7) then
														if (v100[2] <= v98[v100[4]]) then
															v92 = v92 + 1;
														else
															v92 = v100[3];
														end
													else
														v98[v100[2]] = v98[v100[3]] + v100[4];
													end
												elseif (v101 <= 10) then
													if (v101 > 9) then
														local v185 = v100[2];
														do
															return v13(v98, v185, v93);
														end
													else
														local v186 = 0;
														local v187;
														while true do
															if (v186 == 0) then
																v187 = v100[2];
																v98[v187] = v98[v187]();
																break;
															end
														end
													end
												elseif (v101 > 11) then
													if not v98[v100[2]] then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												else
													v98[v100[2]] = v100[3] ~= 0;
												end
											elseif (v101 <= 18) then
												if (v101 <= 15) then
													if (v101 <= 13) then
														v98[v100[2]]();
													elseif (v101 > 14) then
														v98[v100[2]] = v100[3];
													elseif (v98[v100[2]] < v98[v100[4]]) then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												elseif (v101 <= 16) then
													local v128 = v100[2];
													local v129, v130 = v91(v98[v128](v13(v98, v128 + 1, v100[3])));
													v93 = (v130 + v128) - 1;
													local v131 = 0;
													for v167 = v128, v93 do
														local v168 = 0;
														while true do
															if (v168 == 0) then
																v131 = v131 + 1;
																v98[v167] = v129[v131];
																break;
															end
														end
													end
												elseif (v101 > 17) then
													v98[v100[2]][v100[3]] = v100[4];
												else
													local v193 = v100[2];
													local v194 = v98[v100[3]];
													v98[v193 + 1] = v194;
													v98[v193] = v194[v100[4]];
												end
											elseif (v101 <= 21) then
												if (v101 <= 19) then
													local v132 = 0;
													local v133;
													while true do
														if (v132 == 0) then
															v133 = v100[2];
															v98[v133](v13(v98, v133 + 1, v100[3]));
															break;
														end
													end
												elseif (v101 == 20) then
													local v198 = v100[2];
													local v199 = {};
													for v326 = 1, #v97 do
														local v327 = v97[v326];
														for v388 = 0, #v327 do
															local v389 = v327[v388];
															local v390 = v389[1];
															local v391 = v389[2];
															if ((v390 == v98) and (v391 >= v198)) then
																local v424 = 0;
																while true do
																	if (v424 == 0) then
																		v199[v391] = v390[v391];
																		v389[1] = v199;
																		break;
																	end
																end
															end
														end
													end
												else
													do
														return v98[v100[2]];
													end
												end
											elseif (v101 <= 23) then
												if (v101 == 22) then
													local v200 = v100[2];
													local v201 = v100[4];
													local v202 = v200 + 2;
													local v203 = {v98[v200](v98[v200 + 1], v98[v202])};
													for v328 = 1, v201 do
														v98[v202 + v328] = v203[v328];
													end
													local v204 = v203[1];
													if v204 then
														v98[v202] = v204;
														v92 = v100[3];
													else
														v92 = v92 + 1;
													end
												else
													v98[v100[2]] = v98[v100[3]];
												end
											elseif (v101 > 24) then
												local v207 = v100[2];
												do
													return v98[v207](v13(v98, v207 + 1, v100[3]));
												end
											else
												local v208 = v100[2];
												local v209, v210 = v91(v98[v208](v13(v98, v208 + 1, v93)));
												v93 = (v210 + v208) - 1;
												local v211 = 0;
												for v331 = v208, v93 do
													local v332 = 0;
													while true do
														if (v332 == 0) then
															v211 = v211 + 1;
															v98[v331] = v209[v211];
															break;
														end
													end
												end
											end
										elseif (v101 <= 38) then
											if (v101 <= 31) then
												if (v101 <= 28) then
													if (v101 <= 26) then
														v98[v100[2]] = v60[v100[3]];
													elseif (v101 > 27) then
														v98[v100[2]] = v98[v100[3]] / v98[v100[4]];
													else
														v60[v100[3]] = v98[v100[2]];
													end
												elseif (v101 <= 29) then
													v98[v100[2]] = v29(v89[v100[3]], nil, v61);
												elseif (v101 == 30) then
													do
														return;
													end
												else
													v98[v100[2]] = v60[v100[3]];
												end
											elseif (v101 <= 34) then
												if (v101 <= 32) then
													v98[v100[2]] = v98[v100[3]] - v98[v100[4]];
												elseif (v101 > 33) then
													local v217 = v100[2];
													v98[v217] = v98[v217]();
												else
													local v219 = v100[3];
													local v220 = v98[v219];
													for v333 = v219 + 1, v100[4] do
														v220 = v220 .. v98[v333];
													end
													v98[v100[2]] = v220;
												end
											elseif (v101 <= 36) then
												if (v101 > 35) then
													local v222 = v100[2];
													local v223, v224 = v91(v98[v222](v13(v98, v222 + 1, v100[3])));
													v93 = (v224 + v222) - 1;
													local v225 = 0;
													for v334 = v222, v93 do
														v225 = v225 + 1;
														v98[v334] = v223[v225];
													end
												elseif (v98[v100[2]] == v100[4]) then
													v92 = v92 + 1;
												else
													v92 = v100[3];
												end
											elseif (v101 == 37) then
												local v226 = v100[3];
												local v227 = v98[v226];
												for v337 = v226 + 1, v100[4] do
													v227 = v227 .. v98[v337];
												end
												v98[v100[2]] = v227;
											else
												local v229 = v100[2];
												do
													return v98[v229](v13(v98, v229 + 1, v100[3]));
												end
											end
										elseif (v101 <= 44) then
											if (v101 <= 41) then
												if (v101 <= 39) then
													if (v98[v100[2]] <= v98[v100[4]]) then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												elseif (v101 > 40) then
													v60[v100[3]] = v98[v100[2]];
												else
													v98[v100[2]][v98[v100[3]]] = v98[v100[4]];
												end
											elseif (v101 <= 42) then
												if (v100[2] == v98[v100[4]]) then
													v92 = v92 + 1;
												else
													v92 = v100[3];
												end
											elseif (v101 == 43) then
												local v236 = v100[2];
												v98[v236] = v98[v236](v13(v98, v236 + 1, v93));
											else
												for v338 = v100[2], v100[3] do
													v98[v338] = nil;
												end
											end
										elseif (v101 <= 47) then
											if (v101 <= 45) then
												local v138 = 0;
												local v139;
												local v140;
												local v141;
												while true do
													if (v138 == 0) then
														v139 = v100[2];
														v140 = {v98[v139](v98[v139 + 1])};
														v138 = 1;
													end
													if (v138 == 1) then
														v141 = 0;
														for v395 = v139, v100[4] do
															local v396 = 0;
															while true do
																if (v396 == 0) then
																	v141 = v141 + 1;
																	v98[v395] = v140[v141];
																	break;
																end
															end
														end
														break;
													end
												end
											elseif (v101 > 46) then
												local v238 = v89[v100[3]];
												local v239;
												local v240 = {};
												v239 = v10({}, {__index=function(v341, v342)
													local v343 = v240[v342];
													return v343[1][v343[2]];
												end,__newindex=function(v344, v345, v346)
													local v347 = v240[v345];
													v347[1][v347[2]] = v346;
												end});
												for v349 = 1, v100[4] do
													v92 = v92 + 1;
													local v350 = v88[v92];
													if (v350[1] == 79) then
														v240[v349 - 1] = {v98,v350[3]};
													else
														v240[v349 - 1] = {v60,v350[3]};
													end
													v97[#v97 + 1] = v240;
												end
												v98[v100[2]] = v29(v238, v239, v61);
											else
												v92 = v100[3];
											end
										elseif (v101 <= 49) then
											if (v101 > 48) then
												if (v100[2] == v98[v100[4]]) then
													v92 = v92 + 1;
												else
													v92 = v100[3];
												end
											else
												v98[v100[2]] = v98[v100[3]][v100[4]];
											end
										elseif (v101 > 50) then
											v92 = v100[3];
										elseif (v98[v100[2]] ~= v98[v100[4]]) then
											v92 = v92 + 1;
										else
											v92 = v100[3];
										end
									elseif (v101 <= 77) then
										if (v101 <= 64) then
											if (v101 <= 57) then
												if (v101 <= 54) then
													if (v101 <= 52) then
														v98[v100[2]] = v98[v100[3]][v100[4]];
													elseif (v101 > 53) then
														local v246 = v100[2];
														local v247 = {v98[v246](v98[v246 + 1])};
														local v248 = 0;
														for v352 = v246, v100[4] do
															local v353 = 0;
															while true do
																if (0 == v353) then
																	v248 = v248 + 1;
																	v98[v352] = v247[v248];
																	break;
																end
															end
														end
													else
														local v249 = v100[2];
														do
															return v13(v98, v249, v249 + v100[3]);
														end
													end
												elseif (v101 <= 55) then
													local v144 = v100[2];
													local v145, v146 = v91(v98[v144](v13(v98, v144 + 1, v93)));
													v93 = (v146 + v144) - 1;
													local v147 = 0;
													for v169 = v144, v93 do
														local v170 = 0;
														while true do
															if (v170 == 0) then
																v147 = v147 + 1;
																v98[v169] = v145[v147];
																break;
															end
														end
													end
												elseif (v101 == 56) then
													local v250 = v100[2];
													local v251 = {v98[v250](v13(v98, v250 + 1, v93))};
													local v252 = 0;
													for v354 = v250, v100[4] do
														v252 = v252 + 1;
														v98[v354] = v251[v252];
													end
												else
													v98[v100[2]][v98[v100[3]]] = v98[v100[4]];
												end
											elseif (v101 <= 60) then
												if (v101 <= 58) then
													local v148 = v100[2];
													local v149 = v100[4];
													local v150 = v148 + 2;
													local v151 = {v98[v148](v98[v148 + 1], v98[v150])};
													for v171 = 1, v149 do
														v98[v150 + v171] = v151[v171];
													end
													local v152 = v151[1];
													if v152 then
														local v255 = 0;
														while true do
															if (v255 == 0) then
																v98[v150] = v152;
																v92 = v100[3];
																break;
															end
														end
													else
														v92 = v92 + 1;
													end
												elseif (v101 == 59) then
													if v98[v100[2]] then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												else
													v98[v100[2]] = v61[v100[3]];
												end
											elseif (v101 <= 62) then
												if (v101 > 61) then
													if (v98[v100[2]] == v100[4]) then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												else
													local v258 = v100[2];
													v98[v258] = v98[v258](v98[v258 + 1]);
												end
											elseif (v101 == 63) then
												v98[v100[2]]();
											else
												v98[v100[2]] = v98[v100[3]][v98[v100[4]]];
											end
										elseif (v101 <= 70) then
											if (v101 <= 67) then
												if (v101 <= 65) then
													if (v100[2] <= v98[v100[4]]) then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												elseif (v101 == 66) then
													if v98[v100[2]] then
														v92 = v92 + 1;
													else
														v92 = v100[3];
													end
												else
													do
														return;
													end
												end
											elseif (v101 <= 68) then
												local v153 = 0;
												local v154;
												while true do
													if (v153 == 0) then
														v154 = v100[2];
														v98[v154] = v98[v154](v13(v98, v154 + 1, v93));
														break;
													end
												end
											elseif (v101 == 69) then
												local v263 = v89[v100[3]];
												local v264;
												local v265 = {};
												v264 = v10({}, {__index=function(v359, v360)
													local v361 = v265[v360];
													return v361[1][v361[2]];
												end,__newindex=function(v362, v363, v364)
													local v365 = v265[v363];
													v365[1][v365[2]] = v364;
												end});
												for v367 = 1, v100[4] do
													local v368 = 0;
													local v369;
													while true do
														if (1 == v368) then
															if (v369[1] == 79) then
																v265[v367 - 1] = {v98,v369[3]};
															else
																v265[v367 - 1] = {v60,v369[3]};
															end
															v97[#v97 + 1] = v265;
															break;
														end
														if (v368 == 0) then
															v92 = v92 + 1;
															v369 = v88[v92];
															v368 = 1;
														end
													end
												end
												v98[v100[2]] = v29(v263, v264, v61);
											else
												local v267 = 0;
												local v268;
												while true do
													if (v267 == 0) then
														v268 = v100[2];
														do
															return v13(v98, v268, v93);
														end
														break;
													end
												end
											end
										elseif (v101 <= 73) then
											if (v101 <= 71) then
												v98[v100[2]] = v98[v100[3]] + v100[4];
											elseif (v101 > 72) then
												v98[v100[2]] = {};
											else
												v98[v100[2]][v100[3]] = v100[4];
											end
										elseif (v101 <= 75) then
											if (v101 > 74) then
												v98[v100[2]] = v98[v100[3]] / v98[v100[4]];
											else
												v98[v100[2]] = v98[v100[3]][v98[v100[4]]];
											end
										elseif (v101 == 76) then
											if not v98[v100[2]] then
												v92 = v92 + 1;
											else
												v92 = v100[3];
											end
										else
											local v275 = v100[2];
											v98[v275] = v98[v275](v13(v98, v275 + 1, v100[3]));
										end
									elseif (v101 <= 90) then
										if (v101 <= 83) then
											if (v101 <= 80) then
												if (v101 <= 78) then
													do
														return v98[v100[2]];
													end
												elseif (v101 == 79) then
													v98[v100[2]] = v98[v100[3]];
												else
													local v279 = 0;
													local v280;
													while true do
														if (0 == v279) then
															v280 = v100[2];
															v98[v280](v13(v98, v280 + 1, v93));
															break;
														end
													end
												end
											elseif (v101 <= 81) then
												local v156 = v100[2];
												v98[v156] = v98[v156](v13(v98, v156 + 1, v100[3]));
											elseif (v101 > 82) then
												local v281 = v100[2];
												v98[v281] = v98[v281](v98[v281 + 1]);
											else
												v98[v100[2]] = {};
											end
										elseif (v101 <= 86) then
											if (v101 <= 84) then
												if (v98[v100[2]] < v98[v100[4]]) then
													v92 = v92 + 1;
												else
													v92 = v100[3];
												end
											elseif (v101 > 85) then
												if (v98[v100[2]] <= v98[v100[4]]) then
													v92 = v92 + 1;
												else
													v92 = v100[3];
												end
											else
												local v285 = v100[2];
												local v286 = v98[v100[3]];
												v98[v285 + 1] = v286;
												v98[v285] = v286[v100[4]];
											end
										elseif (v101 <= 88) then
											if (v101 == 87) then
												v98[v100[2]] = v98[v100[3]] - v98[v100[4]];
											else
												local v291 = 0;
												local v292;
												local v293;
												while true do
													if (v291 == 1) then
														for v431 = v292 + 1, v100[3] do
															v7(v293, v98[v431]);
														end
														break;
													end
													if (v291 == 0) then
														v292 = v100[2];
														v293 = v98[v292];
														v291 = 1;
													end
												end
											end
										elseif (v101 > 89) then
											local v294 = v100[2];
											v98[v294](v13(v98, v294 + 1, v93));
										elseif (v98[v100[2]] ~= v98[v100[4]]) then
											v92 = v92 + 1;
										else
											v92 = v100[3];
										end
									elseif (v101 <= 96) then
										if (v101 <= 93) then
											if (v101 <= 91) then
												local v158 = v100[2];
												v98[v158](v13(v98, v158 + 1, v100[3]));
											elseif (v101 > 92) then
												local v295 = 0;
												local v296;
												local v297;
												local v298;
												while true do
													if (v295 == 0) then
														v296 = v100[2];
														v297 = v98[v296];
														v295 = 1;
													end
													if (v295 == 1) then
														v298 = v100[3];
														for v432 = 1, v298 do
															v297[v432] = v98[v296 + v432];
														end
														break;
													end
												end
											else
												for v370 = v100[2], v100[3] do
													v98[v370] = nil;
												end
											end
										elseif (v101 <= 94) then
											v98[v100[2]] = v100[3];
										elseif (v101 > 95) then
											local v299 = 0;
											local v300;
											while true do
												if (v299 == 0) then
													v300 = v100[2];
													v98[v300](v98[v300 + 1]);
													break;
												end
											end
										else
											local v301 = 0;
											local v302;
											local v303;
											local v304;
											local v305;
											while true do
												if (v301 == 0) then
													v302 = v100[2];
													v303, v304 = v91(v98[v302](v98[v302 + 1]));
													v301 = 1;
												end
												if (v301 == 1) then
													v93 = (v304 + v302) - 1;
													v305 = 0;
													v301 = 2;
												end
												if (v301 == 2) then
													for v435 = v302, v93 do
														local v436 = 0;
														while true do
															if (v436 == 0) then
																v305 = v305 + 1;
																v98[v435] = v303[v305];
																break;
															end
														end
													end
													break;
												end
											end
										end
									elseif (v101 <= 99) then
										if (v101 <= 97) then
											if (v98[v100[2]] == v98[v100[4]]) then
												v92 = v92 + 1;
											else
												v92 = v100[3];
											end
										elseif (v101 > 98) then
											v98[v100[2]] = v29(v89[v100[3]], nil, v61);
										else
											local v308 = 0;
											local v309;
											while true do
												if (v308 == 0) then
													v309 = v98[v100[4]];
													if v309 then
														v92 = v92 + 1;
													else
														local v444 = 0;
														while true do
															if (v444 == 0) then
																v98[v100[2]] = v309;
																v92 = v100[3];
																break;
															end
														end
													end
													break;
												end
											end
										end
									elseif (v101 <= 101) then
										if (v101 == 100) then
											local v310 = v100[2];
											local v311 = v98[v310];
											local v312 = v100[3];
											for v372 = 1, v312 do
												v311[v372] = v98[v310 + v372];
											end
										else
											local v313 = v100[2];
											v98[v313](v98[v313 + 1]);
										end
									elseif (v101 > 102) then
										local v314 = v100[2];
										local v315, v316 = v91(v98[v314](v98[v314 + 1]));
										v93 = (v316 + v314) - 1;
										local v317 = 0;
										for v375 = v314, v93 do
											v317 = v317 + 1;
											v98[v375] = v315[v317];
										end
									else
										local v318 = v100[2];
										local v319 = {};
										for v378 = 1, #v97 do
											local v379 = 0;
											local v380;
											while true do
												if (v379 == 0) then
													v380 = v97[v378];
													for v445 = 0, #v380 do
														local v446 = 0;
														local v447;
														local v448;
														local v449;
														while true do
															if (v446 == 0) then
																v447 = v380[v445];
																v448 = v447[1];
																v446 = 1;
															end
															if (v446 == 1) then
																v449 = v447[2];
																if ((v448 == v98) and (v449 >= v318)) then
																	local v468 = 0;
																	while true do
																		if (v468 == 0) then
																			v319[v449] = v448[v449];
																			v447[1] = v319;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
									end
									v92 = v92 + 1;
									break;
								end
							end
						end
					end;
				end
				if (v62 == 0) then
					v63 = v59[1];
					v64 = v59[2];
					v62 = 1;
				end
			end
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
