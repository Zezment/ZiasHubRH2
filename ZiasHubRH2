---update 2
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 2) then
				function v22()
					local v31 = 0 - 0;
					local v32;
					while true do
						if (v31 == (2 - 1)) then
							return v32;
						end
						if ((0 - 0) == v31) then
							v32 = v1(v16, v19, v19);
							v19 = v19 + (2 - 1);
							v31 = 1;
						end
					end
				end
				v23 = nil;
				function v23()
					local v33, v34 = v1(v16, v19, v19 + (621 - (555 + 64)));
					v19 = v19 + (933 - (857 + 74));
					return (v34 * (824 - (367 + 201))) + v33;
				end
				v18 = 3;
			end
			if (v18 == 4) then
				function v25()
					local v35 = v24();
					local v36 = v24();
					local v37 = 928 - (214 + 713);
					local v38 = (v21(v36, 1 + 0, 4 + 16) * ((879 - (282 + 595)) ^ (1669 - (1523 + (258 - 144))))) + v35;
					local v39 = v21(v36, 19 + 2, 43 - 12);
					local v40 = ((v21(v36, 1097 - (68 + 997)) == 1) and -(1271 - ((494 - 268) + 1044))) or (3 - 2);
					if (v39 == (0 - 0)) then
						if (v38 == (117 - (32 + 85))) then
							return v40 * (0 - 0);
						else
							v39 = 1 + 0;
							v37 = 0 + 0;
						end
					elseif (v39 == (3004 - (892 + 65))) then
						return ((v38 == (0 + 0)) and (v40 * (((3 - 1) - (1 + 0)) / (0 - (791 - (368 + 423)))))) or (v40 * NaN);
					end
					return v8(v40, v39 - (1890 - 867)) * (v37 + (v38 / (((6 - 4) - 0) ^ (1239 - (1069 + 118)))));
				end
				v26 = nil;
				function v26(v41)
					local v42;
					if not v41 then
						v41 = v24();
						if (v41 == (18 - (10 + 8))) then
							return "";
						end
					end
					v42 = v3(v16, v19, (v19 + v41) - (3 - 2));
					v19 = v19 + v41;
					local v43 = {};
					for v66 = 443 - (416 + 26), #v42 do
						v43[v66] = v2(v1(v3(v42, v66, v66)));
					end
					return v6(v43);
				end
				v18 = 5;
			end
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v44 = 438 - (262 + 176);
					local v45;
					local v46;
					local v47;
					local v48;
					local v49;
					local v50;
					local v51;
					while true do
						if (v44 ~= 0) then
						else
							v45 = 1721 - (345 + 1376);
							v46 = nil;
							v44 = 689 - (198 + 490);
						end
						if (v44 ~= 3) then
						else
							v51 = nil;
							while true do
								if (v45 == (13 - 10)) then
									local v96 = 0 - 0;
									local v97;
									while true do
										if (v96 == 0) then
											v97 = 1206 - (696 + 510);
											while true do
												if ((0 - 0) ~= v97) then
												else
													local v112 = 1262 - (1091 + 171);
													while true do
														if (v112 ~= 0) then
														else
															for v167 = 1, v24() do
																v47[v167 - 1] = v29();
															end
															return v49;
														end
													end
												end
											end
											break;
										end
									end
								end
								if (v45 ~= (1 + 1)) then
								else
									local v98 = 0;
									while true do
										if (v98 ~= 0) then
										else
											for v102 = 1, v50 do
												local v103 = 0;
												local v104;
												local v105;
												local v106;
												local v107;
												while true do
													if (v103 == (6 - 4)) then
														while true do
															if (v104 == (0 - 0)) then
																v105 = 0;
																v106 = nil;
																v104 = 1;
															end
															if (v104 ~= (375 - (123 + 251))) then
															else
																v107 = nil;
																while true do
																	if (v105 ~= (0 - 0)) then
																	else
																		local v379 = 0;
																		local v380;
																		local v381;
																		while true do
																			if (v379 ~= 1) then
																			else
																				while true do
																					if (v380 == 0) then
																						v381 = 698 - (208 + 490);
																						while true do
																							if (v381 == 0) then
																								local v477 = 0 + 0;
																								while true do
																									if (v477 == (0 + 0)) then
																										v106 = v22();
																										v107 = nil;
																										v477 = 1;
																									end
																									if (v477 == 1) then
																										v381 = 1;
																										break;
																									end
																								end
																							end
																							if (v381 ~= 1) then
																							else
																								v105 = 1;
																								break;
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (0 ~= v379) then
																			else
																				v380 = 836 - (660 + 176);
																				v381 = nil;
																				v379 = 1 + 0;
																			end
																		end
																	end
																	if (v105 == 1) then
																		if (v106 == (203 - (14 + 188))) then
																			v107 = v22() ~= (675 - (534 + 141));
																		elseif (v106 == 2) then
																			v107 = v25();
																		elseif (v106 ~= (2 + 1)) then
																		else
																			v107 = v26();
																		end
																		v51[v102] = v107;
																		break;
																	end
																end
																break;
															end
														end
														break;
													end
													if (v103 ~= 1) then
													else
														v106 = nil;
														v107 = nil;
														v103 = 2;
													end
													if (v103 == (0 + 0)) then
														v104 = 0 + 0;
														v105 = nil;
														v103 = 1;
													end
												end
											end
											v49[3] = v22();
											v98 = 1;
										end
										if (1 ~= v98) then
										else
											for v108 = 1, v24() do
												local v109 = 0;
												local v110;
												local v111;
												while true do
													if (v109 ~= 1) then
													else
														while true do
															if (v110 ~= (0 - 0)) then
															else
																v111 = v22();
																if (v21(v111, 1 - 0, 2 - 1) == 0) then
																	local v353 = 0 + 0;
																	local v354;
																	local v355;
																	local v356;
																	local v357;
																	while true do
																		if (2 ~= v353) then
																		else
																			while true do
																				if (v354 ~= (0 + 0)) then
																				else
																					local v463 = 396 - (115 + 281);
																					while true do
																						if (v463 ~= 1) then
																						else
																							v354 = 1;
																							break;
																						end
																						if (v463 == 0) then
																							v355 = v21(v111, 4 - 2, 3 + 0);
																							v356 = v21(v111, 4, 14 - 8);
																							v463 = 1;
																						end
																					end
																				end
																				if (v354 ~= (7 - 5)) then
																				else
																					if (v21(v356, 868 - (550 + 317), 1 - 0) ~= 1) then
																					else
																						v357[2 - 0] = v51[v357[2]];
																					end
																					if (v21(v356, 2, 2) == 1) then
																						v357[8 - 5] = v51[v357[288 - (134 + 151)]];
																					end
																					v354 = 1668 - (970 + 695);
																				end
																				if (3 ~= v354) then
																				else
																					if (v21(v356, 3, 5 - 2) ~= (1991 - (582 + 1408))) then
																					else
																						v357[13 - 9] = v51[v357[4 - 0]];
																					end
																					v46[v108] = v357;
																					break;
																				end
																				if ((3 - 2) == v354) then
																					local v465 = 1824 - (1195 + 629);
																					while true do
																						if (v465 ~= 1) then
																						else
																							v354 = 2 - 0;
																							break;
																						end
																						if (v465 == (241 - (187 + 54))) then
																							v357 = {v23(),v23(),nil,nil};
																							if (v355 == (0 - 0)) then
																								local v478 = 0 - 0;
																								local v479;
																								local v480;
																								while true do
																									if (v478 == (0 + 0)) then
																										v479 = 0;
																										v480 = nil;
																										v478 = 1637 - (1373 + 263);
																									end
																									if (v478 ~= 1) then
																									else
																										while true do
																											if (v479 == (1000 - (451 + 549))) then
																												v480 = 0;
																												while true do
																													if (v480 ~= (0 + 0)) then
																													else
																														v357[4 - 1] = v23();
																														v357[6 - 2] = v23();
																														break;
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							elseif (v355 == 1) then
																								v357[3] = v24();
																							elseif (v355 == (1386 - (746 + 638))) then
																								v357[3] = v24() - ((1 + 1) ^ 16);
																							elseif (v355 ~= (4 - 1)) then
																							else
																								local v483 = 0;
																								local v484;
																								while true do
																									if (v483 ~= 0) then
																									else
																										v484 = 341 - (218 + 123);
																										while true do
																											if (v484 ~= 0) then
																											else
																												v357[3] = v24() - ((1583 - (1535 + 46)) ^ 16);
																												v357[4 + 0] = v23();
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							v465 = 1;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if (v353 ~= (0 + 0)) then
																		else
																			v354 = 560 - (306 + 254);
																			v355 = nil;
																			v353 = 1 + 0;
																		end
																		if (v353 ~= (1 - 0)) then
																		else
																			v356 = nil;
																			v357 = nil;
																			v353 = 1469 - (899 + 568);
																		end
																	end
																end
																break;
															end
														end
														break;
													end
													if ((0 + 0) == v109) then
														local v114 = 0 - 0;
														while true do
															if (v114 == 0) then
																v110 = 603 - (268 + 335);
																v111 = nil;
																v114 = 1;
															end
															if (v114 == (291 - (60 + 230))) then
																v109 = 573 - (426 + 146);
																break;
															end
														end
													end
												end
											end
											v45 = 3;
											break;
										end
									end
								end
								if (v45 ~= 0) then
								else
									local v99 = 0 + 0;
									local v100;
									while true do
										if ((1456 - (282 + 1174)) ~= v99) then
										else
											v100 = 0;
											while true do
												if (v100 ~= 0) then
												else
													local v113 = 811 - (569 + 242);
													while true do
														if (v113 == (2 - 1)) then
															v100 = 1 + 0;
															break;
														end
														if (v113 == 0) then
															v46 = {};
															v47 = {};
															v113 = 1025 - (706 + 318);
														end
													end
												end
												if (v100 == (1252 - (721 + 530))) then
													v48 = {};
													v45 = 1;
													break;
												end
											end
											break;
										end
									end
								end
								if (v45 == (1272 - (945 + 326))) then
									v49 = {v46,v47,nil,v48};
									v50 = v24();
									v51 = {};
									v45 = 2 + 0;
								end
							end
							break;
						end
						if (v44 == (701 - (271 + 429))) then
							local v89 = 0 + 0;
							while true do
								if (1 ~= v89) then
								else
									v44 = 1502 - (1408 + 92);
									break;
								end
								if (v89 ~= (1086 - (461 + 625))) then
								else
									v47 = nil;
									v48 = nil;
									v89 = 1289 - (993 + 295);
								end
							end
						end
						if (v44 == (1 + 1)) then
							v49 = nil;
							v50 = nil;
							v44 = 1174 - (418 + 753);
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v52)
					if (v1(v52, 2) == 79) then
						v20 = v0(v3(v52, 1, 1));
						return "";
					else
						local v82 = v2(v0(v52, 16));
						if v20 then
							local v90 = 0;
							local v91;
							while true do
								if (v90 == 1) then
									return v91;
								end
								if (v90 == 0) then
									v91 = v5(v82, v20);
									v20 = nil;
									v90 = 1;
								end
							end
						else
							return v82;
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v53, v54, v55, v56 = v1(v16, v19, v19 + 2 + 1);
					v19 = v19 + 1 + 3;
					return (v56 * (4907054 + 11870162)) + (v55 * (16563 + 48973)) + (v54 * 256) + v53;
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 7) then
				function v30(v57, v58, v59)
					local v60 = v57[1];
					local v61 = v57[2];
					local v62 = v57[3];
					return function(...)
						local v68 = v60;
						local v69 = v61;
						local v70 = v62;
						local v71 = v28;
						local v72 = 1;
						local v73 = -1;
						local v74 = {};
						local v75 = {...};
						local v76 = v12("#", ...) - 1;
						local v77 = {};
						local v78 = {};
						for v83 = 0, v76 do
							if (v83 >= v70) then
								v74[v83 - v70] = v75[v83 + 1];
							else
								v78[v83] = v75[v83 + 1];
							end
						end
						local v79 = (v76 - v70) + 1;
						local v80;
						local v81;
						while true do
							v80 = v68[v72];
							v81 = v80[1];
							if (v81 <= 51) then
								if (v81 <= 25) then
									if (v81 <= 12) then
										if (v81 <= 5) then
											if (v81 <= 2) then
												if (v81 <= 0) then
													v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
												elseif (v81 > 1) then
													local v169 = 0;
													local v170;
													while true do
														if (v169 == 0) then
															v170 = v80[2];
															v78[v170] = v78[v170](v13(v78, v170 + 1, v80[3]));
															break;
														end
													end
												else
													v78[v80[2]] = v30(v69[v80[3]], nil, v59);
												end
											elseif (v81 <= 3) then
												local v117 = v80[2];
												local v118 = v78[v117];
												local v119 = v80[3];
												for v156 = 1, v119 do
													v118[v156] = v78[v117 + v156];
												end
											elseif (v81 == 4) then
												local v172 = 0;
												local v173;
												local v174;
												local v175;
												while true do
													if (v172 == 0) then
														v173 = v80[2];
														v174 = v78[v173];
														v172 = 1;
													end
													if (v172 == 1) then
														v175 = v80[3];
														for v409 = 1, v175 do
															v174[v409] = v78[v173 + v409];
														end
														break;
													end
												end
											else
												local v176 = 0;
												local v177;
												local v178;
												local v179;
												local v180;
												while true do
													if (v176 == 1) then
														v73 = (v179 + v177) - 1;
														v180 = 0;
														v176 = 2;
													end
													if (v176 == 2) then
														for v412 = v177, v73 do
															v180 = v180 + 1;
															v78[v412] = v178[v180];
														end
														break;
													end
													if (v176 == 0) then
														v177 = v80[2];
														v178, v179 = v71(v78[v177](v13(v78, v177 + 1, v73)));
														v176 = 1;
													end
												end
											end
										elseif (v81 <= 8) then
											if (v81 <= 6) then
												v58[v80[3]] = v78[v80[2]];
											elseif (v81 > 7) then
												v78[v80[2]]();
											else
												local v181 = v80[2];
												local v182, v183 = v71(v78[v181](v78[v181 + 1]));
												v73 = (v183 + v181) - 1;
												local v184 = 0;
												for v314 = v181, v73 do
													local v315 = 0;
													while true do
														if (v315 == 0) then
															v184 = v184 + 1;
															v78[v314] = v182[v184];
															break;
														end
													end
												end
											end
										elseif (v81 <= 10) then
											if (v81 > 9) then
												if (v80[2] == v78[v80[4]]) then
													v72 = v72 + 1;
												else
													v72 = v80[3];
												end
											else
												do
													return;
												end
											end
										elseif (v81 > 11) then
											local v185 = v80[2];
											local v186 = {v78[v185](v13(v78, v185 + 1, v73))};
											local v187 = 0;
											for v316 = v185, v80[4] do
												v187 = v187 + 1;
												v78[v316] = v186[v187];
											end
										else
											v78[v80[2]] = v58[v80[3]];
										end
									elseif (v81 <= 18) then
										if (v81 <= 15) then
											if (v81 <= 13) then
												if not v78[v80[2]] then
													v72 = v72 + 1;
												else
													v72 = v80[3];
												end
											elseif (v81 == 14) then
												v78[v80[2]] = v78[v80[3]];
											else
												v72 = v80[3];
											end
										elseif (v81 <= 16) then
											v78[v80[2]][v80[3]] = v78[v80[4]];
										elseif (v81 > 17) then
											local v194 = v80[2];
											v78[v194] = v78[v194](v78[v194 + 1]);
										else
											local v196 = v69[v80[3]];
											local v197;
											local v198 = {};
											v197 = v10({}, {__index=function(v319, v320)
												local v321 = v198[v320];
												return v321[1][v321[2]];
											end,__newindex=function(v322, v323, v324)
												local v325 = 0;
												local v326;
												while true do
													if (v325 == 0) then
														v326 = v198[v323];
														v326[1][v326[2]] = v324;
														break;
													end
												end
											end});
											for v327 = 1, v80[4] do
												local v328 = 0;
												local v329;
												while true do
													if (v328 == 0) then
														v72 = v72 + 1;
														v329 = v68[v72];
														v328 = 1;
													end
													if (1 == v328) then
														if (v329[1] == 14) then
															v198[v327 - 1] = {v78,v329[3]};
														else
															v198[v327 - 1] = {v58,v329[3]};
														end
														v77[#v77 + 1] = v198;
														break;
													end
												end
											end
											v78[v80[2]] = v30(v196, v197, v59);
										end
									elseif (v81 <= 21) then
										if (v81 <= 19) then
											local v124 = 0;
											local v125;
											local v126;
											while true do
												if (v124 == 0) then
													v125 = v80[3];
													v126 = v78[v125];
													v124 = 1;
												end
												if (v124 == 1) then
													for v359 = v125 + 1, v80[4] do
														v126 = v126 .. v78[v359];
													end
													v78[v80[2]] = v126;
													break;
												end
											end
										elseif (v81 > 20) then
											if (v78[v80[2]] <= v78[v80[4]]) then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										else
											v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
										end
									elseif (v81 <= 23) then
										if (v81 > 22) then
											v78[v80[2]][v80[3]] = v80[4];
										else
											local v204 = 0;
											local v205;
											while true do
												if (v204 == 0) then
													v205 = v80[2];
													v78[v205] = v78[v205]();
													break;
												end
											end
										end
									elseif (v81 > 24) then
										v78[v80[2]] = v58[v80[3]];
									else
										local v208 = 0;
										local v209;
										local v210;
										while true do
											if (v208 == 1) then
												for v421 = 1, #v77 do
													local v422 = v77[v421];
													for v444 = 0, #v422 do
														local v445 = v422[v444];
														local v446 = v445[1];
														local v447 = v445[2];
														if ((v446 == v78) and (v447 >= v209)) then
															v210[v447] = v446[v447];
															v445[1] = v210;
														end
													end
												end
												break;
											end
											if (v208 == 0) then
												v209 = v80[2];
												v210 = {};
												v208 = 1;
											end
										end
									end
								elseif (v81 <= 38) then
									if (v81 <= 31) then
										if (v81 <= 28) then
											if (v81 <= 26) then
												if (v78[v80[2]] == v78[v80[4]]) then
													v72 = v72 + 1;
												else
													v72 = v80[3];
												end
											elseif (v81 > 27) then
												do
													return v78[v80[2]];
												end
											else
												local v212 = 0;
												local v213;
												while true do
													if (v212 == 0) then
														v213 = v80[2];
														v78[v213](v13(v78, v213 + 1, v80[3]));
														break;
													end
												end
											end
										elseif (v81 <= 29) then
											for v159 = v80[2], v80[3] do
												v78[v159] = nil;
											end
										elseif (v81 > 30) then
											if (v78[v80[2]] < v78[v80[4]]) then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										else
											local v214 = 0;
											local v215;
											local v216;
											while true do
												if (0 == v214) then
													v215 = v80[2];
													v216 = v78[v215];
													v214 = 1;
												end
												if (v214 == 1) then
													for v423 = v215 + 1, v80[3] do
														v7(v216, v78[v423]);
													end
													break;
												end
											end
										end
									elseif (v81 <= 34) then
										if (v81 <= 32) then
											v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
										elseif (v81 > 33) then
											local v217 = 0;
											local v218;
											local v219;
											local v220;
											while true do
												if (v217 == 0) then
													v218 = v80[2];
													v219 = {v78[v218](v78[v218 + 1])};
													v217 = 1;
												end
												if (v217 == 1) then
													v220 = 0;
													for v424 = v218, v80[4] do
														local v425 = 0;
														while true do
															if (v425 == 0) then
																v220 = v220 + 1;
																v78[v424] = v219[v220];
																break;
															end
														end
													end
													break;
												end
											end
										else
											v78[v80[2]] = v59[v80[3]];
										end
									elseif (v81 <= 36) then
										if (v81 > 35) then
											v78[v80[2]] = v80[3] ~= 0;
										else
											v78[v80[2]][v80[3]] = v80[4];
										end
									elseif (v81 == 37) then
										local v226 = v80[2];
										v78[v226](v13(v78, v226 + 1, v73));
									else
										local v227 = v80[2];
										local v228 = v80[4];
										local v229 = v227 + 2;
										local v230 = {v78[v227](v78[v227 + 1], v78[v229])};
										for v333 = 1, v228 do
											v78[v229 + v333] = v230[v333];
										end
										local v231 = v230[1];
										if v231 then
											v78[v229] = v231;
											v72 = v80[3];
										else
											v72 = v72 + 1;
										end
									end
								elseif (v81 <= 44) then
									if (v81 <= 41) then
										if (v81 <= 39) then
											local v128 = v80[2];
											v78[v128] = v78[v128](v78[v128 + 1]);
										elseif (v81 > 40) then
											if (v78[v80[2]] <= v78[v80[4]]) then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										else
											local v232 = 0;
											local v233;
											while true do
												if (v232 == 0) then
													v233 = v80[2];
													do
														return v13(v78, v233, v233 + v80[3]);
													end
													break;
												end
											end
										end
									elseif (v81 <= 42) then
										local v130 = v80[2];
										local v131, v132 = v71(v78[v130](v78[v130 + 1]));
										v73 = (v132 + v130) - 1;
										local v133 = 0;
										for v161 = v130, v73 do
											v133 = v133 + 1;
											v78[v161] = v131[v133];
										end
									elseif (v81 == 43) then
										v72 = v80[3];
									else
										local v235 = 0;
										local v236;
										while true do
											if (v235 == 0) then
												v236 = v80[2];
												do
													return v78[v236](v13(v78, v236 + 1, v80[3]));
												end
												break;
											end
										end
									end
								elseif (v81 <= 47) then
									if (v81 <= 45) then
										local v134 = v78[v80[4]];
										if v134 then
											v72 = v72 + 1;
										else
											v78[v80[2]] = v134;
											v72 = v80[3];
										end
									elseif (v81 > 46) then
										v78[v80[2]] = v78[v80[3]] + v80[4];
									else
										local v240 = 0;
										local v241;
										while true do
											if (v240 == 0) then
												v241 = v80[2];
												do
													return v13(v78, v241, v73);
												end
												break;
											end
										end
									end
								elseif (v81 <= 49) then
									if (v81 > 48) then
										local v242 = v80[3];
										local v243 = v78[v242];
										for v336 = v242 + 1, v80[4] do
											v243 = v243 .. v78[v336];
										end
										v78[v80[2]] = v243;
									else
										local v245 = 0;
										local v246;
										local v247;
										local v248;
										local v249;
										while true do
											if (0 == v245) then
												v246 = v80[2];
												v247, v248 = v71(v78[v246](v13(v78, v246 + 1, v73)));
												v245 = 1;
											end
											if (v245 == 2) then
												for v426 = v246, v73 do
													v249 = v249 + 1;
													v78[v426] = v247[v249];
												end
												break;
											end
											if (v245 == 1) then
												v73 = (v248 + v246) - 1;
												v249 = 0;
												v245 = 2;
											end
										end
									end
								elseif (v81 == 50) then
									if (v78[v80[2]] == v80[4]) then
										v72 = v72 + 1;
									else
										v72 = v80[3];
									end
								else
									local v250 = v80[2];
									v78[v250](v13(v78, v250 + 1, v80[3]));
								end
							elseif (v81 <= 77) then
								if (v81 <= 64) then
									if (v81 <= 57) then
										if (v81 <= 54) then
											if (v81 <= 52) then
												if (v78[v80[2]] == v80[4]) then
													v72 = v72 + 1;
												else
													v72 = v80[3];
												end
											elseif (v81 > 53) then
												v78[v80[2]][v80[3]] = v78[v80[4]];
											elseif (v80[2] == v78[v80[4]]) then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										elseif (v81 <= 55) then
											v78[v80[2]] = {};
										elseif (v81 > 56) then
											local v254 = 0;
											local v255;
											while true do
												if (v254 == 0) then
													v255 = v78[v80[4]];
													if v255 then
														v72 = v72 + 1;
													else
														local v448 = 0;
														while true do
															if (v448 == 0) then
																v78[v80[2]] = v255;
																v72 = v80[3];
																break;
															end
														end
													end
													break;
												end
											end
										else
											local v256 = v80[2];
											local v257 = v80[4];
											local v258 = v256 + 2;
											local v259 = {v78[v256](v78[v256 + 1], v78[v258])};
											for v337 = 1, v257 do
												v78[v258 + v337] = v259[v337];
											end
											local v260 = v259[1];
											if v260 then
												v78[v258] = v260;
												v72 = v80[3];
											else
												v72 = v72 + 1;
											end
										end
									elseif (v81 <= 60) then
										if (v81 <= 58) then
											v78[v80[2]] = v80[3];
										elseif (v81 == 59) then
											v78[v80[2]]();
										else
											v78[v80[2]] = {};
										end
									elseif (v81 <= 62) then
										if (v81 == 61) then
											v78[v80[2]] = v78[v80[3]] + v80[4];
										else
											v78[v80[2]] = v59[v80[3]];
										end
									elseif (v81 > 63) then
										local v265 = 0;
										local v266;
										while true do
											if (v265 == 0) then
												v266 = v80[2];
												v78[v266] = v78[v266]();
												break;
											end
										end
									else
										for v340 = v80[2], v80[3] do
											v78[v340] = nil;
										end
									end
								elseif (v81 <= 70) then
									if (v81 <= 67) then
										if (v81 <= 65) then
											if v78[v80[2]] then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										elseif (v81 > 66) then
											local v268 = 0;
											local v269;
											local v270;
											local v271;
											while true do
												if (v268 == 2) then
													for v429 = 1, v80[4] do
														v72 = v72 + 1;
														local v430 = v68[v72];
														if (v430[1] == 14) then
															v271[v429 - 1] = {v78,v430[3]};
														else
															v271[v429 - 1] = {v58,v430[3]};
														end
														v77[#v77 + 1] = v271;
													end
													v78[v80[2]] = v30(v269, v270, v59);
													break;
												end
												if (v268 == 0) then
													v269 = v69[v80[3]];
													v270 = nil;
													v268 = 1;
												end
												if (v268 == 1) then
													v271 = {};
													v270 = v10({}, {__index=function(v432, v433)
														local v434 = v271[v433];
														return v434[1][v434[2]];
													end,__newindex=function(v435, v436, v437)
														local v438 = v271[v436];
														v438[1][v438[2]] = v437;
													end});
													v268 = 2;
												end
											end
										elseif (v78[v80[2]] ~= v78[v80[4]]) then
											v72 = v72 + 1;
										else
											v72 = v80[3];
										end
									elseif (v81 <= 68) then
										local v138 = v80[2];
										local v139 = {v78[v138](v78[v138 + 1])};
										local v140 = 0;
										for v164 = v138, v80[4] do
											v140 = v140 + 1;
											v78[v164] = v139[v140];
										end
									elseif (v81 > 69) then
										if (v78[v80[2]] < v78[v80[4]]) then
											v72 = v72 + 1;
										else
											v72 = v80[3];
										end
									else
										local v272 = 0;
										local v273;
										while true do
											if (v272 == 0) then
												v273 = v80[2];
												do
													return v78[v273](v13(v78, v273 + 1, v80[3]));
												end
												break;
											end
										end
									end
								elseif (v81 <= 73) then
									if (v81 <= 71) then
										if (v80[2] <= v78[v80[4]]) then
											v72 = v72 + 1;
										else
											v72 = v80[3];
										end
									elseif (v81 == 72) then
										if not v78[v80[2]] then
											v72 = v72 + 1;
										else
											v72 = v80[3];
										end
									elseif (v78[v80[2]] == v78[v80[4]]) then
										v72 = v72 + 1;
									else
										v72 = v80[3];
									end
								elseif (v81 <= 75) then
									if (v81 == 74) then
										local v275 = 0;
										local v276;
										while true do
											if (v275 == 0) then
												v276 = v80[2];
												do
													return v13(v78, v276, v73);
												end
												break;
											end
										end
									elseif (v78[v80[2]] ~= v78[v80[4]]) then
										v72 = v72 + 1;
									else
										v72 = v80[3];
									end
								elseif (v81 == 76) then
									v78[v80[2]] = v80[3];
								elseif v78[v80[2]] then
									v72 = v72 + 1;
								else
									v72 = v80[3];
								end
							elseif (v81 <= 90) then
								if (v81 <= 83) then
									if (v81 <= 80) then
										if (v81 <= 78) then
											v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
										elseif (v81 > 79) then
											local v279 = v80[2];
											v78[v279] = v78[v279](v13(v78, v279 + 1, v80[3]));
										else
											v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
										end
									elseif (v81 <= 81) then
										local v143 = v80[2];
										v78[v143] = v78[v143](v13(v78, v143 + 1, v73));
									elseif (v81 > 82) then
										v58[v80[3]] = v78[v80[2]];
									else
										v78[v80[2]] = v78[v80[3]] / v78[v80[4]];
									end
								elseif (v81 <= 86) then
									if (v81 <= 84) then
										local v145 = 0;
										local v146;
										local v147;
										local v148;
										local v149;
										while true do
											if (v145 == 0) then
												v146 = v80[2];
												v147, v148 = v71(v78[v146](v13(v78, v146 + 1, v80[3])));
												v145 = 1;
											end
											if (1 == v145) then
												v73 = (v148 + v146) - 1;
												v149 = 0;
												v145 = 2;
											end
											if (v145 == 2) then
												for v375 = v146, v73 do
													v149 = v149 + 1;
													v78[v375] = v147[v149];
												end
												break;
											end
										end
									elseif (v81 > 85) then
										v78[v80[2]] = v78[v80[3]][v80[4]];
									else
										local v288 = v80[2];
										local v289 = v78[v80[3]];
										v78[v288 + 1] = v289;
										v78[v288] = v289[v80[4]];
									end
								elseif (v81 <= 88) then
									if (v81 > 87) then
										v78[v80[2]] = v30(v69[v80[3]], nil, v59);
									else
										do
											return;
										end
									end
								elseif (v81 > 89) then
									v78[v80[2]] = v78[v80[3]][v80[4]];
								else
									v78[v80[2]] = v78[v80[3]];
								end
							elseif (v81 <= 96) then
								if (v81 <= 93) then
									if (v81 <= 91) then
										local v150 = 0;
										local v151;
										local v152;
										while true do
											if (v150 == 0) then
												v151 = v80[2];
												v152 = v78[v80[3]];
												v150 = 1;
											end
											if (v150 == 1) then
												v78[v151 + 1] = v152;
												v78[v151] = v152[v80[4]];
												break;
											end
										end
									elseif (v81 == 92) then
										local v298 = 0;
										local v299;
										local v300;
										while true do
											if (v298 == 1) then
												for v440 = 1, #v77 do
													local v441 = v77[v440];
													for v449 = 0, #v441 do
														local v450 = v441[v449];
														local v451 = v450[1];
														local v452 = v450[2];
														if ((v451 == v78) and (v452 >= v299)) then
															local v462 = 0;
															while true do
																if (v462 == 0) then
																	v300[v452] = v451[v452];
																	v450[1] = v300;
																	break;
																end
															end
														end
													end
												end
												break;
											end
											if (0 == v298) then
												v299 = v80[2];
												v300 = {};
												v298 = 1;
											end
										end
									else
										local v301 = v80[2];
										local v302, v303 = v71(v78[v301](v13(v78, v301 + 1, v80[3])));
										v73 = (v303 + v301) - 1;
										local v304 = 0;
										for v348 = v301, v73 do
											v304 = v304 + 1;
											v78[v348] = v302[v304];
										end
									end
								elseif (v81 <= 94) then
									v78[v80[2]] = v80[3] ~= 0;
								elseif (v81 > 95) then
									v78[v80[2]] = v78[v80[3]] / v78[v80[4]];
								else
									local v306 = v80[2];
									v78[v306](v13(v78, v306 + 1, v73));
								end
							elseif (v81 <= 99) then
								if (v81 <= 97) then
									local v154 = v80[2];
									v78[v154] = v78[v154](v13(v78, v154 + 1, v73));
								elseif (v81 == 98) then
									local v307 = v80[2];
									local v308 = {v78[v307](v13(v78, v307 + 1, v73))};
									local v309 = 0;
									for v351 = v307, v80[4] do
										local v352 = 0;
										while true do
											if (v352 == 0) then
												v309 = v309 + 1;
												v78[v351] = v308[v309];
												break;
											end
										end
									end
								else
									local v310 = 0;
									local v311;
									while true do
										if (0 == v310) then
											v311 = v80[2];
											v78[v311](v78[v311 + 1]);
											break;
										end
									end
								end
							elseif (v81 <= 101) then
								if (v81 == 100) then
									local v312 = v80[2];
									v78[v312](v78[v312 + 1]);
								else
									v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
								end
							elseif (v81 == 102) then
								do
									return v78[v80[2]];
								end
							elseif (v80[2] <= v78[v80[4]]) then
								v72 = v72 + 1;
							else
								v72 = v80[3];
							end
							v72 = v72 + 1;
						end
					end;
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v63, v64, v65)
					if v65 then
						local v86 = (v63 / ((531 - (406 + 123)) ^ (v64 - (1770 - (1749 + 20))))) % ((1 + 1) ^ (((v65 - (1323 - (1249 + 73))) - (v64 - (1 + 0))) + (1146 - (466 + (2004 - 1325)))));
						return v86 - (v86 % (2 - 1));
					else
						local v87 = 0 - 0;
						local v88;
						while true do
							if (v87 == (1900 - (106 + 1794))) then
								v88 = (1 + 1) ^ (v64 - (2 - 1));
								return (((v63 % (v88 + v88)) >= v88) and ((115 - (4 + 110)) + 0)) or 0;
							end
						end
					end
				end
				v22 = nil;
				v18 = 2;
			end
		end
	end
	vv9(), ...);
end
