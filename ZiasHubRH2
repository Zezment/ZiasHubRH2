--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v31, v32, v33)
					if v33 then
						local v68 = (v31 / ((5 - (3 - 0)) ^ (v32 - (2 - 1)))) % ((3 - 1) ^ (((v33 - (2 - (1638 - (1523 + 114)))) - (v32 - ((1890 - (226 + 1044)) - (555 + 64)))) + (932 - (857 + 74))));
						return v68 - (v68 % (569 - (367 + 201)));
					else
						local v69 = 927 - (214 + 713);
						local v70;
						while true do
							if (v69 == (0 + 0 + 0)) then
								v70 = (1 + 1) ^ (v32 - 1);
								return (((v31 % (v70 + v70)) >= v70) and 1) or (877 - ((1227 - 945) + 595));
							end
						end
					end
				end
				v22 = nil;
				v18 = 2;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v34, v35, v36, v37 = v1(v16, v19, v19 + (120 - (32 + 85)));
					v19 = v19 + 4 + 0;
					return (v37 * ((6876982 - 3156549) + (23970033 - 10913250))) + (v36 * (66493 - (892 + 65))) + (v35 * (610 - 354)) + v34;
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v38 = 1130 - (369 + 761);
					local v39;
					local v40;
					local v41;
					local v42;
					local v43;
					local v44;
					while true do
						local v67 = 0;
						while true do
							if (v67 == 0) then
								if (v38 ~= (2 + 0)) then
								else
									local v96 = 0;
									while true do
										if ((1369 - (243 + 1126)) == v96) then
											for v108 = 1 - 0, v43 do
												local v109 = 0;
												local v110;
												local v111;
												local v112;
												local v113;
												local v114;
												while true do
													if (v109 ~= (0 - 0)) then
													else
														v110 = 0;
														v111 = nil;
														v109 = 1 + 0;
													end
													if (v109 ~= 2) then
													else
														v114 = nil;
														while true do
															if (v110 ~= (240 - (64 + 174))) then
															else
																while true do
																	if (v111 ~= (1 + 0)) then
																	else
																		v114 = nil;
																		while true do
																			if (v112 == (1637 - (1373 + 263))) then
																				if (v113 == (1001 - (451 + 549))) then
																					v114 = v22() ~= (0 + 0);
																				elseif (v113 == (2 - 0)) then
																					v114 = v25();
																				elseif (v113 == (4 - 1)) then
																					v114 = v26();
																				end
																				v44[v108] = v114;
																				break;
																			end
																			if ((1384 - (746 + 638)) == v112) then
																				local v199 = 0 + 0;
																				local v200;
																				local v201;
																				while true do
																					if (v199 == 0) then
																						v200 = 0 + 0;
																						v201 = nil;
																						v199 = 1 - 0;
																					end
																					if ((342 - (218 + 123)) == v199) then
																						while true do
																							if (v200 == (1581 - (1535 + 46))) then
																								v201 = 0 + 0;
																								while true do
																									if (v201 ~= (1 + 0)) then
																									else
																										v112 = 561 - (306 + 254);
																										break;
																									end
																									if (v201 == 0) then
																										local v495 = 0;
																										while true do
																											if (v495 == 0) then
																												v113 = v22();
																												v114 = nil;
																												v495 = 1 + 0;
																											end
																											if (v495 ~= 1) then
																											else
																												v201 = 1 + 0;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((0 - 0) ~= v111) then
																	else
																		v112 = 1467 - (899 + 568);
																		v113 = nil;
																		v111 = 1 + 0;
																	end
																end
																break;
															end
															if (v110 == 0) then
																local v122 = 0 - 0;
																while true do
																	if (v122 ~= (604 - (268 + 335))) then
																	else
																		v110 = 2 - 1;
																		break;
																	end
																	if (0 ~= v122) then
																	else
																		v111 = 0;
																		v112 = nil;
																		v122 = 1934 - (565 + 1368);
																	end
																end
															end
															if (v110 ~= (291 - (60 + 230))) then
															else
																v113 = nil;
																v114 = nil;
																v110 = 2;
															end
														end
														break;
													end
													if (v109 == (573 - (426 + 146))) then
														v112 = nil;
														v113 = nil;
														v109 = 1663 - (1477 + 184);
													end
												end
											end
											v42[3] = v22();
											v96 = 1 - 0;
										end
										if (v96 ~= (1 + 0)) then
										else
											for v115 = 1457 - (282 + 1174), v24() do
												local v116 = 811 - (569 + 242);
												local v117;
												local v118;
												local v119;
												while true do
													if (v116 == 0) then
														v117 = 0 + 0;
														v118 = nil;
														v116 = 857 - (564 + 292);
													end
													if ((2 - 1) == v116) then
														v119 = nil;
														while true do
															if (v117 == (1 + 0)) then
																while true do
																	if (v118 ~= (0 - 0)) then
																	else
																		v119 = v22();
																		if (v21(v119, 305 - (244 + 60), 1025 - (706 + 318)) ~= (476 - (41 + 435))) then
																		else
																			local v162 = 1001 - (938 + 63);
																			local v163;
																			local v164;
																			local v165;
																			local v166;
																			local v167;
																			while true do
																				if (v162 == (1252 - (721 + 530))) then
																					v165 = nil;
																					v166 = nil;
																					v162 = 2;
																				end
																				if (v162 == (1127 - (936 + 189))) then
																					v167 = nil;
																					while true do
																						if (v163 == (1271 - (945 + 326))) then
																							local v466 = 0 + 0;
																							local v467;
																							while true do
																								if (v466 == (0 - 0)) then
																									v467 = 0 + 0;
																									while true do
																										if (v467 ~= (1 + 0)) then
																										else
																											v163 = 1;
																											break;
																										end
																										if (v467 ~= (700 - (271 + 429))) then
																										else
																											local v501 = 0 + 0;
																											while true do
																												if ((1500 - (1408 + 92)) == v501) then
																													v164 = 0;
																													v165 = nil;
																													v501 = 1087 - (461 + 625);
																												end
																												if (v501 == (1289 - (993 + 295))) then
																													v467 = 1 + 0;
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						if ((1173 - (418 + 753)) ~= v163) then
																						else
																							while true do
																								if (v164 ~= (1 - 0)) then
																								else
																									local v479 = 0 + 0;
																									while true do
																										if ((1 + 0) ~= v479) then
																										else
																											v164 = 1 + 1;
																											break;
																										end
																										if (v479 == 0) then
																											local v502 = 0 + 0;
																											local v503;
																											while true do
																												if (v502 ~= (529 - (406 + 123))) then
																												else
																													v503 = 0;
																													while true do
																														if (v503 == (1769 - (1749 + 20))) then
																															local v512 = 0;
																															while true do
																																if (v512 == (1 + 0)) then
																																	v503 = 1323 - (1249 + 73);
																																	break;
																																end
																																if (v512 ~= (0 + 0)) then
																																else
																																	v167 = {v23(),v23(),nil,nil};
																																	if (v165 == (0 + 0)) then
																																		local v516 = 0;
																																		local v517;
																																		local v518;
																																		local v519;
																																		while true do
																																			if (v516 == (2 - 1)) then
																																				v519 = nil;
																																				while true do
																																					if (v517 ~= (2 - 1)) then
																																					else
																																						while true do
																																							if (v518 ~= (1900 - (106 + 1794))) then
																																							else
																																								v519 = 0 + 0;
																																								while true do
																																									if (v519 == (0 + 0)) then
																																										v167[8 - 5] = v23();
																																										v167[4] = v23();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v517 == 0) then
																																						local v526 = 0 - 0;
																																						while true do
																																							if (v526 ~= (115 - (4 + 110))) then
																																							else
																																								v517 = 585 - (57 + 527);
																																								break;
																																							end
																																							if (v526 ~= 0) then
																																							else
																																								v518 = 0;
																																								v519 = nil;
																																								v526 = 1428 - (41 + 1386);
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																			if (v516 == 0) then
																																				v517 = 947 - (245 + 702);
																																				v518 = nil;
																																				v516 = 104 - (17 + 86);
																																			end
																																		end
																																	elseif (v165 == 1) then
																																		v167[9 - 6] = v24();
																																	elseif (v165 == (1 + 1)) then
																																		v167[3] = v24() - ((2 + 0) ^ (456 - (382 + 58)));
																																	elseif (v165 == (6 - 3)) then
																																		local v527 = 0;
																																		local v528;
																																		local v529;
																																		local v530;
																																		while true do
																																			if (v527 ~= (0 - 0)) then
																																			else
																																				v528 = 166 - (122 + 44);
																																				v529 = nil;
																																				v527 = 1 - 0;
																																			end
																																			if (v527 ~= 1) then
																																			else
																																				v530 = nil;
																																				while true do
																																					if (v528 == (3 - 2)) then
																																						while true do
																																							if (v529 ~= (1205 - (902 + 303))) then
																																							else
																																								v530 = 0 + 0;
																																								while true do
																																									if (v530 ~= (0 + 0)) then
																																									else
																																										v167[5 - 2] = v24() - ((67 - (30 + 35)) ^ (38 - 22));
																																										v167[4] = v23();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v528 ~= 0) then
																																					else
																																						local v533 = 0 + 0;
																																						while true do
																																							if (0 == v533) then
																																								v529 = 0;
																																								v530 = nil;
																																								v533 = 1258 - (1043 + 214);
																																							end
																																							if (v533 == (3 - 2)) then
																																								v528 = 1691 - (1121 + 569);
																																								break;
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v512 = 1213 - (323 + 889);
																																end
																															end
																														end
																														if (v503 ~= (684 - (483 + 200))) then
																														else
																															v479 = 1464 - (1404 + 59);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																									end
																								end
																								if (v164 == 0) then
																									local v480 = 0 - 0;
																									local v481;
																									local v482;
																									while true do
																										if (v480 ~= (2 - 1)) then
																										else
																											while true do
																												if (v481 == 0) then
																													v482 = 0;
																													while true do
																														if (v482 == (1 - 0)) then
																															v164 = 581 - (361 + 219);
																															break;
																														end
																														if (v482 ~= (765 - (468 + 297))) then
																														else
																															local v513 = 0;
																															while true do
																																if (v513 == (320 - (53 + 267))) then
																																	local v515 = 0 + 0;
																																	while true do
																																		if ((414 - (15 + 398)) == v515) then
																																			v513 = 983 - (18 + 964);
																																			break;
																																		end
																																		if (v515 == 0) then
																																			v165 = v21(v119, 7 - 5, 3);
																																			v166 = v21(v119, 4, 4 + 2);
																																			v515 = 1 - 0;
																																		end
																																	end
																																end
																																if (1 == v513) then
																																	v482 = 1;
																																	break;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v480 ~= (0 + 0)) then
																										else
																											v481 = 850 - (20 + 830);
																											v482 = nil;
																											v480 = 1 + 0;
																										end
																									end
																								end
																								if (v164 ~= (129 - (116 + 10))) then
																								else
																									if (v21(v166, 1 + 2, 6 - 3) ~= (739 - (542 + 196))) then
																									else
																										v167[4] = v44[v167[8 - 4]];
																									end
																									v39[v115] = v167;
																									break;
																								end
																								if (v164 ~= (2 + 0)) then
																								else
																									local v484 = 0 + 0;
																									local v485;
																									while true do
																										if (v484 == (0 + 0)) then
																											v485 = 0 - 0;
																											while true do
																												if (v485 ~= 0) then
																												else
																													local v508 = 0 + 0;
																													while true do
																														if ((163 - (92 + 71)) ~= v508) then
																														else
																															local v514 = 0;
																															while true do
																																if (v514 ~= (0 + 0)) then
																																else
																																	if (v21(v166, 1 - 0, 1) ~= 1) then
																																	else
																																		v167[1 + 1] = v44[v167[2]];
																																	end
																																	if (v21(v166, 4 - 2, 767 - (574 + 191)) == (2 - 1)) then
																																		v167[7 - 4] = v44[v167[2 + 1]];
																																	end
																																	v514 = 1552 - (1126 + 425);
																																end
																																if ((127 - (55 + 71)) ~= v514) then
																																else
																																	v508 = 406 - (118 + 287);
																																	break;
																																end
																															end
																														end
																														if (v508 == 1) then
																															v485 = 3 - 2;
																															break;
																														end
																													end
																												end
																												if (v485 ~= (1122 - (118 + 1003))) then
																												else
																													v164 = 8 - 5;
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																						if (1 ~= v163) then
																						else
																							local v468 = 0 + 0;
																							while true do
																								if (v468 == (378 - (142 + 235))) then
																									v163 = 9 - 7;
																									break;
																								end
																								if (v468 ~= (0 + 0)) then
																								else
																									v166 = nil;
																									v167 = nil;
																									v468 = 2 - 1;
																								end
																							end
																						end
																					end
																					break;
																				end
																				if (v162 == (977 - (553 + 424))) then
																					v163 = 0 - 0;
																					v164 = nil;
																					v162 = 1 + 0;
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
															if (v117 ~= (0 + 0)) then
															else
																local v123 = 0 - 0;
																local v124;
																while true do
																	if (0 == v123) then
																		v124 = 0 + 0;
																		while true do
																			if (v124 ~= (807 - (118 + 688))) then
																			else
																				v117 = 1 + 0;
																				break;
																			end
																			if (v124 == (48 - (25 + 23))) then
																				local v202 = 0 + 0;
																				while true do
																					if (1 == v202) then
																						v124 = 1887 - (927 + 959);
																						break;
																					end
																					if ((0 - 0) ~= v202) then
																					else
																						v118 = 0 - 0;
																						v119 = nil;
																						v202 = 1;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															end
														end
														break;
													end
												end
											end
											v38 = 6 - 3;
											break;
										end
									end
								end
								if (v38 == 0) then
									local v97 = 0;
									while true do
										if (v97 ~= (733 - (16 + 716))) then
										else
											v41 = {};
											v38 = 1;
											break;
										end
										if (v97 ~= (0 + 0)) then
										else
											v39 = {};
											v40 = {};
											v97 = 98 - (11 + 86);
										end
									end
								end
								v67 = 4 - 3;
							end
							if (v67 ~= (754 - (239 + 514))) then
							else
								if (v38 ~= 1) then
								else
									local v98 = 0 + 0;
									while true do
										if ((1329 - (797 + 532)) ~= v98) then
										else
											v42 = {v39,v40,nil,v41};
											v43 = v24();
											v98 = 1 + 0;
										end
										if (1 == v98) then
											v44 = {};
											v38 = 4 - 2;
											break;
										end
									end
								end
								if (v38 ~= (1205 - (373 + 829))) then
								else
									local v99 = 0 - 0;
									while true do
										if (v99 ~= (1796 - (503 + 1293))) then
										else
											for v120 = 2 - 1, v24() do
												v40[v120 - (732 - (476 + 255))] = v29();
											end
											return v42;
										end
									end
								end
								break;
							end
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 4) then
				function v25()
					local v45 = 0 + 0;
					local v46;
					local v47;
					local v48;
					local v49;
					local v50;
					local v51;
					while true do
						if (v45 == (1062 - (810 + 251))) then
							v48 = 1 + 0;
							v49 = (v21(v47, 1, 7 + 13) * ((2 + 0) ^ (565 - (43 + 490)))) + v46;
							v45 = 735 - (711 + 22);
						end
						if (v45 == (11 - 8)) then
							if (v50 == (859 - (240 + 619))) then
								if (v49 == (0 + 0 + 0)) then
									return v51 * (0 - 0);
								else
									local v100 = 0 + 0;
									while true do
										if (v100 == 0) then
											v50 = 1;
											v48 = 0;
											break;
										end
									end
								end
							elseif (v50 == (3791 - (1344 + (849 - (108 + 341))))) then
								return ((v49 == (405 - (255 + 150))) and (v51 * (1 / (0 + 0)))) or (v51 * NaN);
							end
							return v8(v51, v50 - (247 + 301 + 475)) * (v48 + (v49 / ((8 - 6) ^ ((705 - 538) - 115))));
						end
						if (v45 == (1741 - (404 + (2828 - (711 + 782))))) then
							v50 = v21(v47, 427 - (183 + 223), 37 - 6);
							v51 = ((v21(v47, 22 + 10) == ((1 - 0) + (469 - (270 + 199)))) and -(338 - (10 + 327))) or 1;
							v45 = 3 + 0;
						end
						if (v45 == 0) then
							v46 = v24();
							v47 = v24();
							v45 = 339 - (118 + 220);
						end
					end
				end
				v26 = nil;
				function v26(v52)
					local v53 = 0 + 0;
					local v54;
					local v55;
					while true do
						if (v53 == (1820 - (580 + 1239))) then
							v54 = v3(v16, v19, (v19 + v52) - 1);
							v19 = v19 + v52;
							v53 = 2;
						end
						if (v53 == (8 - 5)) then
							return v6(v55);
						end
						if (v53 == (2 + 0)) then
							v55 = {};
							for v76 = 1 + 0 + 0, #v54 do
								v55[v76] = v2(v1(v3(v54, v76, v76)));
							end
							v53 = 2 + 1;
						end
						if (v53 == 0) then
							v54 = nil;
							if not v52 then
								local v93 = 0 - 0;
								while true do
									if (v93 == (0 + 0)) then
										v52 = v24();
										if (v52 == (1167 - (645 + 522))) then
											return "";
										end
										break;
									end
								end
							end
							v53 = 1791 - (1010 + (3715 - 2935));
						end
					end
				end
				v18 = 5;
			end
			if (v18 == 2) then
				function v22()
					local v56 = v1(v16, v19, v19);
					v19 = v19 + 1;
					return v56;
				end
				v23 = nil;
				function v23()
					local v57, v58 = v1(v16, v19, v19 + 2);
					v19 = v19 + (5 - 3);
					return (v58 * (2092 - (1045 + 791))) + v57;
				end
				v18 = 3;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v59)
					if (v1(v59, 2) == 79) then
						local v71 = 0;
						while true do
							if (v71 == 0) then
								v20 = v0(v3(v59, 1, 1));
								return "";
							end
						end
					else
						local v72 = v2(v0(v59, 16));
						if v20 then
							local v78 = v5(v72, v20);
							v20 = nil;
							return v78;
						else
							return v72;
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 7) then
				function v30(v60, v61, v62)
					local v63 = 0;
					local v64;
					local v65;
					local v66;
					while true do
						if (v63 == 0) then
							v64 = v60[1];
							v65 = v60[2];
							v63 = 1;
						end
						if (v63 == 1) then
							v66 = v60[3];
							return function(...)
								local v79 = v64;
								local v80 = v65;
								local v81 = v66;
								local v82 = v28;
								local v83 = 1;
								local v84 = -1;
								local v85 = {};
								local v86 = {...};
								local v87 = v12("#", ...) - 1;
								local v88 = {};
								local v89 = {};
								for v94 = 0, v87 do
									if (v94 >= v81) then
										v85[v94 - v81] = v86[v94 + 1];
									else
										v89[v94] = v86[v94 + 1];
									end
								end
								local v90 = (v87 - v81) + 1;
								local v91;
								local v92;
								while true do
									local v95 = 0;
									while true do
										if (v95 == 0) then
											v91 = v79[v83];
											v92 = v91[1];
											v95 = 1;
										end
										if (v95 == 1) then
											if (v92 <= 51) then
												if (v92 <= 25) then
													if (v92 <= 12) then
														if (v92 <= 5) then
															if (v92 <= 2) then
																if (v92 <= 0) then
																	local v125 = v91[2];
																	local v126, v127 = v82(v89[v125](v13(v89, v125 + 1, v91[3])));
																	v84 = (v127 + v125) - 1;
																	local v128 = 0;
																	for v168 = v125, v84 do
																		v128 = v128 + 1;
																		v89[v168] = v126[v128];
																	end
																elseif (v92 > 1) then
																	local v203 = 0;
																	local v204;
																	while true do
																		if (0 == v203) then
																			v204 = v91[2];
																			do
																				return v89[v204](v13(v89, v204 + 1, v91[3]));
																			end
																			break;
																		end
																	end
																else
																	do
																		return v89[v91[2]];
																	end
																end
															elseif (v92 <= 3) then
																v89[v91[2]] = v30(v80[v91[3]], nil, v62);
															elseif (v92 > 4) then
																local v205 = v91[2];
																local v206 = {v89[v205](v13(v89, v205 + 1, v84))};
																local v207 = 0;
																for v347 = v205, v91[4] do
																	local v348 = 0;
																	while true do
																		if (v348 == 0) then
																			v207 = v207 + 1;
																			v89[v347] = v206[v207];
																			break;
																		end
																	end
																end
															else
																local v208 = 0;
																local v209;
																local v210;
																local v211;
																local v212;
																while true do
																	if (v208 == 2) then
																		for v442 = v209, v84 do
																			local v443 = 0;
																			while true do
																				if (v443 == 0) then
																					v212 = v212 + 1;
																					v89[v442] = v210[v212];
																					break;
																				end
																			end
																		end
																		break;
																	end
																	if (v208 == 0) then
																		v209 = v91[2];
																		v210, v211 = v82(v89[v209](v89[v209 + 1]));
																		v208 = 1;
																	end
																	if (v208 == 1) then
																		v84 = (v211 + v209) - 1;
																		v212 = 0;
																		v208 = 2;
																	end
																end
															end
														elseif (v92 <= 8) then
															if (v92 <= 6) then
																local v130 = v80[v91[3]];
																local v131;
																local v132 = {};
																v131 = v10({}, {__index=function(v171, v172)
																	local v173 = v132[v172];
																	return v173[1][v173[2]];
																end,__newindex=function(v174, v175, v176)
																	local v177 = v132[v175];
																	v177[1][v177[2]] = v176;
																end});
																for v179 = 1, v91[4] do
																	v83 = v83 + 1;
																	local v180 = v79[v83];
																	if (v180[1] == 67) then
																		v132[v179 - 1] = {v89,v180[3]};
																	else
																		v132[v179 - 1] = {v61,v180[3]};
																	end
																	v88[#v88 + 1] = v132;
																end
																v89[v91[2]] = v30(v130, v131, v62);
															elseif (v92 > 7) then
																local v213 = 0;
																local v214;
																while true do
																	if (v213 == 0) then
																		v214 = v91[2];
																		v89[v214] = v89[v214](v13(v89, v214 + 1, v91[3]));
																		break;
																	end
																end
															else
																v89[v91[2]] = v62[v91[3]];
															end
														elseif (v92 <= 10) then
															if (v92 > 9) then
																v61[v91[3]] = v89[v91[2]];
															elseif (v89[v91[2]] == v89[v91[4]]) then
																v83 = v83 + 1;
															else
																v83 = v91[3];
															end
														elseif (v92 > 11) then
															local v219 = v91[2];
															v89[v219](v13(v89, v219 + 1, v84));
														else
															local v220 = 0;
															local v221;
															local v222;
															local v223;
															while true do
																if (v220 == 1) then
																	v223 = v91[3];
																	for v444 = 1, v223 do
																		v222[v444] = v89[v221 + v444];
																	end
																	break;
																end
																if (v220 == 0) then
																	v221 = v91[2];
																	v222 = v89[v221];
																	v220 = 1;
																end
															end
														end
													elseif (v92 <= 18) then
														if (v92 <= 15) then
															if (v92 <= 13) then
																local v134 = 0;
																local v135;
																while true do
																	if (v134 == 0) then
																		v135 = v91[2];
																		v89[v135] = v89[v135](v13(v89, v135 + 1, v84));
																		break;
																	end
																end
															elseif (v92 == 14) then
																v89[v91[2]] = v89[v91[3]][v91[4]];
															else
																for v353 = v91[2], v91[3] do
																	v89[v353] = nil;
																end
															end
														elseif (v92 <= 16) then
															if (v91[2] == v89[v91[4]]) then
																v83 = v83 + 1;
															else
																v83 = v91[3];
															end
														elseif (v92 > 17) then
															v89[v91[2]][v91[3]] = v91[4];
														else
															v89[v91[2]] = v89[v91[3]] - v89[v91[4]];
														end
													elseif (v92 <= 21) then
														if (v92 <= 19) then
															v89[v91[2]] = v89[v91[3]][v89[v91[4]]];
														elseif (v92 == 20) then
															v89[v91[2]] = v89[v91[3]] / v89[v91[4]];
														else
															v89[v91[2]][v89[v91[3]]] = v89[v91[4]];
														end
													elseif (v92 <= 23) then
														if (v92 == 22) then
															if (v89[v91[2]] < v89[v91[4]]) then
																v83 = v83 + 1;
															else
																v83 = v91[3];
															end
														else
															v89[v91[2]] = v91[3];
														end
													elseif (v92 == 24) then
														if (v89[v91[2]] == v91[4]) then
															v83 = v83 + 1;
														else
															v83 = v91[3];
														end
													else
														local v235 = 0;
														local v236;
														while true do
															if (v235 == 0) then
																v236 = v91[2];
																do
																	return v89[v236](v13(v89, v236 + 1, v91[3]));
																end
																break;
															end
														end
													end
												elseif (v92 <= 38) then
													if (v92 <= 31) then
														if (v92 <= 28) then
															if (v92 <= 26) then
																v89[v91[2]] = v30(v80[v91[3]], nil, v62);
															elseif (v92 == 27) then
																v83 = v91[3];
															else
																v61[v91[3]] = v89[v91[2]];
															end
														elseif (v92 <= 29) then
															v89[v91[2]] = v89[v91[3]];
														elseif (v92 > 30) then
															local v240 = v89[v91[4]];
															if v240 then
																v83 = v83 + 1;
															else
																v89[v91[2]] = v240;
																v83 = v91[3];
															end
														else
															local v241 = v91[2];
															local v242 = v91[4];
															local v243 = v241 + 2;
															local v244 = {v89[v241](v89[v241 + 1], v89[v243])};
															for v355 = 1, v242 do
																v89[v243 + v355] = v244[v355];
															end
															local v245 = v244[1];
															if v245 then
																v89[v243] = v245;
																v83 = v91[3];
															else
																v83 = v83 + 1;
															end
														end
													elseif (v92 <= 34) then
														if (v92 <= 32) then
															do
																return;
															end
														elseif (v92 > 33) then
															local v246 = v91[2];
															local v247, v248 = v82(v89[v246](v89[v246 + 1]));
															v84 = (v248 + v246) - 1;
															local v249 = 0;
															for v358 = v246, v84 do
																local v359 = 0;
																while true do
																	if (v359 == 0) then
																		v249 = v249 + 1;
																		v89[v358] = v247[v249];
																		break;
																	end
																end
															end
														else
															local v250 = v91[2];
															v89[v250] = v89[v250]();
														end
													elseif (v92 <= 36) then
														if (v92 == 35) then
															v89[v91[2]][v91[3]] = v91[4];
														elseif (v91[2] == v89[v91[4]]) then
															v83 = v83 + 1;
														else
															v83 = v91[3];
														end
													elseif (v92 == 37) then
														local v254 = 0;
														local v255;
														local v256;
														while true do
															if (v254 == 1) then
																for v449 = v255 + 1, v91[4] do
																	v256 = v256 .. v89[v449];
																end
																v89[v91[2]] = v256;
																break;
															end
															if (v254 == 0) then
																v255 = v91[3];
																v256 = v89[v255];
																v254 = 1;
															end
														end
													elseif (v89[v91[2]] <= v89[v91[4]]) then
														v83 = v83 + 1;
													else
														v83 = v91[3];
													end
												elseif (v92 <= 44) then
													if (v92 <= 41) then
														if (v92 <= 39) then
															for v182 = v91[2], v91[3] do
																v89[v182] = nil;
															end
														elseif (v92 > 40) then
															v89[v91[2]] = v89[v91[3]] - v89[v91[4]];
														elseif not v89[v91[2]] then
															v83 = v83 + 1;
														else
															v83 = v91[3];
														end
													elseif (v92 <= 42) then
														v89[v91[2]][v91[3]] = v89[v91[4]];
													elseif (v92 > 43) then
														v89[v91[2]][v91[3]] = v89[v91[4]];
													else
														v89[v91[2]] = v89[v91[3]][v89[v91[4]]];
													end
												elseif (v92 <= 47) then
													if (v92 <= 45) then
														local v143 = v80[v91[3]];
														local v144;
														local v145 = {};
														v144 = v10({}, {__index=function(v184, v185)
															local v186 = 0;
															local v187;
															while true do
																if (v186 == 0) then
																	v187 = v145[v185];
																	return v187[1][v187[2]];
																end
															end
														end,__newindex=function(v188, v189, v190)
															local v191 = v145[v189];
															v191[1][v191[2]] = v190;
														end});
														for v193 = 1, v91[4] do
															v83 = v83 + 1;
															local v194 = v79[v83];
															if (v194[1] == 67) then
																v145[v193 - 1] = {v89,v194[3]};
															else
																v145[v193 - 1] = {v61,v194[3]};
															end
															v88[#v88 + 1] = v145;
														end
														v89[v91[2]] = v30(v143, v144, v62);
													elseif (v92 == 46) then
														local v262 = 0;
														local v263;
														local v264;
														local v265;
														while true do
															if (v262 == 1) then
																v265 = 0;
																for v450 = v263, v91[4] do
																	local v451 = 0;
																	while true do
																		if (v451 == 0) then
																			v265 = v265 + 1;
																			v89[v450] = v264[v265];
																			break;
																		end
																	end
																end
																break;
															end
															if (v262 == 0) then
																v263 = v91[2];
																v264 = {v89[v263](v89[v263 + 1])};
																v262 = 1;
															end
														end
													elseif (v89[v91[2]] ~= v89[v91[4]]) then
														v83 = v83 + 1;
													else
														v83 = v91[3];
													end
												elseif (v92 <= 49) then
													if (v92 > 48) then
														if (v89[v91[2]] < v89[v91[4]]) then
															v83 = v83 + 1;
														else
															v83 = v91[3];
														end
													else
														local v266 = v91[2];
														local v267, v268 = v82(v89[v266](v13(v89, v266 + 1, v91[3])));
														v84 = (v268 + v266) - 1;
														local v269 = 0;
														for v362 = v266, v84 do
															local v363 = 0;
															while true do
																if (v363 == 0) then
																	v269 = v269 + 1;
																	v89[v362] = v267[v269];
																	break;
																end
															end
														end
													end
												elseif (v92 > 50) then
													v89[v91[2]] = {};
												elseif (v89[v91[2]] == v89[v91[4]]) then
													v83 = v83 + 1;
												else
													v83 = v91[3];
												end
											elseif (v92 <= 77) then
												if (v92 <= 64) then
													if (v92 <= 57) then
														if (v92 <= 54) then
															if (v92 <= 52) then
																local v147 = 0;
																local v148;
																while true do
																	if (v147 == 0) then
																		v148 = v91[2];
																		v89[v148](v13(v89, v148 + 1, v84));
																		break;
																	end
																end
															elseif (v92 == 53) then
																local v271 = 0;
																local v272;
																while true do
																	if (v271 == 0) then
																		v272 = v91[2];
																		v89[v272](v13(v89, v272 + 1, v91[3]));
																		break;
																	end
																end
															elseif (v91[2] <= v89[v91[4]]) then
																v83 = v83 + 1;
															else
																v83 = v91[3];
															end
														elseif (v92 <= 55) then
															v89[v91[2]] = v89[v91[3]][v91[4]];
														elseif (v92 == 56) then
															local v273 = v91[2];
															local v274, v275 = v82(v89[v273](v13(v89, v273 + 1, v84)));
															v84 = (v275 + v273) - 1;
															local v276 = 0;
															for v365 = v273, v84 do
																v276 = v276 + 1;
																v89[v365] = v274[v276];
															end
														else
															local v277 = 0;
															local v278;
															while true do
																if (v277 == 0) then
																	v278 = v91[2];
																	v89[v278] = v89[v278](v89[v278 + 1]);
																	break;
																end
															end
														end
													elseif (v92 <= 60) then
														if (v92 <= 58) then
															if (v89[v91[2]] <= v89[v91[4]]) then
																v83 = v83 + 1;
															else
																v83 = v91[3];
															end
														elseif (v92 > 59) then
															v89[v91[2]] = {};
														else
															v83 = v91[3];
														end
													elseif (v92 <= 62) then
														if (v92 > 61) then
															if (v89[v91[2]] ~= v89[v91[4]]) then
																v83 = v83 + 1;
															else
																v83 = v91[3];
															end
														else
															v89[v91[2]] = v61[v91[3]];
														end
													elseif (v92 == 63) then
														local v284 = v91[2];
														v89[v284] = v89[v284](v13(v89, v284 + 1, v84));
													else
														local v286 = 0;
														local v287;
														local v288;
														local v289;
														while true do
															if (v286 == 0) then
																v287 = v91[2];
																v288 = v89[v287];
																v286 = 1;
															end
															if (v286 == 1) then
																v289 = v91[3];
																for v454 = 1, v289 do
																	v288[v454] = v89[v287 + v454];
																end
																break;
															end
														end
													end
												elseif (v92 <= 70) then
													if (v92 <= 67) then
														if (v92 <= 65) then
															v89[v91[2]] = v91[3];
														elseif (v92 == 66) then
															local v290 = 0;
															local v291;
															local v292;
															while true do
																if (v290 == 0) then
																	v291 = v91[2];
																	v292 = {};
																	v290 = 1;
																end
																if (v290 == 1) then
																	for v457 = 1, #v88 do
																		local v458 = 0;
																		local v459;
																		while true do
																			if (0 == v458) then
																				v459 = v88[v457];
																				for v486 = 0, #v459 do
																					local v487 = v459[v486];
																					local v488 = v487[1];
																					local v489 = v487[2];
																					if ((v488 == v89) and (v489 >= v291)) then
																						v292[v489] = v488[v489];
																						v487[1] = v292;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														else
															v89[v91[2]] = v89[v91[3]];
														end
													elseif (v92 <= 68) then
														if v89[v91[2]] then
															v83 = v83 + 1;
														else
															v83 = v91[3];
														end
													elseif (v92 == 69) then
														local v296 = 0;
														local v297;
														local v298;
														local v299;
														local v300;
														while true do
															if (v296 == 2) then
																for v460 = v297, v84 do
																	local v461 = 0;
																	while true do
																		if (v461 == 0) then
																			v300 = v300 + 1;
																			v89[v460] = v298[v300];
																			break;
																		end
																	end
																end
																break;
															end
															if (v296 == 1) then
																v84 = (v299 + v297) - 1;
																v300 = 0;
																v296 = 2;
															end
															if (v296 == 0) then
																v297 = v91[2];
																v298, v299 = v82(v89[v297](v13(v89, v297 + 1, v84)));
																v296 = 1;
															end
														end
													else
														local v301 = 0;
														local v302;
														while true do
															if (v301 == 0) then
																v302 = v91[2];
																do
																	return v13(v89, v302, v302 + v91[3]);
																end
																break;
															end
														end
													end
												elseif (v92 <= 73) then
													if (v92 <= 71) then
														if v89[v91[2]] then
															v83 = v83 + 1;
														else
															v83 = v91[3];
														end
													elseif (v92 > 72) then
														local v304 = v89[v91[4]];
														if v304 then
															v83 = v83 + 1;
														else
															v89[v91[2]] = v304;
															v83 = v91[3];
														end
													else
														v89[v91[2]]();
													end
												elseif (v92 <= 75) then
													if (v92 == 74) then
														local v305 = 0;
														local v306;
														while true do
															if (v305 == 0) then
																v306 = v91[2];
																v89[v306] = v89[v306](v13(v89, v306 + 1, v91[3]));
																break;
															end
														end
													elseif (v91[2] <= v89[v91[4]]) then
														v83 = v83 + 1;
													else
														v83 = v91[3];
													end
												elseif (v92 > 76) then
													local v307 = 0;
													local v308;
													local v309;
													while true do
														if (v307 == 1) then
															for v462 = v308 + 1, v91[3] do
																v7(v309, v89[v462]);
															end
															break;
														end
														if (v307 == 0) then
															v308 = v91[2];
															v309 = v89[v308];
															v307 = 1;
														end
													end
												elseif (v89[v91[2]] == v91[4]) then
													v83 = v83 + 1;
												else
													v83 = v91[3];
												end
											elseif (v92 <= 90) then
												if (v92 <= 83) then
													if (v92 <= 80) then
														if (v92 <= 78) then
															v89[v91[2]][v89[v91[3]]] = v89[v91[4]];
														elseif (v92 == 79) then
															v89[v91[2]] = v89[v91[3]] + v91[4];
														else
															v89[v91[2]] = v91[3] ~= 0;
														end
													elseif (v92 <= 81) then
														v89[v91[2]] = v89[v91[3]] + v91[4];
													elseif (v92 > 82) then
														local v312 = 0;
														local v313;
														while true do
															if (v312 == 0) then
																v313 = v91[2];
																v89[v313](v89[v313 + 1]);
																break;
															end
														end
													else
														v89[v91[2]]();
													end
												elseif (v92 <= 86) then
													if (v92 <= 84) then
														v89[v91[2]] = v62[v91[3]];
													elseif (v92 > 85) then
														local v314 = v91[3];
														local v315 = v89[v314];
														for v368 = v314 + 1, v91[4] do
															v315 = v315 .. v89[v368];
														end
														v89[v91[2]] = v315;
													else
														local v317 = v91[2];
														do
															return v13(v89, v317, v84);
														end
													end
												elseif (v92 <= 88) then
													if (v92 == 87) then
														do
															return;
														end
													else
														v89[v91[2]] = v61[v91[3]];
													end
												elseif (v92 > 89) then
													local v320 = v91[2];
													v89[v320] = v89[v320]();
												else
													v89[v91[2]] = v91[3] ~= 0;
												end
											elseif (v92 <= 96) then
												if (v92 <= 93) then
													if (v92 <= 91) then
														do
															return v89[v91[2]];
														end
													elseif (v92 == 92) then
														local v323 = 0;
														local v324;
														while true do
															if (v323 == 0) then
																v324 = v91[2];
																v89[v324](v13(v89, v324 + 1, v91[3]));
																break;
															end
														end
													else
														local v325 = v91[2];
														local v326 = {v89[v325](v13(v89, v325 + 1, v84))};
														local v327 = 0;
														for v369 = v325, v91[4] do
															v327 = v327 + 1;
															v89[v369] = v326[v327];
														end
													end
												elseif (v92 <= 94) then
													v89[v91[2]] = v89[v91[3]] / v89[v91[4]];
												elseif (v92 == 95) then
													local v328 = v91[2];
													v89[v328](v89[v328 + 1]);
												else
													local v329 = v91[2];
													local v330 = v91[4];
													local v331 = v329 + 2;
													local v332 = {v89[v329](v89[v329 + 1], v89[v331])};
													for v372 = 1, v330 do
														v89[v331 + v372] = v332[v372];
													end
													local v333 = v332[1];
													if v333 then
														local v395 = 0;
														while true do
															if (v395 == 0) then
																v89[v331] = v333;
																v83 = v91[3];
																break;
															end
														end
													else
														v83 = v83 + 1;
													end
												end
											elseif (v92 <= 99) then
												if (v92 <= 97) then
													local v159 = v91[2];
													local v160 = {v89[v159](v89[v159 + 1])};
													local v161 = 0;
													for v196 = v159, v91[4] do
														local v197 = 0;
														while true do
															if (v197 == 0) then
																v161 = v161 + 1;
																v89[v196] = v160[v161];
																break;
															end
														end
													end
												elseif (v92 > 98) then
													local v334 = 0;
													local v335;
													local v336;
													while true do
														if (v334 == 1) then
															v89[v335 + 1] = v336;
															v89[v335] = v336[v91[4]];
															break;
														end
														if (v334 == 0) then
															v335 = v91[2];
															v336 = v89[v91[3]];
															v334 = 1;
														end
													end
												else
													local v337 = 0;
													local v338;
													while true do
														if (0 == v337) then
															v338 = v91[2];
															v89[v338] = v89[v338](v89[v338 + 1]);
															break;
														end
													end
												end
											elseif (v92 <= 101) then
												if (v92 == 100) then
													local v339 = 0;
													local v340;
													local v341;
													while true do
														if (v339 == 0) then
															v340 = v91[2];
															v341 = v89[v91[3]];
															v339 = 1;
														end
														if (v339 == 1) then
															v89[v340 + 1] = v341;
															v89[v340] = v341[v91[4]];
															break;
														end
													end
												else
													local v342 = 0;
													local v343;
													local v344;
													while true do
														if (v342 == 1) then
															for v463 = 1, #v88 do
																local v464 = 0;
																local v465;
																while true do
																	if (v464 == 0) then
																		v465 = v88[v463];
																		for v490 = 0, #v465 do
																			local v491 = 0;
																			local v492;
																			local v493;
																			local v494;
																			while true do
																				if (1 == v491) then
																					v494 = v492[2];
																					if ((v493 == v89) and (v494 >= v343)) then
																						local v507 = 0;
																						while true do
																							if (v507 == 0) then
																								v344[v494] = v493[v494];
																								v492[1] = v344;
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (0 == v491) then
																					v492 = v465[v490];
																					v493 = v492[1];
																					v491 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v342 == 0) then
															v343 = v91[2];
															v344 = {};
															v342 = 1;
														end
													end
												end
											elseif (v92 > 102) then
												local v345 = 0;
												local v346;
												while true do
													if (0 == v345) then
														v346 = v91[2];
														do
															return v13(v89, v346, v84);
														end
														break;
													end
												end
											elseif not v89[v91[2]] then
												v83 = v83 + 1;
											else
												v83 = v91[3];
											end
											v83 = v83 + 1;
											break;
										end
									end
								end
							end;
						end
					end
				end
				return v30(v29(), {}, v17)(...);
			end
		end
	end
	vv9(), ...);
end
