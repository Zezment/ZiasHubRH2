--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v81 = 0;
				local v82;
				while true do
					if (v81 == 0) then
						v82 = v2(v0(v30, 16));
						if v19 then
							local v101 = v5(v82, v19);
							v19 = nil;
							return v101;
						else
							return v82;
						end
						break;
					end
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v83 = (v31 / ((5 - 3) ^ (v32 - ((1 + 1) - 1)))) % (2 ^ (((v33 - (1 + 0)) - (v32 - (1 - 0))) + (2 - 1)));
				return v83 - (v83 % (620 - (555 + (941 - (282 + 595)))));
			else
				local v84 = (933 - (857 + 74)) ^ (v32 - 1);
				return (((v31 % (v84 + v84)) >= v84) and (569 - (367 + 201))) or (927 - (214 + 713));
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35, v36 = v1(v16, v18, v18 + (1639 - (1523 + 114)));
			v18 = v18 + 2 + 0;
			return (v36 * (364 - 108)) + v35;
		end
		local function v23()
			local v37 = 1065 - (68 + 997);
			local v38;
			local v39;
			local v40;
			local v41;
			while true do
				if (v37 == (1271 - (226 + 1044))) then
					return (v41 * (31011612 - 14234396)) + (v40 * (285370 - 219834)) + (v39 * (373 - (32 + 85))) + v38;
				end
				if (v37 == (0 + 0)) then
					v38, v39, v40, v41 = v1(v16, v18, v18 + 1 + 2);
					v18 = v18 + (961 - ((1637 - 745) + 65));
					v37 = (352 - (87 + 263)) - 1;
				end
			end
		end
		local function v24()
			local v42 = v23();
			local v43 = v23();
			local v44 = 3 - 2;
			local v45 = (v20(v43, 181 - (67 + 113), (57 - 42) + 5) * (((2 + 2) - 2) ^ (24 + 8))) + v42;
			local v46 = v20(v43, 83 - 62, 983 - (802 + 150));
			local v47 = ((v20(v43, 85 - 53) == 1) and -(1 - 0)) or (1 + 0);
			if (v46 == (997 - (915 + 82))) then
				if (v45 == (0 - 0)) then
					return v47 * (0 + 0);
				else
					local v90 = 0 - 0;
					while true do
						if (v90 == (1187 - (1069 + 118))) then
							v46 = 2 - 1;
							v44 = 0 - 0;
							break;
						end
					end
				end
			elseif (v46 == ((629 - 273) + 1691)) then
				return ((v45 == (0 - 0)) and (v47 * ((1 + 0) / ((1229 - (145 + 293)) - (368 + 423))))) or (v47 * NaN);
			end
			return v8(v47, v46 - (3214 - 2191)) * (v44 + (v45 / (2 ^ (70 - ((452 - (416 + 26)) + 8)))));
		end
		local function v25(v48)
			local v49 = 430 - (44 + 386);
			local v50;
			local v51;
			while true do
				if (v49 == (1487 - (998 + 488))) then
					v50 = v3(v16, v18, (v18 + v48) - (1 + 0));
					v18 = v18 + v48;
					v49 = 2 + 0;
				end
				if (v49 == 3) then
					return v6(v51);
				end
				if (v49 == ((0 + 0) - 0)) then
					v50 = nil;
					if not v48 then
						v48 = v23();
						if (v48 == (0 + 0)) then
							return "";
						end
					end
					v49 = 773 - (201 + (1456 - (261 + 624)));
				end
				if (v49 == (4 - 2)) then
					v51 = {};
					for v91 = 1139 - (116 + 1022), #v50 do
						v51[v91] = v2(v1(v3(v50, v91, v91)));
					end
					v49 = (21 - 9) - 9;
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v52 = 0 + 0;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			local v60;
			while true do
				if (v52 ~= (1024 - (706 + 318))) then
				else
					v53 = 1251 - (721 + 530);
					v54 = nil;
					v52 = 1614 - (1565 + 48);
				end
				if (v52 == (2 + 0)) then
					local v88 = 0;
					while true do
						if ((1271 - (945 + 326)) ~= v88) then
						else
							v57 = nil;
							v58 = nil;
							v88 = 268 - (176 + 91);
						end
						if (v88 == (2 - 1)) then
							v52 = 3;
							break;
						end
					end
				end
				if (v52 == 3) then
					local v89 = 0 - 0;
					while true do
						if (v89 == (0 + 0)) then
							v59 = nil;
							v60 = nil;
							v89 = 1;
						end
						if (1 ~= v89) then
						else
							v52 = 704 - (271 + 429);
							break;
						end
					end
				end
				if (v52 ~= (1 + 0)) then
				else
					v55 = nil;
					v56 = nil;
					v52 = 2;
				end
				if (v52 ~= 4) then
				else
					while true do
						if (v53 ~= 0) then
						else
							local v97 = 0;
							local v98;
							while true do
								if (v97 ~= 0) then
								else
									v98 = 1500 - (1408 + 92);
									while true do
										if (v98 ~= (1087 - (461 + 625))) then
										else
											v53 = 1289 - (993 + 295);
											break;
										end
										if (v98 == (0 + 0)) then
											v54 = 0;
											v55 = nil;
											v98 = 1;
										end
									end
									break;
								end
							end
						end
						if (v53 ~= 1) then
						else
							v56 = nil;
							v57 = nil;
							v53 = 1173 - (418 + 753);
						end
						if (v53 ~= 3) then
						else
							v60 = nil;
							while true do
								local v102 = 0 - 0;
								local v103;
								local v104;
								while true do
									if ((0 - 0) ~= v102) then
									else
										v103 = 1018 - (697 + 321);
										v104 = nil;
										v102 = 1 + 0;
									end
									if (v102 ~= (2 - 1)) then
									else
										while true do
											if (v103 ~= (0 + 0)) then
											else
												v104 = 0;
												while true do
													if (v104 == (1 + 0)) then
														if ((1 + 1) == v54) then
															local v346 = 529 - (406 + 123);
															local v347;
															local v348;
															while true do
																if (v346 ~= (1770 - (1749 + 20))) then
																else
																	while true do
																		if (v347 ~= (0 - 0)) then
																		else
																			v348 = 0;
																			while true do
																				local v436 = 0;
																				while true do
																					if (v436 == (0 + 0)) then
																						if ((1322 - (1249 + 73)) ~= v348) then
																						else
																							local v446 = 0 + 0;
																							while true do
																								if ((1145 - (466 + 679)) ~= v446) then
																								else
																									for v448 = 948 - (245 + 702), v23() do
																										local v449 = 0 - 0;
																										local v450;
																										while true do
																											if (v449 == (0 - 0)) then
																												v450 = v21();
																												if (v20(v450, 1901 - (106 + 1794), 1 + 0) ~= 0) then
																												else
																													local v455 = 0 + 0;
																													local v456;
																													local v457;
																													local v458;
																													local v459;
																													local v460;
																													local v461;
																													while true do
																														if (v455 == (1 + 0)) then
																															v458 = nil;
																															v459 = nil;
																															v455 = 5 - 3;
																														end
																														if (v455 ~= 0) then
																														else
																															v456 = 0;
																															v457 = nil;
																															v455 = 2 - 1;
																														end
																														if (2 == v455) then
																															v460 = nil;
																															v461 = nil;
																															v455 = 117 - (4 + 110);
																														end
																														if (v455 ~= (587 - (57 + 527))) then
																														else
																															while true do
																																if (v456 ~= (1429 - (41 + 1386))) then
																																else
																																	v461 = nil;
																																	while true do
																																		if ((2 - 1) ~= v457) then
																																		else
																																			local v469 = 103 - (17 + 86);
																																			local v470;
																																			while true do
																																				if (0 ~= v469) then
																																				else
																																					v470 = 0 + 0;
																																					while true do
																																						if (v470 == 1) then
																																							v457 = 1207 - (902 + 303);
																																							break;
																																						end
																																						if ((0 - 0) ~= v470) then
																																						else
																																							v460 = nil;
																																							v461 = nil;
																																							v470 = 1;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		if (v457 ~= (0 - 0)) then
																																		else
																																			local v471 = 0;
																																			while true do
																																				if (v471 ~= (166 - (122 + 44))) then
																																				else
																																					v458 = 0;
																																					v459 = nil;
																																					v471 = 1;
																																				end
																																				if (1 ~= v471) then
																																				else
																																					v457 = 1 - 0;
																																					break;
																																				end
																																			end
																																		end
																																		if (2 == v457) then
																																			while true do
																																				if (v458 == (9 - 6)) then
																																					if (v20(v460, 3 + 0, 3) == 1) then
																																						v461[4] = v60[v461[1 + 3]];
																																					end
																																					v55[v448] = v461;
																																					break;
																																				end
																																				if ((1 - 0) == v458) then
																																					local v475 = 65 - (30 + 35);
																																					while true do
																																						if ((0 + 0) ~= v475) then
																																						else
																																							local v484 = 0;
																																							local v485;
																																							while true do
																																								if (0 == v484) then
																																									v485 = 0;
																																									while true do
																																										if (v485 ~= (2 - 1)) then
																																										else
																																											v475 = 1258 - (1043 + 214);
																																											break;
																																										end
																																										if (v485 ~= 0) then
																																										else
																																											local v487 = 0 - 0;
																																											while true do
																																												if (v487 ~= (214 - (22 + 192))) then
																																												else
																																													v461 = {v22(),v22(),nil,nil};
																																													if (v459 == (580 - (361 + 219))) then
																																														local v493 = 1463 - (1404 + 59);
																																														local v494;
																																														while true do
																																															if ((320 - (53 + 267)) ~= v493) then
																																															else
																																																v494 = 0 + 0;
																																																while true do
																																																	if ((413 - (15 + 398)) == v494) then
																																																		v461[985 - (18 + 964)] = v22();
																																																		v461[4] = v22();
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													elseif (v459 == (3 - 2)) then
																																														v461[3 - 0] = v23();
																																													elseif (v459 == (767 - (468 + 297))) then
																																														v461[3] = v23() - ((2 + 0) ^ (11 + 5));
																																													elseif (v459 == 3) then
																																														local v499 = 0 - 0;
																																														local v500;
																																														local v501;
																																														while true do
																																															if (v499 ~= 1) then
																																															else
																																																while true do
																																																	if (0 ~= v500) then
																																																	else
																																																		v501 = 0 - 0;
																																																		while true do
																																																			if ((850 - (20 + 830)) == v501) then
																																																				v461[3 + 0] = v23() - ((128 - (116 + 10)) ^ (5 + 11));
																																																				v461[240 - (141 + 95)] = v22();
																																																				break;
																																																			end
																																																		end
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																															if (0 ~= v499) then
																																															else
																																																v500 = 0 + 0;
																																																v501 = nil;
																																																v499 = 1 + 0;
																																															end
																																														end
																																													end
																																													v487 = 739 - (542 + 196);
																																												end
																																												if (v487 ~= (2 - 1)) then
																																												else
																																													v485 = 1 - 0;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																						if (v475 ~= (1 + 0)) then
																																						else
																																							v458 = 4 - 2;
																																							break;
																																						end
																																					end
																																				end
																																				if (v458 == 0) then
																																					local v476 = 0 + 0;
																																					local v477;
																																					local v478;
																																					while true do
																																						if (v476 ~= (0 + 0)) then
																																						else
																																							v477 = 0 + 0;
																																							v478 = nil;
																																							v476 = 2 - 1;
																																						end
																																						if (v476 == 1) then
																																							while true do
																																								if (v477 ~= 0) then
																																								else
																																									v478 = 0 + 0;
																																									while true do
																																										if (0 == v478) then
																																											local v488 = 0 - 0;
																																											while true do
																																												if (v488 ~= (2 - 1)) then
																																												else
																																													v478 = 1;
																																													break;
																																												end
																																												if (v488 == 0) then
																																													v459 = v20(v450, 2 + 0, 166 - (92 + 71));
																																													v460 = v20(v450, 4, 1557 - (1126 + 425));
																																													v488 = 406 - (118 + 287);
																																												end
																																											end
																																										end
																																										if (v478 ~= 1) then
																																										else
																																											v458 = 766 - (574 + 191);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				if (v458 ~= (7 - 5)) then
																																				else
																																					local v479 = 0 - 0;
																																					local v480;
																																					while true do
																																						if (v479 == (1121 - (118 + 1003))) then
																																							v480 = 0 - 0;
																																							while true do
																																								if (v480 == (849 - (254 + 595))) then
																																									local v486 = 377 - (142 + 235);
																																									while true do
																																										if (v486 == (1 - 0)) then
																																											v480 = 1;
																																											break;
																																										end
																																										if (v486 ~= (0 - 0)) then
																																										else
																																											if (v20(v460, 1, 1 + 0) == (978 - (553 + 424))) then
																																												v461[1 + 1] = v60[v461[3 - 1]];
																																											end
																																											if (v20(v460, 2, 2 + 0) == 1) then
																																												v461[8 - 5] = v60[v461[3 + 0]];
																																											end
																																											v486 = 1 + 0;
																																										end
																																									end
																																								end
																																								if (v480 ~= (1 + 0)) then
																																								else
																																									v458 = 809 - (118 + 688);
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v456 == (0 + 0)) then
																																	v457 = 0 + 0;
																																	v458 = nil;
																																	v456 = 1887 - (927 + 959);
																																end
																																if (v456 ~= (3 - 2)) then
																																else
																																	local v463 = 0;
																																	while true do
																																		if (v463 == (2 - 1)) then
																																			v456 = 3 - 1;
																																			break;
																																		end
																																		if ((0 - 0) == v463) then
																																			v459 = nil;
																																			v460 = nil;
																																			v463 = 2 - 1;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																									for v451 = 2 - 1, v23() do
																										v56[v451 - (1 + 0)] = v28();
																									end
																									v446 = 2 - 1;
																								end
																								if (v446 ~= 1) then
																								else
																									v348 = 4 - 3;
																									break;
																								end
																							end
																						end
																						if (v348 ~= (4 - 3)) then
																						else
																							return v58;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((1796 - (503 + 1293)) ~= v346) then
																else
																	v347 = 0;
																	v348 = nil;
																	v346 = 2 - 1;
																end
															end
														end
														break;
													end
													if (v104 == (753 - (239 + 514))) then
														local v151 = 0 + 0;
														local v152;
														while true do
															if (v151 == (1061 - (810 + 251))) then
																v152 = 0 + 0;
																while true do
																	if (v152 == (1329 - (797 + 532))) then
																		local v425 = 0 + 0;
																		while true do
																			if (v425 == (0 + 0)) then
																				if (0 ~= v54) then
																				else
																					local v442 = 0 - 0;
																					while true do
																						if (v442 ~= 0) then
																						else
																							v55 = {};
																							v56 = {};
																							v442 = 1203 - (373 + 829);
																						end
																						if (v442 ~= 2) then
																						else
																							v54 = 732 - (476 + 255);
																							break;
																						end
																						if (v442 == (1131 - (369 + 761))) then
																							local v447 = 0 + 0;
																							while true do
																								if (v447 ~= (0 - 0)) then
																								else
																									v57 = {};
																									v58 = {v55,v56,nil,v57};
																									v447 = 239 - (64 + 174);
																								end
																								if (v447 == (1 + 0)) then
																									v442 = 861 - (240 + 619);
																									break;
																								end
																							end
																						end
																					end
																				end
																				if (v54 ~= (1 + 0)) then
																				else
																					local v443 = 0;
																					local v444;
																					local v445;
																					while true do
																						if (v443 ~= 0) then
																						else
																							v444 = 0;
																							v445 = nil;
																							v443 = 1 - 0;
																						end
																						if ((1 - 0) == v443) then
																							while true do
																								if (v444 ~= (336 - (144 + 192))) then
																								else
																									v445 = 0;
																									while true do
																										if ((407 - (255 + 150)) == v445) then
																											v54 = 2;
																											break;
																										end
																										if (v445 ~= (217 - (42 + 174))) then
																										else
																											local v453 = 0 + 0;
																											local v454;
																											while true do
																												if ((0 - 0) ~= v453) then
																												else
																													v454 = 0 + 0;
																													while true do
																														if (v454 ~= (1740 - (404 + 1335))) then
																														else
																															v445 = 2 + 0;
																															break;
																														end
																														if (v454 ~= (406 - (183 + 223))) then
																														else
																															local v462 = 0 + 0;
																															while true do
																																if (v462 ~= (1505 - (363 + 1141))) then
																																else
																																	v454 = 1 + 0;
																																	break;
																																end
																																if (v462 ~= (0 + 0)) then
																																else
																																	for v465 = 1581 - (1183 + 397), v59 do
																																		local v466 = 0;
																																		local v467;
																																		local v468;
																																		while true do
																																			if (v466 == 1) then
																																				if (v467 == (2 - 1)) then
																																					v468 = v21() ~= 0;
																																				elseif (v467 == (2 + 0)) then
																																					v468 = v24();
																																				elseif (v467 ~= (3 + 0)) then
																																				else
																																					v468 = v25();
																																				end
																																				v60[v465] = v468;
																																				break;
																																			end
																																			if (v466 ~= (1975 - (1913 + 62))) then
																																			else
																																				local v473 = 0 + 0;
																																				while true do
																																					if (v473 ~= (2 - 1)) then
																																					else
																																						v466 = 1934 - (565 + 1368);
																																						break;
																																					end
																																					if (v473 ~= 0) then
																																					else
																																						local v481 = 0 - 0;
																																						while true do
																																							if (v481 == (4 - 3)) then
																																								v473 = 1662 - (1477 + 184);
																																								break;
																																							end
																																							if (v481 == (0 - 0)) then
																																								v467 = v21();
																																								v468 = nil;
																																								v481 = 470 - (270 + 199);
																																							end
																																						end
																																					end
																																				end
																																			end
																																		end
																																	end
																																	v58[3 - 0] = v21();
																																	v462 = 1 + 0;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v445 == (0 + 0)) then
																											v59 = v23();
																											v60 = {};
																											v445 = 1;
																										end
																									end
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				v425 = 857 - (564 + 292);
																			end
																			if (v425 == (2 - 1)) then
																				v152 = 1 - 0;
																				break;
																			end
																		end
																	end
																	if (1 ~= v152) then
																	else
																		v104 = 2 - 1;
																		break;
																	end
																end
																break;
															end
														end
													end
												end
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v53 ~= (306 - (244 + 60))) then
						else
							local v99 = 0;
							local v100;
							while true do
								if (0 ~= v99) then
								else
									v100 = 0 + 0;
									while true do
										if (v100 ~= (0 + 0)) then
										else
											v58 = nil;
											v59 = nil;
											v100 = 477 - (41 + 435);
										end
										if (v100 == (1002 - (938 + 63))) then
											v53 = 3 + 0;
											break;
										end
									end
									break;
								end
							end
						end
					end
					break;
				end
			end
		end
		local function v29(v61, v62, v63)
			local v64 = v61[1];
			local v65 = v61[2];
			local v66 = v61[3];
			return function(...)
				local v67 = v64;
				local v68 = v65;
				local v69 = v66;
				local v70 = v27;
				local v71 = 1;
				local v72 = -1;
				local v73 = {};
				local v74 = {...};
				local v75 = v12("#", ...) - 1;
				local v76 = {};
				local v77 = {};
				for v85 = 0, v75 do
					if (v85 >= v69) then
						v73[v85 - v69] = v74[v85 + 1];
					else
						v77[v85] = v74[v85 + 1];
					end
				end
				local v78 = (v75 - v69) + 1;
				local v79;
				local v80;
				while true do
					v79 = v67[v71];
					v80 = v79[1];
					if (v80 <= 51) then
						if (v80 <= 25) then
							if (v80 <= 12) then
								if (v80 <= 5) then
									if (v80 <= 2) then
										if (v80 <= 0) then
											v71 = v79[3];
										elseif (v80 == 1) then
											local v153 = v79[3];
											local v154 = v77[v153];
											for v299 = v153 + 1, v79[4] do
												v154 = v154 .. v77[v299];
											end
											v77[v79[2]] = v154;
										else
											local v156 = v79[2];
											local v157, v158 = v70(v77[v156](v13(v77, v156 + 1, v79[3])));
											v72 = (v158 + v156) - 1;
											local v159 = 0;
											for v300 = v156, v72 do
												v159 = v159 + 1;
												v77[v300] = v157[v159];
											end
										end
									elseif (v80 <= 3) then
										local v106 = v79[2];
										local v107, v108 = v70(v77[v106](v77[v106 + 1]));
										v72 = (v108 + v106) - 1;
										local v109 = 0;
										for v142 = v106, v72 do
											local v143 = 0;
											while true do
												if (v143 == 0) then
													v109 = v109 + 1;
													v77[v142] = v107[v109];
													break;
												end
											end
										end
									elseif (v80 > 4) then
										v77[v79[2]] = v77[v79[3]] + v79[4];
									else
										local v161 = v79[2];
										local v162 = {v77[v161](v77[v161 + 1])};
										local v163 = 0;
										for v303 = v161, v79[4] do
											v163 = v163 + 1;
											v77[v303] = v162[v163];
										end
									end
								elseif (v80 <= 8) then
									if (v80 <= 6) then
										local v110 = 0;
										local v111;
										while true do
											if (v110 == 0) then
												v111 = v79[2];
												v77[v111] = v77[v111](v13(v77, v111 + 1, v72));
												break;
											end
										end
									elseif (v80 == 7) then
										if (v79[2] == v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									else
										v77[v79[2]] = v77[v79[3]];
									end
								elseif (v80 <= 10) then
									if (v80 > 9) then
										v77[v79[2]]();
									else
										local v166 = v79[2];
										local v167 = v77[v166];
										for v308 = v166 + 1, v79[3] do
											v7(v167, v77[v308]);
										end
									end
								elseif (v80 > 11) then
									v62[v79[3]] = v77[v79[2]];
								else
									local v170 = 0;
									local v171;
									while true do
										if (v170 == 0) then
											v171 = v79[2];
											v77[v171](v77[v171 + 1]);
											break;
										end
									end
								end
							elseif (v80 <= 18) then
								if (v80 <= 15) then
									if (v80 <= 13) then
										v77[v79[2]] = {};
									elseif (v80 > 14) then
										v77[v79[2]] = v77[v79[3]] - v77[v79[4]];
									else
										do
											return;
										end
									end
								elseif (v80 <= 16) then
									if v77[v79[2]] then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								elseif (v80 == 17) then
									v77[v79[2]] = v63[v79[3]];
								else
									local v176 = 0;
									local v177;
									while true do
										if (v176 == 0) then
											v177 = v79[2];
											do
												return v13(v77, v177, v72);
											end
											break;
										end
									end
								end
							elseif (v80 <= 21) then
								if (v80 <= 19) then
									v77[v79[2]] = v77[v79[3]][v79[4]];
								elseif (v80 > 20) then
									v77[v79[2]] = v77[v79[3]] - v77[v79[4]];
								else
									local v179 = v77[v79[4]];
									if v179 then
										v71 = v71 + 1;
									else
										v77[v79[2]] = v179;
										v71 = v79[3];
									end
								end
							elseif (v80 <= 23) then
								if (v80 > 22) then
									if (v77[v79[2]] ~= v77[v79[4]]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								else
									local v180 = 0;
									local v181;
									while true do
										if (v180 == 0) then
											v181 = v79[2];
											do
												return v13(v77, v181, v181 + v79[3]);
											end
											break;
										end
									end
								end
							elseif (v80 == 24) then
								if v77[v79[2]] then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							else
								v77[v79[2]] = v77[v79[3]][v77[v79[4]]];
							end
						elseif (v80 <= 38) then
							if (v80 <= 31) then
								if (v80 <= 28) then
									if (v80 <= 26) then
										v71 = v79[3];
									elseif (v80 == 27) then
										local v184 = v79[2];
										local v185 = {v77[v184](v77[v184 + 1])};
										local v186 = 0;
										for v309 = v184, v79[4] do
											v186 = v186 + 1;
											v77[v309] = v185[v186];
										end
									elseif not v77[v79[2]] then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								elseif (v80 <= 29) then
									local v116 = v79[2];
									local v117 = {v77[v116](v13(v77, v116 + 1, v72))};
									local v118 = 0;
									for v144 = v116, v79[4] do
										local v145 = 0;
										while true do
											if (v145 == 0) then
												v118 = v118 + 1;
												v77[v144] = v117[v118];
												break;
											end
										end
									end
								elseif (v80 > 30) then
									v77[v79[2]] = v79[3];
								else
									local v189 = v79[2];
									do
										return v77[v189](v13(v77, v189 + 1, v79[3]));
									end
								end
							elseif (v80 <= 34) then
								if (v80 <= 32) then
									local v119 = v79[2];
									local v120 = v79[4];
									local v121 = v119 + 2;
									local v122 = {v77[v119](v77[v119 + 1], v77[v121])};
									for v146 = 1, v120 do
										v77[v121 + v146] = v122[v146];
									end
									local v123 = v122[1];
									if v123 then
										v77[v121] = v123;
										v71 = v79[3];
									else
										v71 = v71 + 1;
									end
								elseif (v80 == 33) then
									v77[v79[2]] = v62[v79[3]];
								else
									for v312 = v79[2], v79[3] do
										v77[v312] = nil;
									end
								end
							elseif (v80 <= 36) then
								if (v80 == 35) then
									v77[v79[2]] = v77[v79[3]][v77[v79[4]]];
								else
									v77[v79[2]] = v77[v79[3]] / v77[v79[4]];
								end
							elseif (v80 == 37) then
								local v197 = 0;
								local v198;
								while true do
									if (v197 == 0) then
										v198 = v79[2];
										v77[v198] = v77[v198](v13(v77, v198 + 1, v72));
										break;
									end
								end
							else
								local v199 = v79[2];
								local v200 = v79[4];
								local v201 = v199 + 2;
								local v202 = {v77[v199](v77[v199 + 1], v77[v201])};
								for v314 = 1, v200 do
									v77[v201 + v314] = v202[v314];
								end
								local v203 = v202[1];
								if v203 then
									v77[v201] = v203;
									v71 = v79[3];
								else
									v71 = v71 + 1;
								end
							end
						elseif (v80 <= 44) then
							if (v80 <= 41) then
								if (v80 <= 39) then
									v77[v79[2]] = v63[v79[3]];
								elseif (v80 == 40) then
									local v204 = 0;
									local v205;
									local v206;
									while true do
										if (v204 == 0) then
											v205 = v79[2];
											v206 = {};
											v204 = 1;
										end
										if (v204 == 1) then
											for v400 = 1, #v76 do
												local v401 = 0;
												local v402;
												while true do
													if (v401 == 0) then
														v402 = v76[v400];
														for v432 = 0, #v402 do
															local v433 = v402[v432];
															local v434 = v433[1];
															local v435 = v433[2];
															if ((v434 == v77) and (v435 >= v205)) then
																v206[v435] = v434[v435];
																v433[1] = v206;
															end
														end
														break;
													end
												end
											end
											break;
										end
									end
								elseif (v77[v79[2]] < v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 <= 42) then
								v77[v79[2]] = v77[v79[3]] + v79[4];
							elseif (v80 > 43) then
								if (v79[2] <= v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							else
								local v207 = 0;
								local v208;
								local v209;
								while true do
									if (v207 == 1) then
										v77[v208 + 1] = v209;
										v77[v208] = v209[v79[4]];
										break;
									end
									if (v207 == 0) then
										v208 = v79[2];
										v209 = v77[v79[3]];
										v207 = 1;
									end
								end
							end
						elseif (v80 <= 47) then
							if (v80 <= 45) then
								local v127 = v79[2];
								v77[v127](v13(v77, v127 + 1, v72));
							elseif (v80 > 46) then
								v77[v79[2]] = {};
							else
								local v211 = v79[2];
								local v212, v213 = v70(v77[v211](v13(v77, v211 + 1, v79[3])));
								v72 = (v213 + v211) - 1;
								local v214 = 0;
								for v317 = v211, v72 do
									local v318 = 0;
									while true do
										if (v318 == 0) then
											v214 = v214 + 1;
											v77[v317] = v212[v214];
											break;
										end
									end
								end
							end
						elseif (v80 <= 49) then
							if (v80 > 48) then
								local v215 = v79[2];
								local v216, v217 = v70(v77[v215](v13(v77, v215 + 1, v72)));
								v72 = (v217 + v215) - 1;
								local v218 = 0;
								for v319 = v215, v72 do
									v218 = v218 + 1;
									v77[v319] = v216[v218];
								end
							else
								v77[v79[2]] = v77[v79[3]][v79[4]];
							end
						elseif (v80 > 50) then
							local v221 = v79[2];
							v77[v221] = v77[v221](v77[v221 + 1]);
						else
							local v223 = v79[2];
							local v224 = v77[v79[3]];
							v77[v223 + 1] = v224;
							v77[v223] = v224[v79[4]];
						end
					elseif (v80 <= 77) then
						if (v80 <= 64) then
							if (v80 <= 57) then
								if (v80 <= 54) then
									if (v80 <= 52) then
										local v128 = v79[2];
										local v129 = {};
										for v149 = 1, #v76 do
											local v150 = v76[v149];
											for v228 = 0, #v150 do
												local v229 = 0;
												local v230;
												local v231;
												local v232;
												while true do
													if (0 == v229) then
														v230 = v150[v228];
														v231 = v230[1];
														v229 = 1;
													end
													if (v229 == 1) then
														v232 = v230[2];
														if ((v231 == v77) and (v232 >= v128)) then
															v129[v232] = v231[v232];
															v230[1] = v129;
														end
														break;
													end
												end
											end
										end
									elseif (v80 > 53) then
										local v233 = v79[2];
										do
											return v77[v233](v13(v77, v233 + 1, v79[3]));
										end
									elseif (v79[2] <= v77[v79[4]]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								elseif (v80 <= 55) then
									v77[v79[2]]();
								elseif (v80 > 56) then
									local v234 = v79[2];
									v77[v234](v13(v77, v234 + 1, v79[3]));
								elseif (v77[v79[2]] == v79[4]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 <= 60) then
								if (v80 <= 58) then
									v77[v79[2]] = v62[v79[3]];
								elseif (v80 > 59) then
									v77[v79[2]][v77[v79[3]]] = v77[v79[4]];
								else
									local v237 = v79[2];
									local v238 = v77[v237];
									local v239 = v79[3];
									for v322 = 1, v239 do
										v238[v322] = v77[v237 + v322];
									end
								end
							elseif (v80 <= 62) then
								if (v80 > 61) then
									local v240 = v79[2];
									local v241 = v77[v240];
									local v242 = v79[3];
									for v325 = 1, v242 do
										v241[v325] = v77[v240 + v325];
									end
								elseif (v79[2] == v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 > 63) then
								v77[v79[2]][v79[3]] = v79[4];
							else
								local v245 = v79[2];
								v77[v245] = v77[v245]();
							end
						elseif (v80 <= 70) then
							if (v80 <= 67) then
								if (v80 <= 65) then
									v77[v79[2]] = v79[3];
								elseif (v80 > 66) then
									v77[v79[2]] = v77[v79[3]];
								else
									local v249 = 0;
									local v250;
									while true do
										if (v249 == 0) then
											v250 = v79[2];
											v77[v250] = v77[v250](v13(v77, v250 + 1, v79[3]));
											break;
										end
									end
								end
							elseif (v80 <= 68) then
								local v134 = v79[2];
								v77[v134](v13(v77, v134 + 1, v79[3]));
							elseif (v80 == 69) then
								do
									return v77[v79[2]];
								end
							else
								v77[v79[2]][v79[3]] = v77[v79[4]];
							end
						elseif (v80 <= 73) then
							if (v80 <= 71) then
								v77[v79[2]] = v29(v68[v79[3]], nil, v63);
							elseif (v80 == 72) then
								local v253 = v79[2];
								v77[v253] = v77[v253](v13(v77, v253 + 1, v79[3]));
							else
								do
									return;
								end
							end
						elseif (v80 <= 75) then
							if (v80 > 74) then
								local v255 = 0;
								local v256;
								local v257;
								local v258;
								while true do
									if (v255 == 1) then
										v258 = {};
										v257 = v10({}, {__index=function(v405, v406)
											local v407 = 0;
											local v408;
											while true do
												if (v407 == 0) then
													v408 = v258[v406];
													return v408[1][v408[2]];
												end
											end
										end,__newindex=function(v409, v410, v411)
											local v412 = 0;
											local v413;
											while true do
												if (v412 == 0) then
													v413 = v258[v410];
													v413[1][v413[2]] = v411;
													break;
												end
											end
										end});
										v255 = 2;
									end
									if (v255 == 2) then
										for v414 = 1, v79[4] do
											local v415 = 0;
											local v416;
											while true do
												if (v415 == 0) then
													v71 = v71 + 1;
													v416 = v67[v71];
													v415 = 1;
												end
												if (v415 == 1) then
													if (v416[1] == 8) then
														v258[v414 - 1] = {v77,v416[3]};
													else
														v258[v414 - 1] = {v62,v416[3]};
													end
													v76[#v76 + 1] = v258;
													break;
												end
											end
										end
										v77[v79[2]] = v29(v256, v257, v63);
										break;
									end
									if (v255 == 0) then
										v256 = v68[v79[3]];
										v257 = nil;
										v255 = 1;
									end
								end
							else
								v62[v79[3]] = v77[v79[2]];
							end
						elseif (v80 == 76) then
							local v261 = v79[2];
							v77[v261] = v77[v261]();
						else
							local v263 = 0;
							local v264;
							while true do
								if (v263 == 0) then
									v264 = v79[2];
									v77[v264] = v77[v264](v77[v264 + 1]);
									break;
								end
							end
						end
					elseif (v80 <= 90) then
						if (v80 <= 83) then
							if (v80 <= 80) then
								if (v80 <= 78) then
									v77[v79[2]] = v77[v79[3]] / v77[v79[4]];
								elseif (v80 > 79) then
									for v328 = v79[2], v79[3] do
										v77[v328] = nil;
									end
								elseif (v77[v79[2]] < v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 <= 81) then
								local v137 = 0;
								local v138;
								local v139;
								local v140;
								local v141;
								while true do
									if (v137 == 2) then
										for v367 = v138, v72 do
											v141 = v141 + 1;
											v77[v367] = v139[v141];
										end
										break;
									end
									if (v137 == 0) then
										v138 = v79[2];
										v139, v140 = v70(v77[v138](v77[v138 + 1]));
										v137 = 1;
									end
									if (v137 == 1) then
										v72 = (v140 + v138) - 1;
										v141 = 0;
										v137 = 2;
									end
								end
							elseif (v80 > 82) then
								local v265 = v79[2];
								local v266, v267 = v70(v77[v265](v13(v77, v265 + 1, v72)));
								v72 = (v267 + v265) - 1;
								local v268 = 0;
								for v331 = v265, v72 do
									v268 = v268 + 1;
									v77[v331] = v266[v268];
								end
							else
								v77[v79[2]][v79[3]] = v77[v79[4]];
							end
						elseif (v80 <= 86) then
							if (v80 <= 84) then
								if (v77[v79[2]] == v79[4]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 == 85) then
								v77[v79[2]][v79[3]] = v79[4];
							else
								do
									return v77[v79[2]];
								end
							end
						elseif (v80 <= 88) then
							if (v80 > 87) then
								v77[v79[2]][v77[v79[3]]] = v77[v79[4]];
							elseif (v77[v79[2]] == v77[v79[4]]) then
								v71 = v71 + 1;
							else
								v71 = v79[3];
							end
						elseif (v80 == 89) then
							if not v77[v79[2]] then
								v71 = v71 + 1;
							else
								v71 = v79[3];
							end
						elseif (v77[v79[2]] <= v77[v79[4]]) then
							v71 = v71 + 1;
						else
							v71 = v79[3];
						end
					elseif (v80 <= 96) then
						if (v80 <= 93) then
							if (v80 <= 91) then
								if (v77[v79[2]] <= v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 == 92) then
								local v277 = 0;
								local v278;
								while true do
									if (v277 == 0) then
										v278 = v79[2];
										v77[v278](v77[v278 + 1]);
										break;
									end
								end
							else
								local v279 = 0;
								local v280;
								while true do
									if (v279 == 0) then
										v280 = v79[2];
										do
											return v13(v77, v280, v72);
										end
										break;
									end
								end
							end
						elseif (v80 <= 94) then
							if (v77[v79[2]] == v77[v79[4]]) then
								v71 = v71 + 1;
							else
								v71 = v79[3];
							end
						elseif (v80 > 95) then
							local v282 = 0;
							local v283;
							local v284;
							local v285;
							while true do
								if (v282 == 1) then
									v285 = 0;
									for v417 = v283, v79[4] do
										v285 = v285 + 1;
										v77[v417] = v284[v285];
									end
									break;
								end
								if (v282 == 0) then
									v283 = v79[2];
									v284 = {v77[v283](v13(v77, v283 + 1, v72))};
									v282 = 1;
								end
							end
						else
							local v286 = v79[3];
							local v287 = v77[v286];
							for v334 = v286 + 1, v79[4] do
								v287 = v287 .. v77[v334];
							end
							v77[v79[2]] = v287;
						end
					elseif (v80 <= 99) then
						if (v80 <= 97) then
							if (v77[v79[2]] ~= v77[v79[4]]) then
								v71 = v71 + 1;
							else
								v71 = v79[3];
							end
						elseif (v80 == 98) then
							local v290 = v68[v79[3]];
							local v291;
							local v292 = {};
							v291 = v10({}, {__index=function(v335, v336)
								local v337 = v292[v336];
								return v337[1][v337[2]];
							end,__newindex=function(v338, v339, v340)
								local v341 = 0;
								local v342;
								while true do
									if (v341 == 0) then
										v342 = v292[v339];
										v342[1][v342[2]] = v340;
										break;
									end
								end
							end});
							for v343 = 1, v79[4] do
								v71 = v71 + 1;
								local v344 = v67[v71];
								if (v344[1] == 8) then
									v292[v343 - 1] = {v77,v344[3]};
								else
									v292[v343 - 1] = {v62,v344[3]};
								end
								v76[#v76 + 1] = v292;
							end
							v77[v79[2]] = v29(v290, v291, v63);
						else
							local v294 = v77[v79[4]];
							if v294 then
								v71 = v71 + 1;
							else
								v77[v79[2]] = v294;
								v71 = v79[3];
							end
						end
					elseif (v80 <= 101) then
						if (v80 == 100) then
							v77[v79[2]] = v79[3] ~= 0;
						else
							local v296 = v79[2];
							v77[v296](v13(v77, v296 + 1, v72));
						end
					elseif (v80 > 102) then
						v77[v79[2]] = v29(v68[v79[3]], nil, v63);
					else
						v77[v79[2]] = v79[3] ~= 0;
					end
					v71 = v71 + 1;
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
